{
	"info": {
		"_postman_id": "0f3140cf-6d4d-418b-8399-a905bfe18355",
		"name": "NikkiERP - API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33688214"
	},
	"item": [
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "Login - Start",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const payload = pm.response.json();\r",
									"const { attemptId } = payload;\r",
									"attemptId && pm.collectionVariables.set('attemptId', attemptId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subjectType\": \"user\",\r\n    \"username\": \"{{email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_host}}/v1/authn/login/start",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"v1",
								"authn",
								"login",
								"start"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"subjectType\": \"user\",\r\n    \"username\": \"John.Doe-63FUqL@nikkierp.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login/start",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login",
										"start"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 09:40:15 GMT"
								},
								{
									"key": "Content-Length",
									"value": "144"
								}
							],
							"cookie": [],
							"body": "{\n    \"attemptId\": \"01K06Q9HC5KT4QC5E524F1783J\",\n    \"createdAt\": 1752572413,\n    \"currentMethod\": \"password\",\n    \"expiredAt\": 1752572713,\n    \"methods\": [\n        \"password\"\n    ],\n    \"subjectName\": \"John Doe 63FUqL\"\n}"
						},
						{
							"name": "Client error - Email not found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"subjectType\": \"user\",\r\n    \"username\": \"ppppppp@aaaa.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login/start",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:03:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "74"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"username\": \"user email not found\"\n    }\n}"
						},
						{
							"name": "Client error - Invalid subject type",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"subjectType\": \"userrrr\",\r\n    \"username\": \"{{email}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login/start",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login",
										"start"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:04:36 GMT"
								},
								{
									"key": "Content-Length",
									"value": "78"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"subjectType\": \"must be a valid value\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login - Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const payload = pm.response.json();\r",
									"const { attemptId } = payload;\r",
									"attemptId && pm.collectionVariables.set('attemptId', attemptId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_host}}/v1/authn/login",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"v1",
								"authn",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"01K06Q9HC5KT4QC5E524F1783J\",\r\n    \"username\": \"John.Doe-63FUqL@nikkierp.com\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:03:11 GMT"
								},
								{
									"key": "Content-Length",
									"value": "185"
								}
							],
							"cookie": [],
							"body": "{\n    \"done\": true,\n    \"data\": {\n        \"accessToken\": \"TODO\",\n        \"accessTokenExpiredAt\": \"2025-07-15T17:03:11.5992344+07:00\",\n        \"refreshToken\": \"TODO\",\n        \"refreshTokenExpiredAt\": \"2025-07-15T17:03:11.5992344+07:00\"\n    }\n}"
						},
						{
							"name": "Client error - Attempt already settled",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"01K06Q9HC5KT4QC5E524F1783J\",\r\n    \"username\": \"John.Doe-63FUqL@nikkierp.com\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:02:09 GMT"
								},
								{
									"key": "Content-Length",
									"value": "77"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"attemptId\": \"attempt already settled\"\n    }\n}"
						},
						{
							"name": "Client error - Attempt expired",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"01K06Q9HC5KT4QC5E524F1783J\",\r\n    \"username\": \"John.Doe-63FUqL@nikkierp.com\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:21:04 GMT"
								},
								{
									"key": "Content-Length",
									"value": "70"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"attemptId\": \"attempt expired\"\n    }\n}"
						}
					]
				},
				{
					"name": "Password - New",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const requestBody = JSON.parse(pm.request.body.raw);\r",
									"pm.collectionVariables.set('password', requestBody.newPassword);\r",
									"\r",
									"const payload = pm.response.json();\r",
									"const { attemptId } = payload;\r",
									"attemptId && pm.collectionVariables.set('attemptId', attemptId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subjectType\": \"user\",\r\n    \"subjectRef\": \"{{user_id}}\",\r\n    \"newPassword\": \"Passwo0rd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_host}}/v1/authn/passwords/password",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"v1",
								"authn",
								"passwords",
								"password"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:03:11 GMT"
								},
								{
									"key": "Content-Length",
									"value": "185"
								}
							],
							"cookie": [],
							"body": "{\n    \"done\": true,\n    \"data\": {\n        \"accessToken\": \"TODO\",\n        \"accessTokenExpiredAt\": \"2025-07-15T17:03:11.5992344+07:00\",\n        \"refreshToken\": \"TODO\",\n        \"refreshTokenExpiredAt\": \"2025-07-15T17:03:11.5992344+07:00\"\n    }\n}"
						},
						{
							"name": "Client error - Attempt already settled",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:02:09 GMT"
								},
								{
									"key": "Content-Length",
									"value": "77"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"attemptId\": \"invalid attempt status\"\n    }\n}"
						},
						{
							"name": "Client error - Attempt expired",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:21:04 GMT"
								},
								{
									"key": "Content-Length",
									"value": "70"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"attemptId\": \"attempt expired\"\n    }\n}"
						}
					]
				},
				{
					"name": "Password - Change",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const payload = pm.response.json();\r",
									"const { attemptId } = payload;\r",
									"attemptId && pm.collectionVariables.set('attemptId', attemptId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subjectType\": \"user\",\r\n    \"subjectRef\": \"{{user_id}}\",\r\n    \"currentPassword\": \"Passwo0rd\",\r\n    \"newPassword\": \"S3crets!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_host}}/v1/authn/passwords/password",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"v1",
								"authn",
								"passwords",
								"password"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:03:11 GMT"
								},
								{
									"key": "Content-Length",
									"value": "185"
								}
							],
							"cookie": [],
							"body": "{\n    \"done\": true,\n    \"data\": {\n        \"accessToken\": \"TODO\",\n        \"accessTokenExpiredAt\": \"2025-07-15T17:03:11.5992344+07:00\",\n        \"refreshToken\": \"TODO\",\n        \"refreshTokenExpiredAt\": \"2025-07-15T17:03:11.5992344+07:00\"\n    }\n}"
						},
						{
							"name": "Client error - Attempt already settled",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:02:09 GMT"
								},
								{
									"key": "Content-Length",
									"value": "77"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"attemptId\": \"invalid attempt status\"\n    }\n}"
						},
						{
							"name": "Client error - Attempt expired",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"attemptId\": \"{{attemptId}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authn/login",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authn",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Date",
									"value": "Tue, 15 Jul 2025 10:21:04 GMT"
								},
								{
									"key": "Content-Length",
									"value": "70"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"attemptId\": \"attempt expired\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Party",
					"item": []
				},
				{
					"name": "Party Tag",
					"item": [
						{
							"name": "Party Tag - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.text();\r",
											"try {\r",
											"    const payload = JSON.parse(body);\r",
											"    const { id, etag } = payload;\r",
											"    id && pm.collectionVariables.set('partytag_id', id);\r",
											"    etag && pm.collectionVariables.set('etag', etag);\r",
											"} catch (err) {\r",
											"    console.error(err)\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Get original request body as raw text\r",
											"let rawBody = pm.request.body.raw;\r",
											"\r",
											"// Parse it as JSON\r",
											"let payload;\r",
											"try {\r",
											"    payload = JSON.parse(rawBody);\r",
											"} catch (e) {\r",
											"    console.error(\"Failed to parse request body as JSON:\", e);\r",
											"    return;\r",
											"}\r",
											"\r",
											"// Generate a 6-char alphanumeric string\r",
											"function randomString(length = 6) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"const rand = randomString();\r",
											"\r",
											"for (const lang in payload.label) {\r",
											"    payload.label[lang] += ' ' + rand\r",
											"}\r",
											"\r",
											"// Write modified payload back to request\r",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"label\": {\r\n        \"en-US\": \"Pet\",\r\n        \"vi-VN\": \"<b>Thú nuôi</b><script>'hacked'</script>\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/contacts/parties/tags",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"contacts",
										"parties",
										"tags"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"label\": {\r\n        \"en_US\": \"Pet\",\r\n        \"vi_VI\": \"<b>Thú nuôi</b><script>'hacked'</script>\",\r\n        \"fr-FR\": \"animal familier\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jul 2025 18:28:24 GMT"
										},
										{
											"key": "Content-Length",
											"value": "148"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JZZ8TY0V8DHGNV6P1CZTWJJE\",\n    \"etag\": \"1752322373659197900\",\n    \"label\": {\n        \"en-US\": \"Pet 4EmP5W\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid label content",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"label\": {\r\n        \"en-US\": \"Pet\",\r\n        \"vi-VN\": \"<b>Thú nuôi</b><script>alert('You are hacked')</script>\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jul 2025 18:31:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "94"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"label\": \"vi-VN: the length must be between 1 and 50.\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid label lang code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"label\": {\r\n        \"en_US\": \"Pet\",\r\n        \"viet\": \"<b>Thú nuôi</b><script>'hacked'</script>\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sat, 12 Jul 2025 05:54:53 GMT"
										},
										{
											"key": "Content-Length",
											"value": "192"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"label\": \"en_US: must be a valid BCP47-compliant language code with region part; vi_VN: must be a valid BCP47-compliant language code with region part.\"\n    }\n}"
								},
								{
									"name": "Client error - Existing label",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"label\": {\r\n        \"en-US\": \"Pet\",\r\n        \"vi-VN\": \"Thú nuôi\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jul 2025 18:32:44 GMT"
										},
										{
											"key": "Content-Length",
											"value": "90"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"label.en-US\": \"label already exists in this language\",\n        \"label.vi-VN\": \"label already exists in this language\"\n    }\n}"
								}
							]
						},
						{
							"name": "Party Tag - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.text();\r",
											"try {\r",
											"    const payload = JSON.parse(body);\r",
											"    const etag = payload.etag;\r",
											"    etag && pm.collectionVariables.set('etag', etag);\r",
											"} catch (err) {\r",
											"    console.error(err)\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"label\": {\r\n        \"en-US\": \"My Supplier\",\r\n        \"vi-VN\": \"<b>Nhà cung cấp</b><script>hacked</script>\"\r\n    },\r\n    \"etag\": \"{{etag}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/contacts/parties/tags/{{partytag_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"contacts",
										"parties",
										"tags",
										"{{partytag_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"label\": {\r\n        \"en-US\": \"My Supplier\",\r\n        \"vi-VN\": \"<b>Nhà cung cấp</b>\"\r\n    },\r\n    \"etag\": \"{{etag}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JZZ93CSF6J6HKMWJX929QM5J\",\n    \"etag\": \"1752325861208067100\",\n    \"label\": {\n        \"en-US\": \"My Supplier\",\n        \"vi-VN\": \"Nhà cung cấp\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"label\": {\r\n        \"en-US\": \"My Supplier\",\r\n        \"vi-VN\": \"<b>Nhà cung cấp</b><script>alert('You are hacked')</script>\"\r\n    },\r\n    \"etag\": \"{{etag}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"label\": \"vi-VN: the length must be between 1 and 50.\"\n    }\n}"
								},
								{
									"name": "Client error - Unmatched etag",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\r\n    \"displayName\": \"Another Doe\",\r\n    \"etag\": \"fake_etag\",\r\n    \"isActive\": true\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"user has been modified by another process\"\n    }\n}"
								}
							]
						},
						{
							"name": "Party Tag - Get by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.text();\r",
											"try {\r",
											"    const payload = JSON.parse(body);\r",
											"    const etag = payload.etag;\r",
											"    etag && pm.collectionVariables.set('etag', etag);\r",
											"} catch (err) {\r",
											"    console.error(err)\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/contacts/parties/tags/{{partytag_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"contacts",
										"parties",
										"tags",
										"{{partytag_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7M99AQBTXW6ZW590YHNJMK\",\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\n    \"createdAt\": 1749381588402,\n    \"displayName\": \"Another Doe\",\n    \"email\": \"john.doe@nikkierp.com\",\n    \"etag\": \"1749381616327913600\",\n    \"status\": \"active\",\n    \"updatedAt\": 1749381616327\n}"
								},
								{
									"name": "Client error - Invalid ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/01JX2V9CGPA5",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"01JX2V9CGPA5"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/1000000000000000000000000A",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"1000000000000000000000000A"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"user not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Party Tag - List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/contacts/parties/tags",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"contacts",
										"parties",
										"tags"
									]
								}
							},
							"response": [
								{
									"name": "Success - No filter, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jul 2025 18:34:18 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JZXBXSJCPYRVZP4H283WH1XK\",\n            \"etag\": \"1752258504268163800\",\n            \"label\": {\n                \"en_US\": \"Pet hZCvXX\",\n                \"vi_VN\": \"Thú nuôi hZCvXX\"\n            }\n        },\n        {\n            \"id\": \"01JZXC5MVS7K67ZXWXWDB7YKEK\",\n            \"etag\": \"1752258761593385800\",\n            \"label\": {\n                \"en_US\": \"Pet\",\n                \"vi_VN\": \"Thú nuôi\"\n            }\n        },\n        {\n            \"id\": \"01JZXC6VYY5HSMHYQYNMJBD9K4\",\n            \"etag\": \"1752258801630332700\",\n            \"label\": {\n                \"en_US\": \"Pet gsAeXp\",\n                \"vi_VN\": \"Thú nuôi gsAeXp\"\n            }\n        },\n        {\n            \"id\": \"01JZXC863M5067SY51NB8F42ZP\",\n            \"etag\": \"1752258844788769500\",\n            \"label\": {\n                \"en_US\": \"Pet u8xBXP\",\n                \"vi_VN\": \"Thú nuôi u8xBXP\"\n            }\n        },\n        {\n            \"id\": \"01JZXC86KJEVBWJH5W46RYCHG6\",\n            \"etag\": \"1752258845298886000\",\n            \"label\": {\n                \"en_US\": \"Pet lWDUWA\",\n                \"vi_VN\": \"Thú nuôi lWDUWA\"\n            }\n        },\n        {\n            \"id\": \"01JZXC872V8Q9981FND6T2D8CB\",\n            \"etag\": \"1752258845787244200\",\n            \"label\": {\n                \"en_US\": \"Pet C4LeNy\",\n                \"vi_VN\": \"Thú nuôi C4LeNy\"\n            }\n        },\n        {\n            \"id\": \"01JZXC87NAAS2MVAW6Q2Y614XJ\",\n            \"etag\": \"1752258846378421400\",\n            \"label\": {\n                \"en_US\": \"Pet uSSVmS\",\n                \"vi_VN\": \"Thú nuôi uSSVmS\"\n            }\n        },\n        {\n            \"id\": \"01JZXC886WJM0MM1JY4NYXRYS5\",\n            \"etag\": \"1752258846940460300\",\n            \"label\": {\n                \"en_US\": \"Pet xspcrn\",\n                \"vi_VN\": \"Thú nuôi xspcrn\"\n            }\n        },\n        {\n            \"id\": \"01JZXC88RCJNQKGZN70R25905X\",\n            \"etag\": \"1752258847500195600\",\n            \"label\": {\n                \"en_US\": \"Pet aCgozk\",\n                \"vi_VN\": \"Thú nuôi aCgozk\"\n            }\n        },\n        {\n            \"id\": \"01JZXC89B746A7KGCRY5SYXWEG\",\n            \"etag\": \"1752258848103180500\",\n            \"label\": {\n                \"en_US\": \"Pet NgCp2I\",\n                \"vi_VN\": \"Thú nuôi NgCp2I\"\n            }\n        },\n        {\n            \"id\": \"01JZXC89VQ4EYG9E0QN0GCQACK\",\n            \"etag\": \"1752258848631780600\",\n            \"label\": {\n                \"en_US\": \"Pet UM4eM8\",\n                \"vi_VN\": \"Thú nuôi UM4eM8\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8AD5XR332VGV1G329H76\",\n            \"etag\": \"1752258849189680600\",\n            \"label\": {\n                \"en_US\": \"Pet iEufkA\",\n                \"vi_VN\": \"Thú nuôi iEufkA\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8AZP60P81YD0FTX0B89V\",\n            \"etag\": \"1752258849782705600\",\n            \"label\": {\n                \"en_US\": \"Pet OPBGto\",\n                \"vi_VN\": \"Thú nuôi OPBGto\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8BGKJDGSB88G4NKNEN8Z\",\n            \"etag\": \"1752258850323276900\",\n            \"label\": {\n                \"en_US\": \"Pet p5OzTk\",\n                \"vi_VN\": \"Thú nuôi p5OzTk\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8C2PGMEHKMC4X3SNF4W4\",\n            \"etag\": \"1752258850902952900\",\n            \"label\": {\n                \"en_US\": \"Pet aRAzdt\",\n                \"vi_VN\": \"Thú nuôi aRAzdt\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8CMG3F58YCFJMCW5NCT8\",\n            \"etag\": \"1752258851472046100\",\n            \"label\": {\n                \"en_US\": \"Pet 9bhmRd\",\n                \"vi_VN\": \"Thú nuôi 9bhmRd\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8D7KZQWHDN5P883PD7ZF\",\n            \"etag\": \"1752258852083326000\",\n            \"label\": {\n                \"en_US\": \"Pet KiAt1K\",\n                \"vi_VN\": \"Thú nuôi KiAt1K\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8DSJQ6Z408XRPFS9BV04\",\n            \"etag\": \"1752258852658230800\",\n            \"label\": {\n                \"en_US\": \"Pet DtyZCS\",\n                \"vi_VN\": \"Thú nuôi DtyZCS\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8EA1FRE9R9CJGGN4BF8H\",\n            \"etag\": \"1752258853185252900\",\n            \"label\": {\n                \"en_US\": \"Pet 7T3360\",\n                \"vi_VN\": \"Thú nuôi 7T3360\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8EW0NK6SW0XPXBHT1E17\",\n            \"etag\": \"1752258853760453100\",\n            \"label\": {\n                \"en_US\": \"Pet e3SQPC\",\n                \"vi_VN\": \"Thú nuôi e3SQPC\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8FEG71ER4EGN25GG620C\",\n            \"etag\": \"1752258854352822400\",\n            \"label\": {\n                \"en_US\": \"Pet XNFZuF\",\n                \"vi_VN\": \"Thú nuôi XNFZuF\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8G0C414SYWWTN7HB8QN1\",\n            \"etag\": \"1752258854924176900\",\n            \"label\": {\n                \"en_US\": \"Pet jP9kwf\",\n                \"vi_VN\": \"Thú nuôi jP9kwf\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8GG2NV1V11SMMGTMTF5R\",\n            \"etag\": \"1752258855426741200\",\n            \"label\": {\n                \"en_US\": \"Pet wgqT90\",\n                \"vi_VN\": \"Thú nuôi wgqT90\"\n            }\n        },\n        {\n            \"id\": \"01JZXC8H1MBFK0VD911HE6CYDJ\",\n            \"etag\": \"1752258855988838000\",\n            \"label\": {\n                \"en_US\": \"Pet WwWOWx\",\n                \"vi_VN\": \"Thú nuôi WwWOWx\"\n            }\n        },\n        {\n            \"id\": \"01JZXCZFHTPBZ9M29XCWCFE8Z2\",\n            \"etag\": \"1752259608122876000\",\n            \"label\": {\n                \"en_US\": \"Pet SzEEY7\",\n                \"vi_VN\": \"Thú nuôi SzEEY7\"\n            }\n        },\n        {\n            \"id\": \"01JZXCZH6TPNH54KX5E4V64AE9\",\n            \"etag\": \"1752259609818302900\",\n            \"label\": {\n                \"en_US\": \"Pet izvLXW\",\n                \"vi_VN\": \"Thú nuôi izvLXW\"\n            }\n        },\n        {\n            \"id\": \"01JZXCZHVTNA5T4M9FJNV8ND8A\",\n            \"etag\": \"1752259610490109500\",\n            \"label\": {\n                \"en_US\": \"Pet 6M20KV\",\n                \"vi_VN\": \"Thú nuôi 6M20KV\"\n            }\n        },\n        {\n            \"id\": \"01JZXD32YFQG99SK83TZY1JCNT\",\n            \"etag\": \"1752259726287719900\",\n            \"label\": {\n                \"en_US\": \"Pet WRaGLN\",\n                \"vi_VN\": \"Thú nuôi WRaGLN\"\n            }\n        },\n        {\n            \"id\": \"01JZXD5NB1TC95T1XE87EE5V7R\",\n            \"etag\": \"1752259810657945500\",\n            \"label\": {\n                \"en_US\": \"Pet oxSClm\",\n                \"vi_VN\": \"Thú nuôi oxSClm\"\n            }\n        },\n        {\n            \"id\": \"01JZY51PM9ZMVHVTPTWVJD2CHV\",\n            \"etag\": \"1752284846729496100\",\n            \"label\": {\n                \"en_US\": \"Pet NXRAzl\",\n                \"vi_VN\": \"Thú nuôi NXRAzl\"\n            }\n        },\n        {\n            \"id\": \"01JZY7P67ZPC2M4P3HE01RBK3X\",\n            \"etag\": \"1752287615231564600\",\n            \"label\": {\n                \"en_US\": \"Pet OFLXzr\",\n                \"vi_VN\": \"Thú nuôi OFLXzr\"\n            }\n        },\n        {\n            \"id\": \"01JZY7ZY1J0J5DHMQ184V6TV18\",\n            \"etag\": \"1752287986827506100\",\n            \"label\": {\n                \"en_US\": \"My Supplier\",\n                \"vi_VN\": \"Nhà cung cấp\"\n            }\n        }\n    ],\n    \"total\": 32,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No filter, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags?page=1&size=10",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jul 2025 18:35:34 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1306"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"items\": [\n            {\n                \"id\": \"01JZXC89B746A7KGCRY5SYXWEG\",\n                \"etag\": \"1752258848103180500\",\n                \"label\": {\n                    \"en_US\": \"Pet NgCp2I\",\n                    \"vi_VN\": \"Thú nuôi NgCp2I\"\n                }\n            },\n            {\n                \"id\": \"01JZXC89VQ4EYG9E0QN0GCQACK\",\n                \"etag\": \"1752258848631780600\",\n                \"label\": {\n                    \"en_US\": \"Pet UM4eM8\",\n                    \"vi_VN\": \"Thú nuôi UM4eM8\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8AD5XR332VGV1G329H76\",\n                \"etag\": \"1752258849189680600\",\n                \"label\": {\n                    \"en_US\": \"Pet iEufkA\",\n                    \"vi_VN\": \"Thú nuôi iEufkA\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8AZP60P81YD0FTX0B89V\",\n                \"etag\": \"1752258849782705600\",\n                \"label\": {\n                    \"en_US\": \"Pet OPBGto\",\n                    \"vi_VN\": \"Thú nuôi OPBGto\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8BGKJDGSB88G4NKNEN8Z\",\n                \"etag\": \"1752258850323276900\",\n                \"label\": {\n                    \"en_US\": \"Pet p5OzTk\",\n                    \"vi_VN\": \"Thú nuôi p5OzTk\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8C2PGMEHKMC4X3SNF4W4\",\n                \"etag\": \"1752258850902952900\",\n                \"label\": {\n                    \"en_US\": \"Pet aRAzdt\",\n                    \"vi_VN\": \"Thú nuôi aRAzdt\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8CMG3F58YCFJMCW5NCT8\",\n                \"etag\": \"1752258851472046100\",\n                \"label\": {\n                    \"en_US\": \"Pet 9bhmRd\",\n                    \"vi_VN\": \"Thú nuôi 9bhmRd\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8D7KZQWHDN5P883PD7ZF\",\n                \"etag\": \"1752258852083326000\",\n                \"label\": {\n                    \"en_US\": \"Pet KiAt1K\",\n                    \"vi_VN\": \"Thú nuôi KiAt1K\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8DSJQ6Z408XRPFS9BV04\",\n                \"etag\": \"1752258852658230800\",\n                \"label\": {\n                    \"en_US\": \"Pet DtyZCS\",\n                    \"vi_VN\": \"Thú nuôi DtyZCS\"\n                }\n            },\n            {\n                \"id\": \"01JZXC8EA1FRE9R9CJGGN4BF8H\",\n                \"etag\": \"1752258853185252900\",\n                \"label\": {\n                    \"en_US\": \"Pet 7T3360\",\n                    \"vi_VN\": \"Thú nuôi 7T3360\"\n                }\n            }\n        ],\n        \"total\": 25,\n        \"page\": 1,\n        \"size\": 10\n    },\n    \"hasData\": true\n}"
								},
								{
									"name": "Success - With filter, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags?partialLabel=pet",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags"
											],
											"query": [
												{
													"key": "partialLabel",
													"value": "pet"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Fri, 11 Jul 2025 18:41:05 GMT"
										},
										{
											"key": "Content-Length",
											"value": "36"
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"Internal Server Error\"\n}"
								},
								{
									"name": "Success - No result",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"if\":[\"display_name\", \"=\", \"blabla\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"display_name\", \"=\", \"blabla\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"total\": 0,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?page=-1&size=999999999999999999&graph={\"if\":[\"fake-field\", \"=\", \"Owner\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "999999999999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"fake-field\", \"=\", \"Owner\"]}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'fake-field' of entity 'user' in condition '[fake-field = Owner]'\",\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								}
							]
						},
						{
							"name": "Party Tag - Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/contacts/parties/tags/{{partytag_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"contacts",
										"parties",
										"tags",
										"{{partytag_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags/{{partytag_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags",
												"{{partytag_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sat, 12 Jul 2025 02:41:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "28"
										}
									],
									"cookie": [],
									"body": "{\n    \"deletedAt\": 1752288115907\n}"
								},
								{
									"name": "Client error - Invalid ID",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags/10000000000",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags",
												"10000000000"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/contacts/parties/tags/1000000000000000000000000A",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"contacts",
												"parties",
												"tags",
												"1000000000000000000000000A"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"user not found\"\n    }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Identity",
			"item": [
				{
					"name": "Group",
					"item": [
						{
							"name": "Group - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const body = pm.response.text();\r",
											"try {\r",
											"    const payload = JSON.parse(body);\r",
											"    const { id, etag } = payload;\r",
											"    id && pm.collectionVariables.set('group_id', id);\r",
											"    etag && pm.collectionVariables.set('etag', etag);\r",
											"} catch (err) {\r",
											"    console.error(err)\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const rawBody = pm.request.body.raw;\r",
											"const payload = JSON.parse(rawBody);\r",
											"\r",
											"// Generate a 6-char alphanumeric string\r",
											"function randomString(length = 6) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"const rand = randomString();\r",
											"\r",
											"if (payload.name) {\r",
											"    payload.name += ' ' + rand;\r",
											"}\r",
											"if (payload.description) {\r",
											"    payload.description += ' ' + rand;\r",
											"}\r",
											"\r",
											"// Write modified payload back to request\r",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"My Team\",\r\n    \"description\": \"This is my team\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/groups",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"groups"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"My Team\",\r\n    \"description\": \"This is my team\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/groups",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7MFVT6VRTHJ5GFYXVWAMHF\",\n    \"createdAt\": 1749381803848,\n    \"name\": \"My Team\",\n    \"description\": \"This is my team\",\n    \"etag\": \"1749381803846717000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/groups",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"My Team\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/groups",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"group name already exists\"\n    }\n}"
								}
							]
						},
						{
							"name": "Group - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"payload.etag && pm.collectionVariables.set('etag', payload.etag);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Your Team\",\r\n    \"description\": \"The people you are working with\",\r\n    \"etag\": \"{{etag}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"groups",
										"{{group_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Your Team\",\r\n    \"description\": \"The people you are working with\",\r\n    \"etag\": \"{{etag}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"{{group_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7MFVT6VRTHJ5GFYXVWAMHF\",\n    \"createdAt\": 1749381803848,\n    \"name\": \"Your Team\",\n    \"description\": \"The people you are working with\",\n    \"etag\": \"1749381890052750000\",\n    \"updatedAt\": 1749381890052\n}"
								},
								{
									"name": "Client error - Invalid fields Copy",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"etag\": \"{{etag}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"{{group_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Unmatched etag",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Your Team\",\r\n    \"description\": \"The people you are working with\",\r\n    \"etag\": \"fake_etag\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"{{group_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"group has been modified by another user\"\n    }\n}"
								}
							]
						},
						{
							"name": "Group - Get by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"payload.etag && pm.collectionVariables.set('etag', payload.etag);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"groups",
										"{{group_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"{{group_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7MFVT6VRTHJ5GFYXVWAMHF\",\n    \"createdAt\": 1749381803848,\n    \"name\": \"Your Team\",\n    \"description\": \"The people you are working with\",\n    \"etag\": \"1749381890052750000\",\n    \"updatedAt\": 1749382124763\n}"
								},
								{
									"name": "Client error - Invalid ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/01JX2V9CGPA5",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"01JX2V9CGPA5"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/1000000000000000000000000A",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"1000000000000000000000000A"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"group not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Group - Search",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/groups",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"groups"
									]
								}
							},
							"response": [
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNXBR5QJBH7PE9PQ9FW746V\",\n            \"name\": \"Domain Users\",\n            \"description\": \"Default group for all domain users\"\n        },\n        {\n            \"id\": \"01JX7MFVT6VRTHJ5GFYXVWAMHF\",\n            \"name\": \"Your Team\",\n            \"description\": \"The people you are working with\"\n        }\n    ],\n    \"total\": 2,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups?page=0&size=1",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNXBR5QJBH7PE9PQ9FW746V\",\n            \"name\": \"Domain Users\",\n            \"description\": \"Default group for all domain users\"\n        }\n    ],\n    \"total\": 2,\n    \"page\": 0,\n    \"size\": 1\n}"
								},
								{
									"name": "Success - No result",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups?graph={\"if\":[\"name\", \"=\", \"blabla\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"blabla\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"total\": 0,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups?page=-1&size=999999999999999999&graph={\"if\":[\"fakefield\", \"*\", \"team\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "999999999999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"fakefield\", \"*\", \"team\"]}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'fakefield' of entity 'group' in condition '[fakefield * team]'\",\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								},
								{
									"name": "Success - 1-level criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups?graph={\"if\":[\"name\", \"*\", \"team\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"*\", \"team\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JX7MFVT6VRTHJ5GFYXVWAMHF\",\n            \"name\": \"Your Team\",\n            \"description\": \"The people you are working with\"\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 50\n}"
								}
							]
						},
						{
							"name": "Group - Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"groups",
										"{{group_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/{{group_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"{{group_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"deletedAt\": 1749382124763\n}"
								},
								{
									"name": "Client error - Invalid ID",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/10000000000",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"10000000000"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/groups/1000000000000000000000000A",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"groups",
												"1000000000000000000000000A"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"group not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Group - Add / Remove Users",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"add\": [\"01JWNXT3EY7FG47VDJTEPTDC98\", \"01JWNXXTF8958VVYAV33MVVMDN\"],\r\n    \"remove\": [],\r\n    \"etag\": \"{{etag}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/groups/{{group_id}}/manage-users",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"groups",
										"{{group_id}}",
										"manage-users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Organization",
					"item": [
						{
							"name": "Organization - Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const payload = JSON.parse(pm.request.body.raw);\r",
											"\r",
											"// Generate a 6-char alphanumeric string\r",
											"function randomString(length = 6) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"const rand = randomString();\r",
											"\r",
											"if (payload.address) {\r",
											"    payload.address += ' ' + rand;\r",
											"}\r",
											"if (payload.displayName) {\r",
											"    payload.displayName += ' ' + rand;\r",
											"}\r",
											"if (payload.legalName) {\r",
											"    payload.legalName += ' ' + rand;\r",
											"}\r",
											"if (payload.slug) {\r",
											"    payload.slug = `${payload.slug}-${rand}`.toLowerCase();\r",
											"}\r",
											"// Write modified payload back to request\r",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"pm.collectionVariables.set('org_slug', requestBody.slug);\r",
											"\r",
											"const payload = pm.response.json();\r",
											"const { id, etag } = payload;\r",
											"id && pm.collectionVariables.set('org_id', id);\r",
											"etag && pm.collectionVariables.set('etag', etag);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address\": \"123 <b>Ham Nghi st</b>, <a onclick=\\\"alert()\\\">HCM city</a>\",\r\n    \"displayName\": \"<i>Lone Wolf company<i><script>hacked</script>\",\r\n    \"legalName\": \"Cong ty trach nhiem huu han Mot thanh vien Mot Minh Tui - Lone Wolf Co. Ltd.\",\r\n    \"slug\": \"lone-wolf\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/organizations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"organizations"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"address\": \"123 <b>Ham Nghi st</b>, <a onclick=\\\"alert()\\\">HCM city</a>\",\r\n    \"displayName\": \"<i>Lone Wolf company<i><script>hacked</script>\",\r\n    \"legalName\": \"Cong ty trach nhiem huu han Mot thanh vien Mot Minh Tui - Lone Wolf Co. Ltd.\",\r\n    \"slug\": \"lone-wolf\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 13 Jul 2025 16:24:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "293"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K029MDN8BH7DK40VBRWK9HZG\",\n    \"address\": \"123 Ham Nghi st, HCM city\",\n    \"createdAt\": 1752423872223,\n    \"displayName\": \"Lone Wolf company\",\n    \"legalName\": \"Cong ty trach nhiem huu han Mot thanh vien Mot Minh Tui - Lone Wolf Co. Ltd.\",\n    \"slug\": \"lone-wolf\",\n    \"status\": \"inactive\",\n    \"etag\": \"1752423872168833500\"\n}"
								},
								{
									"name": "Client error - Existing slug",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"address\": \"123 <b>Ham Nghi st</b>, <a onclick=\\\"alert()\\\">HCM city</a>\",\r\n    \"displayName\": \"<i>Lone Wolf company<i><script>hacked</script>\",\r\n    \"legalName\": \"Cong ty trach nhiem huu han Mot thanh vien Mot Minh Tui - Lone Wolf Co. Ltd.\",\r\n    \"slug\": \"lone-wolf\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 02:25:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "77"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"slug\": \"organization slug already exists\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 02:23:11 GMT"
										},
										{
											"key": "Content-Length",
											"value": "97"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"address\": \"is required\",\n        \"displayName\": \"is required\",\n        \"legalName\": \"is required\",\n        \"slug\": \"cannot be blank\"\n    }\n}"
								}
							]
						},
						{
							"name": "Organization - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"const { etag } = payload;\r",
											"etag && pm.collectionVariables.set('etag', etag);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"address\": \"291 An Duong Vuong , Phuong 3 , TP.HCM\",\r\n    \"displayName\": \"Company Zalo\",\r\n    \"phoneNumber\": \"023424234234\",\r\n    \"etag\": \"{{etag}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/organizations/{{org_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"organizations",
										"{{org_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"address\": \"1324dad Duong\",\r\n    \"displayName\": \"dsadasdsa\",\r\n    \"phoneNumber\": \"023424234234\",\r\n    \"etag\": \"1751511021090000600\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd12321",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd12321"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:03:48 GMT"
										},
										{
											"key": "Content-Length",
											"value": "236"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JZ732DH26QKRS7DMEFHADPWF\",\n    \"createdAt\": 1751511021090,\n    \"displayName\": \"dsadasdsa\",\n    \"address\": \"1324dad Duong\",\n    \"phoneNumber\": \"023424234234\",\n    \"slug\": \"asd12321\",\n    \"status\": \"inactive\",\n    \"etag\": \"1751511021090000600\",\n    \"updatedAt\": 1751511828189\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"address\": \"1324dad Duong\",\r\n    \"displayName\": \"dsadasdsa\",\r\n    \"phoneNumber\": \"023424234234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd12321",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd12321"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 02:30:22 GMT"
										},
										{
											"key": "Content-Length",
											"value": "65"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Etag mismatch",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"address\": \"1324dad Duong\",\r\n    \"displayName\": \"dsadasdsa\",\r\n    \"phoneNumber\": \"023424234234\",\r\n    \"etag\": \"1751509443073888600\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd12321",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd12321"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 02:35:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"etag mismatch\"\n    }\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"address\": \"1324dad Duong\",\r\n    \"displayName\": \"dsadasdsa\",\r\n    \"phoneNumber\": \"023424234234\",\r\n    \"etag\": \"1751511021090000600\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd1232",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd1232"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:04:39 GMT"
										},
										{
											"key": "Content-Length",
											"value": "72"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"slug\": \"organization not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Organization - Get By Slug",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"const { etag } = payload;\r",
											"etag && pm.collectionVariables.set('etag', etag);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/organizations/{{org_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"organizations",
										"{{org_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd12321",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd12321"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:06:33 GMT"
										},
										{
											"key": "Content-Length",
											"value": "236"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JZ732DH26QKRS7DMEFHADPWF\",\n    \"createdAt\": 1751511021090,\n    \"displayName\": \"dsadasdsa\",\n    \"address\": \"1324dad Duong\",\n    \"phoneNumber\": \"023424234234\",\n    \"slug\": \"asd12321\",\n    \"status\": \"inactive\",\n    \"etag\": \"1751511021090000600\",\n    \"updatedAt\": 1751511828189\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd1232",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd1232"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:07:44 GMT"
										},
										{
											"key": "Content-Length",
											"value": "72"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"slug\": \"organization not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Organization - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/organizations?page=0&size=3",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "3"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - No criteria, No paging, No Orgs",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:25:44 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1009"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNY20G23KD4RV5VWYABQYHD\",\n            \"displayName\": \"My Company\",\n            \"slug\": \"my-company\",\n            \"status\": \"active\",\n            \"createdAt\": 1749530459660\n        },\n        {\n            \"id\": \"org-001\",\n            \"displayName\": \"Appota Group\",\n            \"slug\": \"appota-group\",\n            \"status\": \"active\",\n            \"createdAt\": 1749590566262,\n            \"updatedAt\": 1749590566262\n        },\n        {\n            \"id\": \"01JZ5C4ZGEZKDGT03PNMSVZK86\",\n            \"displayName\": \"dadasde43242\",\n            \"slug\": \"abc123\",\n            \"status\": \"inactive\",\n            \"createdAt\": 1751453433358\n        },\n        {\n            \"id\": \"01JZ5DBEE6JJ6QFZF5E3V8WZ4G\",\n            \"displayName\": \"dadasde4324dsadsa2\",\n            \"slug\": \"abc12dad3\",\n            \"status\": \"inactive\",\n            \"createdAt\": 1751454693830\n        },\n        {\n            \"id\": \"01JZ5DFCD8S8KS7M0A87M2Z0GQ\",\n            \"displayName\": \"dadasddsae4324dsadsa2\",\n            \"slug\": \"abc12dsadad3\",\n            \"status\": \"inactive\",\n            \"createdAt\": 1751454822824\n        },\n        {\n            \"id\": \"01JZ5DJDEA0JDA6ZZZ14QBQZKP\",\n            \"displayName\": \"dadasddsdaae4324dsadsa2\",\n            \"slug\": \"abc12dsadad3sa\",\n            \"status\": \"inactive\",\n            \"createdAt\": 1751454935554\n        },\n        {\n            \"id\": \"01JZ732DH26QKRS7DMEFHADPWF\",\n            \"displayName\": \"dsadasdsa\",\n            \"slug\": \"asd12321\",\n            \"status\": \"inactive\",\n            \"createdAt\": 1751511021090,\n            \"updatedAt\": 1751511828189\n        }\n    ],\n    \"total\": 7,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations?page=0&size=3",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:36:24 GMT"
										},
										{
											"key": "Content-Length",
											"value": "432"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNY20G23KD4RV5VWYABQYHD\",\n            \"displayName\": \"My Company\",\n            \"slug\": \"my-company\",\n            \"status\": \"active\",\n            \"createdAt\": 1749530459660\n        },\n        {\n            \"id\": \"org-001\",\n            \"displayName\": \"Appota Group\",\n            \"slug\": \"appota-group\",\n            \"status\": \"active\",\n            \"createdAt\": 1749590566262,\n            \"updatedAt\": 1749590566262\n        },\n        {\n            \"id\": \"01JZ5C4ZGEZKDGT03PNMSVZK86\",\n            \"displayName\": \"dadasde43242\",\n            \"slug\": \"abc123\",\n            \"status\": \"inactive\",\n            \"createdAt\": 1751453433358\n        }\n    ],\n    \"total\": 7,\n    \"page\": 0,\n    \"size\": 3\n}"
								}
							]
						},
						{
							"name": "Organization - Delete",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/organizations/{{org_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"organizations",
										"{{org_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd12321",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd12321"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:37:57 GMT"
										},
										{
											"key": "Content-Length",
											"value": "28"
										}
									],
									"cookie": [],
									"body": "{\n    \"deletedAt\": 1751513877506\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/organizations/asd12321",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"organizations",
												"asd12321"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Thu, 03 Jul 2025 03:38:10 GMT"
										},
										{
											"key": "Content-Length",
											"value": "72"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"slug\": \"organization not found\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "User - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"pm.collectionVariables.set('email', requestBody.email);\r",
											"\r",
											"const payload = pm.response.json();\r",
											"const { id, etag } = payload;\r",
											"id && pm.collectionVariables.set('user_id', id);\r",
											"etag && pm.collectionVariables.set('etag', etag);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const payload = JSON.parse(rawBody);\r",
											"\r",
											"// Generate a 6-char alphanumeric string\r",
											"function randomString(length = 6) {\r",
											"    const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        result += chars.charAt(Math.floor(Math.random() * chars.length));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"const rand = randomString();\r",
											"\r",
											"if (payload.displayName) {\r",
											"    payload.displayName += ' ' + rand;\r",
											"}\r",
											"if (payload.email && payload.email.includes('@')) {\r",
											"    const [local, domain] = payload.email.split('@');\r",
											"    payload.email = `${local}-${rand}@${domain}`;\r",
											"}\r",
											"\r",
											"// Write modified payload back to request\r",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\": \"John Doe\",\r\n    \"email\": \"john.doe@nikkierp.com\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/users",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"displayName\": \"John Doe\",\r\n    \"email\": \"john.doe@nikkierp.com\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7M99AQBTXW6ZW590YHNJMK\",\n    \"createdAt\": 1749381588402,\n    \"displayName\": \"John Doe\",\n    \"email\": \"john.doe@nikkierp.com\",\n    \"etag\": \"1749381588311993500\",\n    \"status\": \"active\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"nobody@\",\r\n    \"password\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"displayName\": \"cannot be blank\",\n        \"email\": \"must be a valid email address\",\n        \"passwordRaw\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Existing email",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"displayName\": \"John Doe\",\r\n    \"email\": \"john.doe@nikkierp.com\",\r\n    \"password\": \"p@sswo0rd\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"email\": \"email already exists\"\n    }\n}"
								}
							]
						},
						{
							"name": "User - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"const { etag } = payload;\r",
											"etag && pm.collectionVariables.set('etag', etag);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\r\n    \"displayName\": \"Another Doe\",\r\n    \"etag\": \"{{etag}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\r\n    \"displayName\": \"Another Doe\",\r\n    \"etag\": \"{{etag}}\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7M99AQBTXW6ZW590YHNJMK\",\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\n    \"createdAt\": 1749381588402,\n    \"displayName\": \"Another Doe\",\n    \"email\": \"john.doe@nikkierp.com\",\n    \"etag\": \"1749381616327913600\",\n    \"status\": \"active\",\n    \"updatedAt\": 1749381616327\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"avatarUrl\": \"\",\r\n    \"displayName\": \"\",\r\n    \"email\": \"\",\r\n    \"etag\": \"{{etag}}\",\r\n    \"password\": \"\",\r\n    \"isActive\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"displayName\": \"cannot be blank\",\n        \"email\": \"cannot be blank\",\n        \"passwordRaw\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Unmatched etag",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\r\n    \"displayName\": \"Another Doe\",\r\n    \"etag\": \"fake_etag\",\r\n    \"isActive\": true\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"user has been modified by another user\"\n    }\n}"
								}
							]
						},
						{
							"name": "User - Get by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"const { etag } = payload;\r",
											"etag && pm.collectionVariables.set('etag', etag);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JX7M99AQBTXW6ZW590YHNJMK\",\n    \"avatarUrl\": \"https://avatar.com/me.jpg\",\n    \"createdAt\": 1749381588402,\n    \"displayName\": \"Another Doe\",\n    \"email\": \"john.doe@nikkierp.com\",\n    \"etag\": \"1749381616327913600\",\n    \"status\": \"active\",\n    \"updatedAt\": 1749381616327\n}"
								},
								{
									"name": "Client error - Invalid ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/01JX2V9CGPA5",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"01JX2V9CGPA5"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/1000000000000000000000000A",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"1000000000000000000000000A"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"user not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "User - Search",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/users",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Lạc Long Quân\",\n            \"email\": \"dragon@domain.com\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Âu Cơ\",\n            \"email\": \"fairy@domain.com\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JX2THMS38ZFVZT88XBAXMXXB\",\n            \"displayName\": \"Rein Chau 2\",\n            \"email\": \"rein.chau@corevision.vn\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JX333DHEJW68EKNBMZS1SKPJ\",\n            \"displayName\": \"Another Doe\",\n            \"email\": \"john.doe@nikkierp.com\",\n            \"status\": \"inactive\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?page=0&size=3",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Lạc Long Quân\",\n            \"email\": \"dragon@domain.com\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 3\n}"
								},
								{
									"name": "Success - No result",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"if\":[\"display_name\", \"=\", \"blabla\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"display_name\", \"=\", \"blabla\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"total\": 0,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?page=-1&size=999999999999999999&graph={\"if\":[\"fake-field\", \"=\", \"Owner\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "999999999999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"fake-field\", \"=\", \"Owner\"]}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'fake-field' of entity 'user' in condition '[fake-field = Owner]'\",\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								},
								{
									"name": "Success - If root field",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"if\":[\"display_name\", \"=\", \"Owner\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"display_name\", \"=\", \"Owner\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - If edge root field",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"if\": [\"user_status.value\", \"!=\", \"active\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\": [\"user_status.value\", \"!=\", \"active\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 10:50:33 GMT"
										},
										{
											"key": "Content-Length",
											"value": "341"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Lạc Long Quân\",\n            \"email\": \"dragon@domain.com\",\n            \"status\": \"locked\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Âu Cơ\",\n            \"email\": \"fairy@domain.com\",\n            \"status\": \"archived\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 2,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - If and",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"and\":[{\"if\":[\"display_name\", \"!=\", \"Owner\"]},{\"if\": [\"user_status.value\", \"^\", \"a\"]}]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"and\":[{\"if\":[\"display_name\", \"!=\", \"Owner\"]},{\"if\": [\"user_status.value\", \"^\", \"a\"]}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 16:58:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "491"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Gấu ngủ đông\",\n            \"email\": \"bear@nikki.com\",\n            \"status\": \"archived\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFFDKY8T4JB8R6NSY1331J\",\n            \"displayName\": \"Ă. Test người dùng\",\n            \"email\": \"a@nikki.com\",\n            \"status\": \"a_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 3,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - If or",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"or\":[{\"if\":[\"display_name\", \"=\", \"Owner\"]},{\"if\": [\"user_status.value\", \"*\", \"test\"]}]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"or\":[{\"if\":[\"display_name\", \"=\", \"Owner\"]},{\"if\": [\"user_status.value\", \"*\", \"test\"]}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 16:59:43 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1159"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFDH0N51Q3BFQFMFFGSCSV\",\n            \"displayName\": \"đ. Test người dùng\",\n            \"email\": \"d@nikki.com\",\n            \"status\": \"d_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFF9QEXH71P2CG9Y9MY8MM\",\n            \"displayName\": \"Ơ. Test người dùng\",\n            \"email\": \"ow@nikki.com\",\n            \"status\": \"ow_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFFDKY8T4JB8R6NSY1331J\",\n            \"displayName\": \"Ă. Test người dùng\",\n            \"email\": \"a@nikki.com\",\n            \"status\": \"a_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFGVKZCTV7S310W0BDMWCS\",\n            \"displayName\": \"Ợ. Test người dùng\",\n            \"email\": \"owj@nikki.com\",\n            \"status\": \"owj_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFY6EXRG0959Z95Y2EM3AM\",\n            \"displayName\": \"Ồ. Test người dùng\",\n            \"email\": \"oh@nikki.com\",\n            \"status\": \"oh_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFZFK6GM2D5X6MYHWH6FND\",\n            \"displayName\": \"Ớ. Test người dùng\",\n            \"email\": \"ows@nikki.com\",\n            \"status\": \"ows_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 7,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - If and or nested",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"or\":[{\"if\":[\"display_name\", \"=\", \"Owner\"]},{\"and\":[{\"if\": [\"user_status.value\", \"*\", \"o\"]},{\"if\": [\"user_status.value\", \"*\", \"w\"]}]}]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"or\":[{\"if\":[\"display_name\", \"=\", \"Owner\"]},{\"and\":[{\"if\": [\"user_status.value\", \"*\", \"o\"]},{\"if\": [\"user_status.value\", \"*\", \"w\"]}]}]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 17:02:42 GMT"
										},
										{
											"key": "Content-Length",
											"value": "670"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFF9QEXH71P2CG9Y9MY8MM\",\n            \"displayName\": \"Ơ. Test người dùng\",\n            \"email\": \"ow@nikki.com\",\n            \"status\": \"ow_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFGVKZCTV7S310W0BDMWCS\",\n            \"displayName\": \"Ợ. Test người dùng\",\n            \"email\": \"owj@nikki.com\",\n            \"status\": \"owj_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFZFK6GM2D5X6MYHWH6FND\",\n            \"displayName\": \"Ớ. Test người dùng\",\n            \"email\": \"ows@nikki.com\",\n            \"status\": \"ows_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 4,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - Order by root field",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"order\": [[\"display_name\", \"desc\"]]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"order\": [[\"display_name\", \"desc\"]]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 10:52:26 GMT"
										},
										{
											"key": "Content-Length",
											"value": "605"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Thần sức mạnh bị xích\",\n            \"email\": \"power@nikki.com\",\n            \"status\": \"locked\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFGVKZCTV7S310W0BDMWCS\",\n            \"displayName\": \"Ợ. Test người dùng\",\n            \"email\": \"owj@nikki.com\",\n            \"status\": \"owj_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFZFK6GM2D5X6MYHWH6FND\",\n            \"displayName\": \"Ớ. Test người dùng\",\n            \"email\": \"ows@nikki.com\",\n            \"status\": \"ows_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFF9QEXH71P2CG9Y9MY8MM\",\n            \"displayName\": \"Ơ. Test người dùng\",\n            \"email\": \"ow@nikki.com\",\n            \"status\": \"ow_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFY6EXRG0959Z95Y2EM3AM\",\n            \"displayName\": \"Ồ. Test người dùng\",\n            \"email\": \"oh@nikki.com\",\n            \"status\": \"oh_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Gấu ngủ đông\",\n            \"email\": \"bear@nikki.com\",\n            \"status\": \"archived\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFDH0N51Q3BFQFMFFGSCSV\",\n            \"displayName\": \"đ. Test người dùng\",\n            \"email\": \"d@nikki.com\",\n            \"status\": \"d_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFFDKY8T4JB8R6NSY1331J\",\n            \"displayName\": \"Ă. Test người dùng\",\n            \"email\": \"a@nikki.com\",\n            \"status\": \"a_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 10,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - Order by edge root field",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"order\": [[\"user_status.value\", \"desc\"]]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"order\": [[\"user_status.value\", \"desc\"]]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 10:54:40 GMT"
										},
										{
											"key": "Content-Length",
											"value": "605"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JZQFZFK6GM2D5X6MYHWH6FND\",\n            \"displayName\": \"Ớ. Test người dùng\",\n            \"email\": \"ows@nikki.com\",\n            \"status\": \"ows_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFGVKZCTV7S310W0BDMWCS\",\n            \"displayName\": \"Ợ. Test người dùng\",\n            \"email\": \"owj@nikki.com\",\n            \"status\": \"owj_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFF9QEXH71P2CG9Y9MY8MM\",\n            \"displayName\": \"Ơ. Test người dùng\",\n            \"email\": \"ow@nikki.com\",\n            \"status\": \"ow_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFY6EXRG0959Z95Y2EM3AM\",\n            \"displayName\": \"Ồ. Test người dùng\",\n            \"email\": \"oh@nikki.com\",\n            \"status\": \"oh_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Thần sức mạnh bị xích\",\n            \"email\": \"power@nikki.com\",\n            \"status\": \"locked\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFDH0N51Q3BFQFMFFGSCSV\",\n            \"displayName\": \"đ. Test người dùng\",\n            \"email\": \"d@nikki.com\",\n            \"status\": \"d_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Gấu ngủ đông\",\n            \"email\": \"bear@nikki.com\",\n            \"status\": \"archived\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFFDKY8T4JB8R6NSY1331J\",\n            \"displayName\": \"Ă. Test người dùng\",\n            \"email\": \"a@nikki.com\",\n            \"status\": \"a_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 10,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - Order by edge JSON subfield",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"order\": [[\"user_status.label.vi_VN\", \"desc\"]]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"order\": [[\"user_status.label.vi_VN\", \"desc\"]]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 10:55:53 GMT"
										},
										{
											"key": "Content-Length",
											"value": "605"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Thần sức mạnh bị xích\",\n            \"email\": \"power@nikki.com\",\n            \"status\": \"locked\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFGVKZCTV7S310W0BDMWCS\",\n            \"displayName\": \"Ợ. Test người dùng\",\n            \"email\": \"owj@nikki.com\",\n            \"status\": \"owj_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFZFK6GM2D5X6MYHWH6FND\",\n            \"displayName\": \"Ớ. Test người dùng\",\n            \"email\": \"ows@nikki.com\",\n            \"status\": \"ows_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFF9QEXH71P2CG9Y9MY8MM\",\n            \"displayName\": \"Ơ. Test người dùng\",\n            \"email\": \"ow@nikki.com\",\n            \"status\": \"ow_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFY6EXRG0959Z95Y2EM3AM\",\n            \"displayName\": \"Ồ. Test người dùng\",\n            \"email\": \"oh@nikki.com\",\n            \"status\": \"oh_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Gấu ngủ đông\",\n            \"email\": \"bear@nikki.com\",\n            \"status\": \"archived\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFDH0N51Q3BFQFMFFGSCSV\",\n            \"displayName\": \"đ. Test người dùng\",\n            \"email\": \"d@nikki.com\",\n            \"status\": \"d_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JZQFFDKY8T4JB8R6NSY1331J\",\n            \"displayName\": \"Ă. Test người dùng\",\n            \"email\": \"a@nikki.com\",\n            \"status\": \"a_test_status\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 10,\n    \"page\": 0,\n    \"size\": 50\n}"
								}
							]
						},
						{
							"name": "User - Search By Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/users?graph={\"if\":[\"groups.id\", \"=\", \"{{group_id}}\"]}&withGroups=true",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users"
									],
									"query": [
										{
											"key": "graph",
											"value": "{\"if\":[\"groups.id\", \"=\", \"{{group_id}}\"]}"
										},
										{
											"key": "withGroups",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Lạc Long Quân\",\n            \"email\": \"dragon@domain.com\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXXTF8958VVYAV33MVVMDN\",\n            \"displayName\": \"Âu Cơ\",\n            \"email\": \"fairy@domain.com\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JX2THMS38ZFVZT88XBAXMXXB\",\n            \"displayName\": \"Rein Chau 2\",\n            \"email\": \"rein.chau@corevision.vn\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JX333DHEJW68EKNBMZS1SKPJ\",\n            \"displayName\": \"Another Doe\",\n            \"email\": \"john.doe@nikkierp.com\",\n            \"status\": \"inactive\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?page=0&size=3",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"displayName\": \"System\",\n            \"email\": \"system\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        },\n        {\n            \"id\": \"01JWNXT3EY7FG47VDJTEPTDC98\",\n            \"displayName\": \"Lạc Long Quân\",\n            \"email\": \"dragon@domain.com\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 3\n}"
								},
								{
									"name": "Success - No result",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"if\":[\"display_name\", \"=\", \"blabla\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"display_name\", \"=\", \"blabla\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [],\n    \"total\": 0,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?page=-1&size=999999999999999999&graph={\"if\":[\"fake-field\", \"=\", \"Owner\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "999999999999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"fake-field\", \"=\", \"Owner\"]}"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'fake-field' of entity 'user' in condition '[fake-field = Owner]'\",\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								},
								{
									"name": "Success - 1-level criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users?graph={\"if\":[\"display_name\", \"=\", \"Owner\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"display_name\", \"=\", \"Owner\"]}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"displayName\": \"Owner\",\n            \"email\": \"owner\",\n            \"status\": \"active\",\n            \"groups\": [],\n            \"hierarchies\": [],\n            \"orgs\": []\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 50\n}"
								}
							]
						},
						{
							"name": "User - Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users",
										"{{user_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/{{user_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"{{user_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"deletedAt\": 1749382124763\n}"
								},
								{
									"name": "Client error - Invalid ID",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/10000000000",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"10000000000"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/1000000000000000000000000A",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"1000000000000000000000000A"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"user not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "User - List Statuses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/users/statuses",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"users",
										"statuses"
									]
								}
							},
							"response": [
								{
									"name": "Success - No sort",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/statuses",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"statuses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 11:20:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "540"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JZK0R9WF30HMABN7XSW4YNFV\",\n            \"etag\": \"1752061451661878000\",\n            \"label\": {\n                \"en_US\": \"Active\",\n                \"vi_VN\": \"Đang hoạt động\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"active\"\n        },\n        {\n            \"id\": \"01JZK1458230BQ8C592CABM0RK\",\n            \"etag\": \"1752061451662380000\",\n            \"label\": {\n                \"en_US\": \"Locked\",\n                \"vi_VN\": \"Tạm khóa\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"locked\"\n        },\n        {\n            \"id\": \"01JZK15TKR71RH6PAB9ZRMKNHQ\",\n            \"etag\": \"1752061451662389000\",\n            \"label\": {\n                \"en_US\": \"Archived\",\n                \"vi_VN\": \"Ngưng hoạt động\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"archived\"\n        },\n        {\n            \"id\": \"01JZQF16QGN1YA1R6MKA0W7F0H\",\n            \"etag\": \"1752061451662393000\",\n            \"label\": {\n                \"en_US\": \"d. Test status\",\n                \"vi_VN\": \"đ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"d_test_status\"\n        },\n        {\n            \"id\": \"01JZQF3DQ7R57B3TZNV417CZ3M\",\n            \"etag\": \"1752061451662396000\",\n            \"label\": {\n                \"en_US\": \"ow. Test status\",\n                \"vi_VN\": \"Ơ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"ow_test_status\"\n        },\n        {\n            \"id\": \"01JZQEYPYFPCE26P46X437F2DM\",\n            \"etag\": \"1752061451662400000\",\n            \"label\": {\n                \"en_US\": \"A. Test status\",\n                \"vi_VN\": \"Ă. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"a_test_status\"\n        },\n        {\n            \"id\": \"01JZQF66HR1KEAF528M3RH7A1K\",\n            \"etag\": \"1752061451662403000\",\n            \"label\": {\n                \"en_US\": \"owj. Test status\",\n                \"vi_VN\": \"Ợ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"owj_test_status\"\n        },\n        {\n            \"id\": \"01JZQF2MM3CH282SRVXWHS0V1T\",\n            \"etag\": \"1752061451662406000\",\n            \"label\": {\n                \"en_US\": \"oh. Test status\",\n                \"vi_VN\": \"Ồ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"oh_test_status\"\n        },\n        {\n            \"id\": \"01JZQF4JBFRYV9THX9ZCT2P19J\",\n            \"etag\": \"1752061451662409000\",\n            \"label\": {\n                \"en_US\": \"ows. Test status\",\n                \"vi_VN\": \"Ớ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"ows_test_status\"\n        }\n    ],\n    \"total\": 9,\n    \"page\": 0,\n    \"size\": 0\n}"
								},
								{
									"name": "Success - Sort by label language",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/statuses?sortedByLang=vi_VN",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"statuses"
											],
											"query": [
												{
													"key": "sortedByLang",
													"value": "vi_VN"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 11:21:20 GMT"
										},
										{
											"key": "Content-Length",
											"value": "540"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JZQEYPYFPCE26P46X437F2DM\",\n            \"etag\": \"1752061451662400000\",\n            \"label\": {\n                \"en_US\": \"A. Test status\",\n                \"vi_VN\": \"Ă. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"a_test_status\"\n        },\n        {\n            \"id\": \"01JZQF16QGN1YA1R6MKA0W7F0H\",\n            \"etag\": \"1752061451662393000\",\n            \"label\": {\n                \"en_US\": \"d. Test status\",\n                \"vi_VN\": \"đ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"d_test_status\"\n        },\n        {\n            \"id\": \"01JZK0R9WF30HMABN7XSW4YNFV\",\n            \"etag\": \"1752061451661878000\",\n            \"label\": {\n                \"en_US\": \"Active\",\n                \"vi_VN\": \"Đang hoạt động\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"active\"\n        },\n        {\n            \"id\": \"01JZK15TKR71RH6PAB9ZRMKNHQ\",\n            \"etag\": \"1752061451662389000\",\n            \"label\": {\n                \"en_US\": \"Archived\",\n                \"vi_VN\": \"Ngưng hoạt động\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"archived\"\n        },\n        {\n            \"id\": \"01JZQF2MM3CH282SRVXWHS0V1T\",\n            \"etag\": \"1752061451662406000\",\n            \"label\": {\n                \"en_US\": \"oh. Test status\",\n                \"vi_VN\": \"Ồ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"oh_test_status\"\n        },\n        {\n            \"id\": \"01JZQF3DQ7R57B3TZNV417CZ3M\",\n            \"etag\": \"1752061451662396000\",\n            \"label\": {\n                \"en_US\": \"ow. Test status\",\n                \"vi_VN\": \"Ơ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"ow_test_status\"\n        },\n        {\n            \"id\": \"01JZQF4JBFRYV9THX9ZCT2P19J\",\n            \"etag\": \"1752061451662409000\",\n            \"label\": {\n                \"en_US\": \"ows. Test status\",\n                \"vi_VN\": \"Ớ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"ows_test_status\"\n        },\n        {\n            \"id\": \"01JZQF66HR1KEAF528M3RH7A1K\",\n            \"etag\": \"1752061451662403000\",\n            \"label\": {\n                \"en_US\": \"owj. Test status\",\n                \"vi_VN\": \"Ợ. Test xì ta tớt\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"owj_test_status\"\n        },\n        {\n            \"id\": \"01JZK1458230BQ8C592CABM0RK\",\n            \"etag\": \"1752061451662380000\",\n            \"label\": {\n                \"en_US\": \"Locked\",\n                \"vi_VN\": \"Tạm khóa\"\n            },\n            \"type\": \"ident_user_status\",\n            \"value\": \"locked\"\n        }\n    ],\n    \"total\": 9,\n    \"page\": 0,\n    \"size\": 0\n}"
								},
								{
									"name": "Client error - Invalid language code",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/users/statuses?sortedByLang=vi_V",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"users",
												"statuses"
											],
											"query": [
												{
													"key": "sortedByLang",
													"value": "vi_V"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Wed, 09 Jul 2025 11:21:57 GMT"
										},
										{
											"key": "Content-Length",
											"value": "83"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"sortedByLang\": \"must be in a valid format\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Hierarchy",
					"item": [
						{
							"name": "Hierarchy - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Giam Doc Cong ty Co Phan ABC\",\r\n    \"orgID\": \"01JZVRG5C981ZZD5943T68RPK2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/hierarchy",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"hierarchy"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Giam Doc Cong ty Co Phan ABC\",\r\n    \"orgID\": \"01JZVRG5C981ZZD5943T68RPK2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 08:49:28 GMT"
										},
										{
											"key": "Content-Length",
											"value": "91"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0KGC750TE17K9RKG1GWQ6GN\",\n    \"createdAt\": 1753001368824,\n    \"etag\": \"1753001368737333700\"\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Giam Doc Cong ty Co Phan ABC\",\r\n    \"orgID\": \"01JZVRG5C981ZZD5943T68RPK2\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 08:51:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "85"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"hierarchy level name already exists\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 08:53:22 GMT"
										},
										{
											"key": "Content-Length",
											"value": "91"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"Name\": \"cannot be blank\",\n        \"OrgId\": \"cannot be blank\"\n    }\n}"
								}
							]
						},
						{
							"name": "Hierarchy - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const payload = pm.response.json();\r",
											"const { etag } = payload;\r",
											"etag && pm.collectionVariables.set('etag', etag);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Ngan Hang MBank\",\r\n    \"parentId\" : \"01K0G5JN9AGHPT5R9C1JS2PGW5\",\r\n    \"etag\" : \"{{etag}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/identity/hierarchy/{{hierarchy_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"hierarchy",
										"{{hierarchy_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Ngan Hang MBank\",\r\n    \"parentId\" : \"01K0G5JN9AGHPT5R9C1JS2PGW5\",\r\n    \"etag\" : \"{{etag}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{hierarchy_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{hierarchy_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 08:59:09 GMT"
										},
										{
											"key": "Content-Length",
											"value": "91"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0KGC750TE17K9RKG1GWQ6GN\",\n    \"updatedAt\": 1753001949175,\n    \"etag\": \"1753001949175052300\"\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Ngan Hang MBank\",\r\n    \"parentId\" : \"01K0G5JN9AGHPT5R9C1JS2PGW5\",\r\n    \"etag\" : \"{{etag}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{hierarchy_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{hierarchy_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:19:17 GMT"
										},
										{
											"key": "Content-Length",
											"value": "73"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"hierarchy level not found\"\n    }\n}"
								},
								{
									"name": "Client error - Etag mismatch",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Ngan Hang MBank\",\r\n    \"parentId\" : \"01K0G5JN9AGHPT5R9C1JS2PGW5\",\r\n    \"etag\" : \"{{etag}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{hierarchy_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{hierarchy_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:20:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "99"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"hierarchy level has been modified by another user\"\n    }\n}"
								}
							]
						},
						{
							"name": "Hierarchy - Get By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/hierarchy/{{org_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"hierarchy",
										"{{org_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{org_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{org_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:21:09 GMT"
										},
										{
											"key": "Content-Length",
											"value": "171"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0KGC750TE17K9RKG1GWQ6GN\",\n    \"createdAt\": 1753001368824,\n    \"etag\": \"1753001949175052300\",\n    \"name\": \"Ngan Hang MBank\",\n    \"parent\": {\n        \"id\": \"\",\n        \"name\": \"\"\n    },\n    \"updatedAt\": 1753001949175\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{org_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{org_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:21:49 GMT"
										},
										{
											"key": "Content-Length",
											"value": "73"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"hierarchy level not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Hierarchy - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/hierarchy",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"hierarchy"
									]
								}
							},
							"response": [
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:24:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "806"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01K0G3C2Y85F5W53MA59XVWH3B\",\n            \"createdAt\": 1752887069645,\n            \"etag\": \"1752887069640229500\",\n            \"name\": \"Giam Doc \"\n        },\n        {\n            \"id\": \"01K0G3TPM3YNBW55SDJYHKKKTG\",\n            \"createdAt\": 1752887548612,\n            \"etag\": \"1752887548547850700\",\n            \"name\": \"Giam Doc  Cong ty Co Phan ABE\"\n        },\n        {\n            \"id\": \"01K0G5JN9AGHPT5R9C1JS2PGW5\",\n            \"createdAt\": 1752889382240,\n            \"etag\": \"1752889382186734800\",\n            \"name\": \"Giam Doc Cong ty Co Phan AEF\"\n        },\n        {\n            \"id\": \"01K0G5P1TSH6ATMM09YWAT19BP\",\n            \"createdAt\": 1752889493396,\n            \"etag\": \"1752889493337192900\",\n            \"name\": \"Giam Doc Cong ty Co Phan AEFGH\"\n        },\n        {\n            \"id\": \"01K0G67SS9A8X8810VY2JMJQS9\",\n            \"createdAt\": 1752890074970,\n            \"etag\": \"1752890074921059600\",\n            \"name\": \"Giam Doc Cong ty Co Phan AEFBGH\"\n        },\n        {\n            \"id\": \"01K0G68XVHE8Z1R2G4ND0A4NKS\",\n            \"createdAt\": 1752890111861,\n            \"etag\": \"1752890111857175100\",\n            \"name\": \"Giam Doc Cong ty Co Phan AEFABGH\"\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 50\n}"
								}
							]
						},
						{
							"name": "Hierarchy - Delete",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/identity/hierarchy/{{org_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"identity",
										"hierarchy",
										"{{org_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{org_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{org_id}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:23:21 GMT"
										},
										{
											"key": "Content-Length",
											"value": "62"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0KGC750TE17K9RKG1GWQ6GN\",\n    \"deletedAt\": 1753003401677\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/identity/hierarchy/{{org_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"identity",
												"hierarchy",
												"{{org_id}}"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Date",
											"value": "Sun, 20 Jul 2025 09:23:33 GMT"
										},
										{
											"key": "Content-Length",
											"value": "73"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"hierarchy level not found\"\n    }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Authorize",
			"item": [
				{
					"name": "Resource",
					"item": [
						{
							"name": "Resource - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\", \"name\", \"resourceType\", \"resourceRef\", \"scopeType\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        name: { type: \"string\" },",
											"        description: { type: \"string\" },",
											"        resourceType: { type: \"string\", enum: [\"nikki_application\", \"custom\"] },",
											"        resourceRef: { type: \"string\" },",
											"        scopeType: { type: \"string\", enum: [\"org\", \"hierarchy\", \"private\", \"domain\"] }",
											"    },",
											"    additionalProperties: true",
											"};",
											"",
											"let isStatusValid = false;",
											"pm.test(\"Status code is 201\", function () {",
											"    isStatusValid = pm.response.code === 201;",
											"    pm.expect(isStatusValid).to.be.true;",
											"});",
											"",
											"let isSchemaValid = false;",
											"pm.test(\"Response matches expected schema\", function () {",
											"    pm.response.to.have.jsonSchema(schema);",
											"    isSchemaValid = true;",
											"});",
											"",
											"// ✅ Parse JSON response",
											"let body;",
											"let isJsonValid = true;",
											"try {",
											"    body = pm.response.json();",
											"    console.log(\"✅ Response body:\", body);",
											"    isSchemaValid = true;",
											"} catch (e) {",
											"    isJsonValid = false;",
											"    console.error(\"❌ Failed to parse response JSON:\", e);",
											"}",
											"",
											"if (",
											"    isStatusValid &&",
											"    isSchemaValid &&",
											"    isJsonValid &&",
											"    body?.id &&",
											"    body?.etag",
											") {",
											"    pm.collectionVariables.set(\"resource_id\", body.id);",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"✅ Set resource_id and etag\");",
											"} else {",
											"    console.warn(\"⚠️ Response invalid or incomplete — NOT setting collectionVariables vars\");",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let rawBody = pm.request.body.raw;",
											"",
											"let payload;",
											"try {",
											"    payload = JSON.parse(rawBody);",
											"} catch (e) {",
											"    console.error(\"❌ Failed to parse JSON body:\", e);",
											"    return;",
											"}",
											"",
											"pm.collectionVariables.set(\"resource_name\", payload.name);",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);",
											"",
											"console.log(\"✅ Final request payload:\", payload);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"AuthProduct\",\n    \"resourceType\": \"nikki_application\",\n    \"resourceRef\": \"12345678901234567890123456\",\n    \"scopeType\": \"org\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/resources",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"resources"
									]
								}
							},
							"response": [
								{
									"name": "Success - type custom",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"AuthProduct\",\n    \"resourceType\": \"custom\",\n    \"scopeType\": \"org\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BR47BY69M58EZV4N91YXZM\",\n    \"createdAt\": 1752741059967,\n    \"etag\": \"1752741059966509000\"\n}"
								},
								{
									"name": "Success - type nikki_application",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"AuthProduct\",\n    \"resourceType\": \"nikki_application\",\n    \"resourceRef\": \"12345678901234567890123456\",\n    \"scopeType\": \"org\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BR47BY69M58EZV4N91YXZM\",\n    \"createdAt\": 1752741059967,\n    \"etag\": \"1752741059966509000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"resourceType\": \"invalid_type\",\n    \"scopeType\": \"invalid_scope\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"cannot be blank\",\n        \"resourceType\": \"must be a valid value\",\n        \"scopeType\": \"must be a valid value\"\n    }\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"IdentityProfile\",\n    \"resourceType\": \"custom\",\n    \"scopeType\": \"org\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"name already exists\"\n    }\n}"
								}
							]
						},
						{
							"name": "Resource - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Check status code",
											"let isStatusValid = false;",
											"pm.test(\"Status code is 200\", function () {",
											"    isStatusValid = pm.response.code === 200;",
											"    pm.expect(isStatusValid).to.be.true;",
											"});",
											"",
											"// Parse JSON response",
											"let body;",
											"let isJsonValid = true;",
											"try {",
											"    body = pm.response.json();",
											"    console.log(\"📥 Response body:\", body);",
											"} catch (err) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ Response is not valid JSON\");",
											"}",
											"",
											"// Validate response structure (only id, etag, updatedAt)",
											"let isStructureValid = false;",
											"if (isStatusValid && isJsonValid) {",
											"    pm.test(\"Response contains required fields\", function () {",
											"        const requiredFields = [\"id\", \"etag\", \"updatedAt\"];",
											"        requiredFields.forEach(field => {",
											"            pm.expect(body).to.have.property(field);",
											"        });",
											"        isStructureValid = true;",
											"    });",
											"",
											"    // Set collection variable: etag (only if present and string)",
											"    if (typeof body.etag === \"string\" && body.etag.length > 0) {",
											"        pm.collectionVariables.set(\"etag\", body.etag);",
											"        console.log(\"✅ etag set to:\", body.etag);",
											"    } else {",
											"        console.warn(\"⚠️ etag missing or invalid\");",
											"    }",
											"",
											"    // Set collection variable: id (optional, if needed)",
											"    if (typeof body.id === \"string\" && body.id.length > 0) {",
											"        pm.collectionVariables.set(\"resource_id\", body.id);",
											"        console.log(\"✅ resource_id set to:\", body.id);",
											"    } else {",
											"        console.warn(\"⚠️ id missing or invalid\");",
											"    }",
											"} else {",
											"    console.warn(\"⚠️ Skipped field validation or variable setting due to invalid status/JSON\");",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"{{etag}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/resources/{{resource_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"resources",
										"{{resource_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"{{etag}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources/{{resource_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources",
												"{{resource_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BR47BY69M58EZV4N91YXZM\",\n    \"updatedAt\": 0,\n    \"etag\": \"1752741084833858000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalid_field\": \"invalid_value\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources/{{resource_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources",
												"{{resource_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - No match etag",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"1752032294635863001\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources/{{resource_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources",
												"{{resource_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"resource has been modified by another process\"\n    }\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"{{etag}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources/01JZQ0R0AF76T1TNZ84CAB8PM1",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources",
												"01JZQ0R0AF76T1TNZ84CAB8PM1"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"resource not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Resource - Get by name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/resources/{{resource_name}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"resources",
										"{{resource_name}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources/{{resource_name}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources",
												"{{resource_name}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n    \"etag\": \"1751254425804328000.000000\",\n    \"name\": \"IdentityGroup\",\n    \"description\": \"\",\n    \"resourceType\": \"custom\",\n    \"resourceRef\": \"\",\n    \"scopeType\": \"org\",\n    \"actions\": [\n        {\n            \"id\": \"01JWNZ4QY0ECRHAKR0ERQW97HW\",\n            \"name\": \"Create\"\n        },\n        {\n            \"id\": \"01JWNZ4V0ZDTEEMZPRZF6282SP\",\n            \"name\": \"Delete\"\n        },\n        {\n            \"id\": \"01JWNZ4Y4342HKE30Y4KE8MA8K\",\n            \"name\": \"Update\"\n        },\n        {\n            \"id\": \"01JWNZ516R64X2S8A7STFXTP9B\",\n            \"name\": \"View\"\n        }\n    ]\n}"
								},
								{
									"name": "Client Error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources/{{resource_name}}Invalid",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources",
												"{{resource_name}}Invalid"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"resource not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Resource - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/resources?page=0&size=3&withActions=true&graph={\"if\":[\"name\", \"=\", \"IdentityUser\"]}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"resources"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "3"
										},
										{
											"key": "withActions",
											"value": "true"
										},
										{
											"key": "graph",
											"value": "{\"if\":[\"name\", \"=\", \"IdentityUser\"]}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - Full params",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources?page=0&size=3&withActions=true&graph={\"if\":[\"name\", \"=\", \"IdentityUser\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "3"
												},
												{
													"key": "withActions",
													"value": "true"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"IdentityUser\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804326000.000000\",\n            \"name\": \"IdentityUser\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"hierarchy\",\n            \"actions\": [\n                {\n                    \"id\": \"01JWNZ3KA0ARGT9DAHQ1E6NZV0\",\n                    \"name\": \"Create\"\n                },\n                {\n                    \"id\": \"01JWNZ3PTQXAWE8R3HDTYVAQEK\",\n                    \"name\": \"Delete\"\n                },\n                {\n                    \"id\": \"01JWNZ3TQ7AVCFDTSS0VHXHCAB\",\n                    \"name\": \"Update\"\n                },\n                {\n                    \"id\": \"01JWNZ3XVWDP73JGHRRBFAHQYJ\",\n                    \"name\": \"View\"\n                }\n            ]\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 3\n}"
								},
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804243000.000000\",\n            \"name\": \"AuthzEntitlement\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804320000.000000\",\n            \"name\": \"AuthzResource\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804323000.000000\",\n            \"name\": \"AuthzRole\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804325000.000000\",\n            \"name\": \"AuthzRoleSuite\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804326000.000000\",\n            \"name\": \"IdentityUser\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"hierarchy\"\n        },\n        {\n            \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"etag\": \"1751254425804328000.000000\",\n            \"name\": \"IdentityGroup\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"org\"\n        },\n        {\n            \"id\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n            \"etag\": \"1751254425804329000.000000\",\n            \"name\": \"IdentityOrganization\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804331000.000000\",\n            \"name\": \"IdentityHierarchyLevel\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"org\"\n        },\n        {\n            \"id\": \"01JWP5S7KJF8T3RSA8WDZVSZWA\",\n            \"etag\": \"1751254425804333000.000000\",\n            \"name\": \"IdentityProfile\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"private\"\n        }\n    ],\n    \"total\": 9,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources?page=0&size=3",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "3"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804243000.000000\",\n            \"name\": \"AuthzEntitlement\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804320000.000000\",\n            \"name\": \"AuthzResource\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        },\n        {\n            \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804323000.000000\",\n            \"name\": \"AuthzRole\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"domain\"\n        }\n    ],\n    \"total\": 9,\n    \"page\": 0,\n    \"size\": 3\n}"
								},
								{
									"name": "Success - 1 level criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources?graph={\"if\":[\"name\", \"=\", \"IdentityUser\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"IdentityUser\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804326000.000000\",\n            \"name\": \"IdentityUser\",\n            \"description\": \"\",\n            \"resourceType\": \"custom\",\n            \"resourceRef\": \"\",\n            \"scopeType\": \"hierarchy\"\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid criteria fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources?page=-1&size=999999999999&withActions=true&graph={\"if\":[\"name\", \"=\", \"IdentityUser\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "999999999999"
												},
												{
													"key": "withActions",
													"value": "true"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"IdentityUser\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'invalid_field' of entity '%!s(func() string=0x1027536f0)' in condition '[invalid_field = invalid_value]'\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid paging fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/resources?page=0&size=3&withActions=true&graph={\"if\":[\"name\", \"=\", \"IdentityUser\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"resources"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "3"
												},
												{
													"key": "withActions",
													"value": "true"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"IdentityUser\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Action",
					"item": [
						{
							"name": "Action - Create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let rawBody = pm.request.body.raw;",
											"",
											"let payload;",
											"try {",
											"    payload = JSON.parse(rawBody);",
											"} catch (e) {",
											"    console.error(\"❌ Failed to parse JSON body:\", e);",
											"    return;",
											"}",
											"",
											"pm.collectionVariables.set(\"action_name\", payload.name);",
											"// Update request body",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);",
											"console.log(\"✅ Final request payload:\", payload);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// ✅ Define schema",
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\", \"createdAt\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        createdAt: { type: \"integer\" },",
											"        name: { type: \"string\", pattern: \"^[a-zA-Z0-9_-]+$\" },",
											"        description: { type: [\"string\", \"null\"] },",
											"        resourceId: { type: \"string\" },",
											"        createdBy: { type: \"string\" },",
											"        resource: { type: [\"object\", \"null\"] }",
											"    },",
											"    additionalProperties: true",
											"};",
											"",
											"let isStatusValid = false;",
											"pm.test(\"Status code is 200 or 201\", function () {",
											"    isStatusValid = [200, 201].includes(pm.response.code);",
											"    pm.expect(isStatusValid).to.be.true;",
											"});",
											"",
											"let body;",
											"let isJsonValid = true;",
											"try {",
											"    body = pm.response.json();",
											"} catch (e) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ Failed to parse response JSON\");",
											"}",
											"",
											"let isSchemaValid = false;",
											"if (isStatusValid && isJsonValid) {",
											"    pm.test(\"Response matches expected schema\", function () {",
											"        pm.expect(tv4.validate(body, schema)).to.be.true;",
											"        isSchemaValid = true;",
											"    });",
											"} else {",
											"    console.warn(\"⚠️ Skip schema check due to invalid status or JSON\");",
											"}",
											"",
											"if (isStatusValid && isJsonValid && isSchemaValid) {",
											"    pm.collectionVariables.set(\"action_id\", body.id);",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"📦 Response body:\", body);",
											"} else {",
											"    console.warn(\"🚫 Not updating env due to failed validation\");",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"View\",\n    \"description\": \"Description\",\n    \"resourceId\": \"{{resource_id}}\",\n    \"createdBy\": \"{{user_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/actions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"actions"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"View\",\n    \"description\": \"Description\",\n    \"resourceId\": \"{{resource_id}}\",\n    \"createdBy\": \"{{user_id}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BS1Y8T175CD76QTJX69SQZ\",\n    \"createdAt\": 1752742033699,\n    \"etag\": \"1752742033690508000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalid_field\": \"invalid_value\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"createdBy\": \"cannot be blank\",\n        \"name\": \"cannot be blank\",\n        \"resourceId\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{action_name}}\",\n    \"description\": \"Description\",\n    \"resourceId\": \"{{resource_id}}\",\n    \"createdBy\": \"{{user_id}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"name already exists\"\n    }\n}"
								}
							]
						},
						{
							"name": "Action - Update",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let isStatusValid = false;",
											"pm.test(\"Status code is 200\", function () {",
											"    isStatusValid = pm.response.code === 200;",
											"    pm.expect(isStatusValid).to.be.true;",
											"});",
											"",
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        name: { type: \"string\" },",
											"        description: { type: \"string\" },",
											"        resourceId: { type: \"string\" },",
											"        createdBy: { type: \"string\" }",
											"    },",
											"    additionalProperties: true",
											"};",
											"",
											"let body;",
											"let isJsonValid = true;",
											"let isSchemaValid = false;",
											"",
											"try {",
											"    body = pm.response.json();",
											"} catch (e) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ JSON parse failed\");",
											"}",
											"",
											"if (isStatusValid && isJsonValid) {",
											"    pm.test(\"Response matches schema\", function () {",
											"        pm.expect(tv4.validate(body, schema)).to.be.true;",
											"        isSchemaValid = true;",
											"    });",
											"} else {",
											"    console.warn(\"⚠️ Skip schema test due to invalid status or JSON\");",
											"}",
											"",
											"if (isStatusValid && isJsonValid && isSchemaValid && body.etag) {",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"✅ Updated etag:\", body.etag);",
											"} else {",
											"    console.warn(\"🚫 Not updating etag due to failed checks\");",
											"}",
											"",
											"if (isJsonValid) {",
											"    console.log(\"📦 Response body:\", body);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"{{etag}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/actions/{{action_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"actions",
										"{{action_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"{{etag}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/{{action_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"{{action_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BS1Y8T175CD76QTJX69SQZ\",\n    \"updatedAt\": 0,\n    \"etag\": \"1752742134542202000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalid_field\": \"invalid_field\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/{{action_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"{{action_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - No match etag",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"1752033419175672001\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/{{action_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"{{action_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"action has been modified by another process\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Description\",\n    \"etag\": \"{{etag}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/01JZQ2A5K04QSBPK2SCYFH4PJ1",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"01JZQ2A5K04QSBPK2SCYFH4PJ1"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"action not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Action - Get by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\", \"name\", \"resourceId\", \"createdBy\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        name: { ",
											"            type: \"string\",",
											"            pattern: \"^[a-zA-Z0-9_-]+$\"",
											"        },",
											"        description: { type: [\"string\", \"null\"] },",
											"        resourceId: { type: \"string\" },",
											"        createdBy: { type: \"string\" },",
											"        resource: { ",
											"            type: [\"object\", \"null\"],",
											"            properties: {",
											"                id: { type: \"string\" },",
											"                name: { type: \"string\" }",
											"            },",
											"            required: [\"id\", \"name\"],",
											"            additionalProperties: true",
											"        }",
											"    },",
											"    additionalProperties: true",
											"};",
											"",
											"pm.test(\"Response matches expected schema\", function () {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});",
											"",
											"let body;",
											"try {",
											"    body = pm.response.json();",
											"    console.log(\"✅ Get Action by ID response:\", body);",
											"} catch (err) {",
											"    console.error(\"❌ Failed to parse response JSON:\", err);",
											"}",
											"",
											"if (body && body.id && body.etag) {",
											"    pm.collectionVariables.set(\"action_id\", body.id);",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/actions/{{action_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"actions",
										"{{action_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/{{action_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"{{action_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JZP9CHXM5Q78PFC4VV74BWT4\",\n    \"name\": \"TestAction\",\n    \"description\": \"Description\",\n    \"resourceId\": \"01JWP5S7KJF8T3RSA8WDZVSZWA\",\n    \"etag\": \"1752020961204686000\",\n    \"createdBy\": \"01JYZZK83XRJXY2YT4HC4GRESN\",\n    \"resource\": {\n        \"id\": \"01JWP5S7KJF8T3RSA8WDZVSZWA\",\n        \"name\": \"IdentityProfile\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid model.ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/01JZFFVT01VPGGZKAHD40Y6FV",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"01JZFFVT01VPGGZKAHD40Y6FV"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								},
								{
									"name": "Client error - Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions/01JZFFVT01VPGGZKAHD40Y6FV1",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions",
												"01JZFFVT01VPGGZKAHD40Y6FV1"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"action not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Action - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/actions?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Create\"]}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"actions"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "4"
										},
										{
											"key": "graph",
											"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - Full params",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Create\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNYMG1K2X4N8B3NTHQMDMZB\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804791000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYZ5EPJJMA3D367XMYEMM2\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804905000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n                \"name\": \"AuthzResource\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ14EZ00S2HWZD3Z7VANJK\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804913000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n                \"name\": \"AuthzRole\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ29T8K173M5GA3HFXM1ME\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804921000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n                \"name\": \"AuthzRoleSuite\"\n            }\n        }\n    ],\n    \"total\": 8,\n    \"page\": 0,\n    \"size\": 4\n}"
								},
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNYMG1K2X4N8B3NTHQMDMZB\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804791000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYKV61QB9B05AS52GCEPCR\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804889000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYJGBHZX29Y3C7V1V7QNN3\",\n            \"name\": \"Grant\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804899000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYJSCK13G16P0Z4BPY1C0A\",\n            \"name\": \"Revoke\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804902000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYK975JE0PKC1NRAB68D9C\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804904000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYZ5EPJJMA3D367XMYEMM2\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804905000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n                \"name\": \"AuthzResource\"\n            }\n        },\n        {\n            \"id\": \"01JWNYZ8M3DXV2RNTP510CX9ZG\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804907000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n                \"name\": \"AuthzResource\"\n            }\n        },\n        {\n            \"id\": \"01JWY2HF8E72PQM8QHY0CHSVBT\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804909000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n                \"name\": \"AuthzResource\"\n            }\n        },\n        {\n            \"id\": \"01JWNYZEVSH78T2SH7WP47KDRM\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804911000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n                \"name\": \"AuthzResource\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ14EZ00S2HWZD3Z7VANJK\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804913000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n                \"name\": \"AuthzRole\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ177SB70PS1SSKMS676VA\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804915000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n                \"name\": \"AuthzRole\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ1A1MNC7X5AVVPM14EC3P\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804917000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n                \"name\": \"AuthzRole\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ1D53FREVN8WX0Z7GZ1PS\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804919000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n                \"name\": \"AuthzRole\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ29T8K173M5GA3HFXM1ME\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804921000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n                \"name\": \"AuthzRoleSuite\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ2CMDCF51YV8KEW8QPQVZ\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804923000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n                \"name\": \"AuthzRoleSuite\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ2H9TPQSKEPTZ5KPHRE3H\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804925000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n                \"name\": \"AuthzRoleSuite\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ2N37F8ZXC6MTC7QYNG6R\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804927000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n                \"name\": \"AuthzRoleSuite\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ3KA0ARGT9DAHQ1E6NZV0\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804929000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ3PTQXAWE8R3HDTYVAQEK\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804931000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ3TQ7AVCFDTSS0VHXHCAB\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804933000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ3XVWDP73JGHRRBFAHQYJ\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804935000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ4QY0ECRHAKR0ERQW97HW\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"etag\": \"1751254425804937000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n                \"name\": \"IdentityGroup\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ4V0ZDTEEMZPRZF6282SP\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"etag\": \"1751254425804939000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n                \"name\": \"IdentityGroup\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ4Y4342HKE30Y4KE8MA8K\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"etag\": \"1751254425804941000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n                \"name\": \"IdentityGroup\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ516R64X2S8A7STFXTP9B\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"etag\": \"1751254425804943000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n                \"name\": \"IdentityGroup\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ5KW6WC643VXGKV1D0J64\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n            \"etag\": \"1751254425804945000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n                \"name\": \"IdentityOrganization\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ5PZP72SZVA3GVHRZW3RG\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n            \"etag\": \"1751254425804947000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n                \"name\": \"IdentityOrganization\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ5SS046J9JVXS6WN316QB\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n            \"etag\": \"1751254425804949000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n                \"name\": \"IdentityOrganization\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ5WJ1TM7P43W7FMENADTR\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n            \"etag\": \"1751254425804951000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n                \"name\": \"IdentityOrganization\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ6NSG3ZWY82PEH1ERDZ5C\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804954000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ6SYC65GEMJJ6BRNTEXFC\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804956000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ6XAZBQ8D11ETYGAN4N01\",\n            \"name\": \"Update\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804958000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ70QBW0B0KRMR5CNR56KX\",\n            \"name\": \"View\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804960000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        },\n        {\n            \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"name\": \"Move\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804962000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        },\n        {\n            \"id\": \"01JX0PKTPPP5CN780TAPMK846J\",\n            \"name\": \"ManageUsers\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804964000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        },\n        {\n            \"id\": \"01JZP9CHXM5Q78PFC4VV74BWT4\",\n            \"name\": \"TestAction\",\n            \"description\": \"Description\",\n            \"resourceId\": \"01JWP5S7KJF8T3RSA8WDZVSZWA\",\n            \"etag\": \"1752020961204686000\",\n            \"createdBy\": \"01JYZZK83XRJXY2YT4HC4GRESN\",\n            \"resource\": {\n                \"id\": \"01JWP5S7KJF8T3RSA8WDZVSZWA\",\n                \"name\": \"IdentityProfile\"\n            }\n        }\n    ],\n    \"total\": 36,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions?page=0&size=4",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNYMG1K2X4N8B3NTHQMDMZB\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804791000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYKV61QB9B05AS52GCEPCR\",\n            \"name\": \"Delete\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804889000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYJGBHZX29Y3C7V1V7QNN3\",\n            \"name\": \"Grant\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804899000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYJSCK13G16P0Z4BPY1C0A\",\n            \"name\": \"Revoke\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804902000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        }\n    ],\n    \"total\": 36,\n    \"page\": 0,\n    \"size\": 4\n}"
								},
								{
									"name": "Success - 1 level criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions?graph={\"if\":[\"name\", \"=\", \"Create\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											],
											"query": [
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWNYMG1K2X4N8B3NTHQMDMZB\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n            \"etag\": \"1751254425804791000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n                \"name\": \"AuthzEntitlement\"\n            }\n        },\n        {\n            \"id\": \"01JWNYZ5EPJJMA3D367XMYEMM2\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n            \"etag\": \"1751254425804905000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYWE9FBX2WTMYZMR9XHHX6\",\n                \"name\": \"AuthzResource\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ14EZ00S2HWZD3Z7VANJK\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n            \"etag\": \"1751254425804913000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYV4RQ1ZKWG8RE0RMFTVCM\",\n                \"name\": \"AuthzRole\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ29T8K173M5GA3HFXM1ME\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n            \"etag\": \"1751254425804921000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYW23X8CMREJ2Y9349BAE4\",\n                \"name\": \"AuthzRoleSuite\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ3KA0ARGT9DAHQ1E6NZV0\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"etag\": \"1751254425804929000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ4QY0ECRHAKR0ERQW97HW\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"etag\": \"1751254425804937000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n                \"name\": \"IdentityGroup\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ5KW6WC643VXGKV1D0J64\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n            \"etag\": \"1751254425804945000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQTHN6JTRNWKJ1BMCYB80\",\n                \"name\": \"IdentityOrganization\"\n            }\n        },\n        {\n            \"id\": \"01JWNZ6NSG3ZWY82PEH1ERDZ5C\",\n            \"name\": \"Create\",\n            \"description\": \"\",\n            \"resourceId\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n            \"etag\": \"1751254425804954000.000000\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYRSKZ56EAE2QRFHJWRZPT\",\n                \"name\": \"IdentityHierarchyLevel\"\n            }\n        }\n    ],\n    \"total\": 8,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid criteria fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions?page=0&size=4&graph={\"if\":[\"invalid_field\", \"=\", \"invalid_value\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"invalid_field\", \"=\", \"invalid_value\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'invalid_field' of entity '%!s(func() string=0x102e07490)' in condition '[invalid_field = invalid_value]'\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid paging fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/actions?page=-1&size=99999999999&graph={\"if\":[\"name\", \"=\", \"Create\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"actions"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "99999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Entitlement",
					"item": [
						{
							"name": "Entitlement - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\", \"createdAt\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        createdAt: { type: \"integer\" },",
											"        name: { type: \"string\" },",
											"        actionId: { type: \"string\" },",
											"        actionExpr: { type: \"string\" },",
											"        resourceId: { type: \"string\" },",
											"        scopeRef: { type: \"string\" },",
											"        subjectType: { type: \"string\" },",
											"        subjectRef: { type: \"string\" },",
											"        createdBy: { type: \"string\" }",
											"    },",
											"    additionalProperties: true",
											"};",
											"",
											"let isStatusValid = false;",
											"pm.test(\"Status code is 200 or 201\", function () {",
											"    isStatusValid = [200, 201].includes(pm.response.code);",
											"    pm.expect(isStatusValid).to.be.true;",
											"});",
											"",
											"let body;",
											"let isJsonValid = true;",
											"try {",
											"    body = pm.response.json();",
											"} catch (e) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ Failed to parse response JSON\");",
											"}",
											"",
											"let isSchemaValid = false;",
											"if (isStatusValid && isJsonValid) {",
											"    pm.test(\"Response matches expected schema\", function () {",
											"        pm.expect(tv4.validate(body, schema)).to.be.true;",
											"        isSchemaValid = true;",
											"    });",
											"} else {",
											"    console.warn(\"⚠️ Skip schema check due to invalid status or JSON\");",
											"}",
											"",
											"if (isStatusValid && isJsonValid && isSchemaValid) {",
											"    pm.collectionVariables.set(\"entitlement_id\", body.id);",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"📦 Saved entitlement_id and etag:\", body.id, body.etag);",
											"} else {",
											"    console.warn(\"🚫 Not saving vars due to failed validation\");",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let rawBody = pm.request.body.raw;",
											"",
											"let payload;",
											"try {",
											"    payload = JSON.parse(rawBody);",
											"} catch (e) {",
											"    console.error(\"❌ Failed to parse JSON body:\", e);",
											"    return;",
											"}",
											"",
											"pm.collectionVariables.set(\"entitlement_name\", payload.name);",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);",
											"",
											"console.log(\"✅ Final request payload:\", payload);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Author Identdity - Readonly\",\n    \"actionId\": \"{{action_id}}\",\n    \"actionExpr\": \"{{action_name}}:*.{{resource_name}}\",\n    \"resourceId\": \"{{resource_id}}\",\n    \"scopeRef\": \"01JWNY20G23KD4RV5VWYABQYHD\",\n    \"subjectType\": \"custom\",\n    \"subjectRef\": \"custom\",\n    \"createdBy\": \"{{user_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/entitlements",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"entitlements"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Author Identdity - Readonly\",\n    \"actionId\": \"{{action_id}}\",\n    \"actionExpr\": \"{{action_name}}:*.{{resource_name}}\",\n    \"resourceId\": \"{{resource_id}}\",\n    \"scopeRef\": \"01JWNY20G23KD4RV5VWYABQYHD\",\n    \"subjectType\": \"custom\",\n    \"subjectRef\": \"custom\",\n    \"createdBy\": \"{{user_id}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BS95SZN3SZDM01M0T1ZCAP\",\n    \"createdAt\": 1752742270783,\n    \"etag\": \"1752742270783938000\"\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Author Identdity - Readonly\",\n    \"actionId\": \"{{action_id}}\",\n    \"actionExpr\": \"{{action_name}}:*.{{resource_name}}\",\n    \"resourceId\": \"{{resource_id}}\",\n    \"scopeRef\": \"01JWNY20G23KD4RV5VWYABQYHD\",\n    \"subjectType\": \"custom\",\n    \"subjectRef\": \"custom\",\n    \"createdBy\": \"{{user_id}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"name already exists\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid field",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalid_field\": \"invalid_value\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"actionExpr\": \"cannot be blank\",\n        \"actionId\": \"is required\",\n        \"createdBy\": \"cannot be blank\",\n        \"name\": \"cannot be blank\",\n        \"resourceId\": \"is required\"\n    }\n}"
								}
							]
						},
						{
							"name": "Entitlement - Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let isStatusValid = false;",
											"pm.test(\"Status code is 200\", function () {",
											"    isStatusValid = pm.response.code === 200;",
											"    pm.expect(isStatusValid).to.be.true;",
											"});",
											"",
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        name: { type: \"string\" },",
											"        description: { type: \"string\" },",
											"        actionId: {type: \"string\"},",
											"        resourceId: { type: \"string\" },",
											"        actionExpr: {type: \"string\"},",
											"        createdBy: { type: \"string\" }",
											"    },",
											"    additionalProperties: true",
											"};",
											"",
											"let body;",
											"let isJsonValid = true;",
											"let isSchemaValid = false;",
											"",
											"try {",
											"    body = pm.response.json();",
											"} catch (e) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ JSON parse failed\");",
											"}",
											"",
											"if (isStatusValid && isJsonValid) {",
											"    pm.test(\"Response matches schema\", function () {",
											"        pm.expect(tv4.validate(body, schema)).to.be.true;",
											"        isSchemaValid = true;",
											"    });",
											"} else {",
											"    console.warn(\"⚠️ Skip schema test due to invalid status or JSON\");",
											"}",
											"",
											"if (isStatusValid && isJsonValid && isSchemaValid && body.etag) {",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"✅ Updated etag:\", body.etag);",
											"} else {",
											"    console.warn(\"🚫 Not updating etag due to failed checks\");",
											"}",
											"",
											"if (isJsonValid) {",
											"    console.log(\"📦 Response body:\", body);",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"description\",\n    \"etag\": \"{{etag}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/entitlements/{{entitlement_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"entitlements",
										"{{entitlement_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"description\",\n    \"etag\": \"{{etag}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BS95SZN3SZDM01M0T1ZCAP\",\n    \"updatedAt\": 0,\n    \"etag\": \"1752742340725347000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalide_field\": \"invalide_value\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements/{{entitlement_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements",
												"{{entitlement_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client errors - Not found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"description\",\n    \"etag\": \"{{etag}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements/01K037AZFSS7YSJGST7704WSK2",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements",
												"01K037AZFSS7YSJGST7704WSK2"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"entitlement not found\"\n    }\n}"
								},
								{
									"name": "Client errors - Not match etag",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"description\",\n    \"etag\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements/{{entitlement_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements",
												"{{entitlement_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"etag\": \"etag mismatched\"\n    }\n}"
								}
							]
						},
						{
							"name": "Entitlement - Get by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/entitlements/{{entitlement_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"entitlements",
										"{{entitlement_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements/{{entitlement_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements",
												"{{entitlement_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01JWPA3A4J2644C24V86419A2V\",\n    \"etag\": \"1752677376900586000\",\n    \"name\": \"Authorize Readonly - View Entitlements\",\n    \"actionId\": \"01JWNYK975JE0PKC1NRAB68D9C\",\n    \"resourceId\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n    \"actionExpr\": \"View:*.AuthzEntitlement\",\n    \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n    \"resource\": {\n        \"id\": \"01JWNX10DN9E2PVZTVPJNTWR7D\",\n        \"name\": \"AuthzEntitlement\"\n    },\n    \"action\": {\n        \"id\": \"01JWNYK975JE0PKC1NRAB68D9C\",\n        \"name\": \"View\"\n    }\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements/01JWPA35MPHG33G77FKQNYJS22",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements",
												"01JWPA35MPHG33G77FKQNYJS22"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"entitlement not found\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid model Id",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements/01JWPA35MPHG33G77FKQNYJS2",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements",
												"01JWPA35MPHG33G77FKQNYJS2"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"the length must be exactly 26\"\n    }\n}"
								}
							]
						},
						{
							"name": "Entitlement - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/entitlements?page=0&size=4",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"entitlements"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "4"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - Full params",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Create\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/entitlements?page=0&size=4",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"entitlements"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWP88N498RQS88TYVJ4Z20EX\",\n            \"etag\": \"1752229659936045000\",\n            \"actionExpr\": \"*:*:*.*\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\"\n        },\n        {\n            \"id\": \"01JWP8EARV3B9A1HWFPMQZQ6HZ\",\n            \"etag\": \"1752229659936088000\",\n            \"actionId\": \"01JWNZ3XVWDP73JGHRRBFAHQYJ\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"actionExpr\": \"View:*.IdentityUser\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            },\n            \"action\": {\n                \"id\": \"01JWNZ3XVWDP73JGHRRBFAHQYJ\",\n                \"name\": \"View\"\n            }\n        },\n        {\n            \"id\": \"01JWP8EFENXFNN17GSEJP0RCXZ\",\n            \"etag\": \"1752229659936094000\",\n            \"actionId\": \"01JWNZ516R64X2S8A7STFXTP9B\",\n            \"resourceId\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n            \"actionExpr\": \"View:*.IdentityGroup\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQNN68RKN62TNG5K0CPCE\",\n                \"name\": \"IdentityGroup\"\n            },\n            \"action\": {\n                \"id\": \"01JWNZ516R64X2S8A7STFXTP9B\",\n                \"name\": \"View\"\n            }\n        },\n        {\n            \"id\": \"01JWP8KSP3Q3YH6RKND552DWRR\",\n            \"etag\": \"1752229659936099000\",\n            \"resourceId\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n            \"actionExpr\": \"*:*.IdentityUser\",\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"resource\": {\n                \"id\": \"01JWNYQ2A04PPV4135QGXX7W0M\",\n                \"name\": \"IdentityUser\"\n            }\n        }\n    ],\n    \"total\": 23,\n    \"page\": 0,\n    \"size\": 4\n}"
								}
							]
						}
					]
				},
				{
					"name": "Role",
					"item": [
						{
							"name": "Role - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let isStatus201 = false;",
											"pm.test(\"Status code is 201\", function () {",
											"    isStatus201 = pm.response.code === 201;",
											"    pm.expect(isStatus201).to.be.true;",
											"});",
											"",
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\", \"createdAt\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        createdAt: { type: \"integer\" },",
											"    },",
											"    additionalProperties: false",
											"};",
											"",
											"let isSchemaValid = false;",
											"let body;",
											"let isJsonValid = true;",
											"",
											"try {",
											"    body = pm.response.json();",
											"    console.log(\"✅ Create Role response:\", body);",
											"} catch (err) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ Failed to parse response JSON\");",
											"}",
											"",
											"// ✅ validate schema đúng cách",
											"if (isJsonValid) {",
											"    pm.test(\"Response matches expected schema\", function () {",
											"        const valid = tv4.validate(body, schema);",
											"        pm.expect(valid).to.be.true;",
											"        isSchemaValid = valid;",
											"    });",
											"}",
											"",
											"if (isStatus201 && isJsonValid && isSchemaValid && body?.id && body?.etag) {",
											"    pm.collectionVariables.set(\"role_id\", body.id);",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"✅ Saved role_id and etag to collection variables\");",
											"} else {",
											"    console.warn(\"⚠️ Skipped setting role_id and etag due to invalid response or status\");",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let rawBody = pm.request.body.raw;",
											"let payload;",
											"try {",
											"    payload = JSON.parse(rawBody);",
											"} catch (e) {",
											"    console.error(\"❌ Failed to parse JSON body:\", e);",
											"    return;",
											"}",
											"",
											"// Save generated name for later use",
											"pm.collectionVariables.set(\"role_name\", payload.name);",
											"",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);",
											"console.log(\"✅ Final payload for create role:\", payload);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Authorize module Product Manager\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"entitlements\": [\"{{entitlement_id}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/roles",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"roles"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Authorize module Product Manager\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"entitlements\": [\"{{entitlement_id}}\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BSMMMVHGN2MTJX86S9GMJ7\",\n    \"createdAt\": 1752742646429,\n    \"etag\": \"1752742646427318000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalid_field\": \"ìnvalid_value\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"createdBy\": \"cannot be blank\",\n        \"name\": \"cannot be blank\",\n        \"ownerRef\": \"cannot be blank\",\n        \"ownerType\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client erorr - Invalid ownerType",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Authorize module Product Manager\",\n    \"ownerType\": \"invalid_type\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"entitlements\": [\n        \"{{entitlement_id}}\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"ownerType\": \"must be a valid value\"\n    }\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Authorize module Product Manager\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"entitlements\": [\"{{entitlement_id}}\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"name already exists\"\n    }\n}"
								},
								{
									"name": "Client error - Entitlement not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Authorize module Product Manager\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"entitlements\": [\n        \"01JWPA3A4J2644C24V86419A2V\",\n        \"01JWPA35MPHG33G77FKQNYJS22\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"entitlements[1]\": \"entitlement not found\"\n    }\n}"
								},
								{
									"name": "Client error - Duplicate entitlement Id",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Authorize module Product Manager1\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"entitlements\": [\n        \"{{entitlement_id}}\",\n        \"{{entitlement_id}}\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"entitlements[1]\": \"duplicate entitlement id found at index 0\"\n    }\n}"
								}
							]
						},
						{
							"name": "Role - Get by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/roles/{{role_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"roles",
										"{{role_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles/{{role_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles",
												"{{role_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BSMMMVHGN2MTJX86S9GMJ7\",\n    \"etag\": \"1752742646427318000\",\n    \"createdAt\": \"2025-07-17T08:57:26.429529Z\",\n    \"name\": \"Authorize module Product Manager\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n    \"entitlements\": [\n        {\n            \"id\": \"01K0BS95SZN3SZDM01M0T1ZCAP\",\n            \"name\": \"Author Identdity - Readonly\"\n        }\n    ]\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles/01JWPB7TC3CG1EB567WYQCJM71",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles",
												"01JWPB7TC3CG1EB567WYQCJM71"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"role not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Role - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/roles?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Identity module User Manager\"]}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"roles"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "4"
										},
										{
											"key": "graph",
											"value": "{\"if\":[\"name\", \"=\", \"Identity module User Manager\"]}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - Full params",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Identity module User Manager\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Identity module User Manager\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWPB7TC3CG1EB567WYQCJM79\",\n            \"etag\": \"1752677376898735000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module User Manager\",\n            \"description\": \"Granted with all actions on on Users and Groups in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8KSP3Q3YH6RKND552DWRR\",\n                    \"name\": \"Identity Admin - All User Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KP39GKAH67FEAC7TZ631\",\n                    \"name\": \"Identity Admin - All Group Actions\"\n                }\n            ]\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 4\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles?page=0&size=4",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWP72JJCDT4M0J8MSS51MN3T\",\n            \"etag\": \"1752677376898656000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Domain Administrator\",\n            \"description\": \"Granted with all actions on all resources regardless of scope\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP88N498RQS88TYVJ4Z20EX\",\n                    \"name\": \"Domain Administrator - All Permissions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP80E084MTYF2C882WNR6MJ\",\n            \"etag\": \"1752677376898730000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module Readonly\",\n            \"description\": \"Granted with view action on Users and Groups in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8EARV3B9A1HWFPMQZQ6HZ\",\n                    \"name\": \"Identity Readonly - View Users\"\n                },\n                {\n                    \"id\": \"01JWP8EFENXFNN17GSEJP0RCXZ\",\n                    \"name\": \"Identity Readonly - View Groups\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP80NHTHXSZDB1MZJXQ0MGQ\",\n            \"etag\": \"1752677376898733000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module Administrator\",\n            \"description\": \"Granted with all actions on all resources in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8KSP3Q3YH6RKND552DWRR\",\n                    \"name\": \"Identity Admin - All User Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KP39GKAH67FEAC7TZ631\",\n                    \"name\": \"Identity Admin - All Group Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KK6K1M9WMP59BBAGEMB1\",\n                    \"name\": \"Identity Admin - All Organization Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KG15N26CRWNRM6F5CB29\",\n                    \"name\": \"Identity Admin - All HierarchyLevel Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWPB7TC3CG1EB567WYQCJM79\",\n            \"etag\": \"1752677376898735000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module User Manager\",\n            \"description\": \"Granted with all actions on on Users and Groups in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8KSP3Q3YH6RKND552DWRR\",\n                    \"name\": \"Identity Admin - All User Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KP39GKAH67FEAC7TZ631\",\n                    \"name\": \"Identity Admin - All Group Actions\"\n                }\n            ]\n        }\n    ],\n    \"total\": 34,\n    \"page\": 0,\n    \"size\": 4\n}"
								},
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWP72JJCDT4M0J8MSS51MN3T\",\n            \"etag\": \"1752677376898656000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Domain Administrator\",\n            \"description\": \"Granted with all actions on all resources regardless of scope\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP88N498RQS88TYVJ4Z20EX\",\n                    \"name\": \"Domain Administrator - All Permissions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP80E084MTYF2C882WNR6MJ\",\n            \"etag\": \"1752677376898730000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module Readonly\",\n            \"description\": \"Granted with view action on Users and Groups in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8EARV3B9A1HWFPMQZQ6HZ\",\n                    \"name\": \"Identity Readonly - View Users\"\n                },\n                {\n                    \"id\": \"01JWP8EFENXFNN17GSEJP0RCXZ\",\n                    \"name\": \"Identity Readonly - View Groups\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP80NHTHXSZDB1MZJXQ0MGQ\",\n            \"etag\": \"1752677376898733000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module Administrator\",\n            \"description\": \"Granted with all actions on all resources in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8KSP3Q3YH6RKND552DWRR\",\n                    \"name\": \"Identity Admin - All User Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KP39GKAH67FEAC7TZ631\",\n                    \"name\": \"Identity Admin - All Group Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KK6K1M9WMP59BBAGEMB1\",\n                    \"name\": \"Identity Admin - All Organization Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KG15N26CRWNRM6F5CB29\",\n                    \"name\": \"Identity Admin - All HierarchyLevel Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWPB7TC3CG1EB567WYQCJM79\",\n            \"etag\": \"1752677376898735000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Identity module User Manager\",\n            \"description\": \"Granted with all actions on on Users and Groups in Identity module, except with Owner user\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8KSP3Q3YH6RKND552DWRR\",\n                    \"name\": \"Identity Admin - All User Actions\"\n                },\n                {\n                    \"id\": \"01JWP8KP39GKAH67FEAC7TZ631\",\n                    \"name\": \"Identity Admin - All Group Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP80S5RXP8BD4YCY8ZHP7NZ\",\n            \"etag\": \"1752677376898737000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Authorize module Readonly\",\n            \"description\": \"Granted with view action on all resources in Authorize module\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWPA3A4J2644C24V86419A2V\",\n                    \"name\": \"Authorize Readonly - View Entitlements\"\n                },\n                {\n                    \"id\": \"01JWP8KCVWVYDSQ6C8SNDQD5F9\",\n                    \"name\": \"Authorize Moderator - View Resources\"\n                },\n                {\n                    \"id\": \"01JWP8K6DQKNR910S6CP90P26N\",\n                    \"name\": \"Authorize Moderator - View RoleSuites\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP80WR22SAG8Z7EYKDB00K6\",\n            \"etag\": \"1752677376898738000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Authorize module Administrator\",\n            \"description\": \"Granted with all actions on all resources in Authorize module\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWPA35MPHG33G77FKQNYJS21\",\n                    \"name\": \"Authorize Admin - All Resource Actions\"\n                },\n                {\n                    \"id\": \"01JWPA3232EYYN4HQMWBBV345B\",\n                    \"name\": \"Authorize Admin - All Role Actions\"\n                },\n                {\n                    \"id\": \"01JWPA2YP0HTKY290T7570N7QF\",\n                    \"name\": \"Authorize Admin - All RoleSuite Actions\"\n                },\n                {\n                    \"id\": \"01JWPA2SEP8T4S2VKAKYDYME64\",\n                    \"name\": \"Authorize Admin - All Entitlement Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP810BRSH9GWCYQC463K012\",\n            \"etag\": \"1752677376898740000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Authorize module Moderator\",\n            \"description\": \"Granted with all actions on Resource, Action, Role and Role Suite in Authorize module, but not allowed to delete the ones which are associated with an Entitlement\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP8KCVWVYDSQ6C8SNDQD5F6\",\n                    \"name\": \"Authorize Moderator - Create Resources\"\n                },\n                {\n                    \"id\": \"01JWP8KCVWVYDSQ6C8SNDQD5F7\",\n                    \"name\": \"Authorize Moderator - Update Resources\"\n                },\n                {\n                    \"id\": \"01JWP8KCVWVYDSQ6C8SNDQD5F9\",\n                    \"name\": \"Authorize Moderator - View Resources\"\n                },\n                {\n                    \"id\": \"01JWP8K9QE8PW6BKZZ6EW9C9Z5\",\n                    \"name\": \"Authorize Moderator - Create Roles\"\n                },\n                {\n                    \"id\": \"01JWP8K9QE8PW6BKZZ6EW9C9Z6\",\n                    \"name\": \"Authorize Moderator - Update Roles\"\n                },\n                {\n                    \"id\": \"01JWP8K9QE8PW6BKZZ6EW9C9Z7\",\n                    \"name\": \"Authorize Moderator - View Roles\"\n                },\n                {\n                    \"id\": \"01JWP8K6DQKNR910S6CP90P24N\",\n                    \"name\": \"Authorize Moderator - Create RoleSuites\"\n                },\n                {\n                    \"id\": \"01JWP8K6DQKNR910S6CP90P25N\",\n                    \"name\": \"Authorize Moderator - Update RoleSuites\"\n                },\n                {\n                    \"id\": \"01JWP8K6DQKNR910S6CP90P26N\",\n                    \"name\": \"Authorize Moderator - View RoleSuites\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01JWP72RCDK8NVBJMZTWJK9R97\",\n            \"etag\": \"1752677376898743000\",\n            \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n            \"name\": \"Org Administrator (My Company)\",\n            \"description\": \"Granted with all actions on all resources regardless of hierarchy level in the organization My Company\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": true,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": true,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP940XSBXNAN8BEV00W9DTH\",\n                    \"name\": \"Org Administrator - My Company All Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B83N2WJRX7R41PJC8P788V\",\n            \"etag\": \"1752724264028159000\",\n            \"createdAt\": \"2025-07-17T03:51:04.03785Z\",\n            \"name\": \"AuthorizemoduleProductManager KPUXYm\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01Ay7z3y42adORKkPNrMbPH8Ae\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01oxzXI1OdJHLopWqo9zl003wl\"\n        },\n        {\n            \"id\": \"01K0B83QCMY4HDARDGKWV70FJK\",\n            \"etag\": \"1752724266388025000\",\n            \"createdAt\": \"2025-07-17T03:51:06.388972Z\",\n            \"name\": \"AuthorizemoduleProductManager MGVRqE\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01xbML4ZhzHbCwzcG3uVtaVQSs\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01XLrLE53wqdJuwySprWztOTOc\"\n        },\n        {\n            \"id\": \"01K0B83R5Z6ER4ZKY72VWEY0MT\",\n            \"etag\": \"1752724267199365000\",\n            \"createdAt\": \"2025-07-17T03:51:07.200338Z\",\n            \"name\": \"AuthorizemoduleProductManager 9WOBh7\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01fQdqETihHdqQOYDDTT0r21ii\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01BJ9O8d5Zs06Fmx36O7Mdoedf\"\n        },\n        {\n            \"id\": \"01K0B83RVA9914WMB1HSYTBSWP\",\n            \"etag\": \"1752724267882491000\",\n            \"createdAt\": \"2025-07-17T03:51:07.883941Z\",\n            \"name\": \"AuthorizemoduleProductManager TOLCkg\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01M6RGOjr9BXzA2VFvMQvvY5Av\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"013SYA7ohweS6Vtmvcp4sPTXQy\"\n        },\n        {\n            \"id\": \"01K0B84YX4949GMHFJFNE7Y9D2\",\n            \"etag\": \"1752724306852184000\",\n            \"createdAt\": \"2025-07-17T03:51:46.854333Z\",\n            \"name\": \"AuthorizemoduleProductManager b8KCqs\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01yqFjHAdqpjndKQdWLDWTmwPh\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"011LVLhi1Ij8sKLo5CrjUTKcYJ\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B84ZPBAX6Z3JPYCG3CDN86\",\n            \"etag\": \"1752724307659438000\",\n            \"createdAt\": \"2025-07-17T03:51:47.661273Z\",\n            \"name\": \"AuthorizemoduleProductManager YtvgwG\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"016ar2f9W37VnsS5r8dKjROHBi\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01dUCkD64OW0DjuLm76XrM6hPh\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B8BS5S48V7Y1GSBTQAP4R5\",\n            \"etag\": \"1752724530361429000\",\n            \"createdAt\": \"2025-07-17T03:55:30.363527Z\",\n            \"name\": \"AuthorizemoduleProductManager cGbwmi\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01irNDEoW9W2f61FaOkIQLAlCf\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01SEypjqxCUa3iWPWDQUoCYvDu\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWP940XSBXNAN8BEV00W9DTH\",\n                    \"name\": \"Org Administrator - My Company All Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B8CSA7E1WHX5M0752MHQW3\",\n            \"etag\": \"1752724563271671000\",\n            \"createdAt\": \"2025-07-17T03:56:03.274122Z\",\n            \"name\": \"AuthorizemoduleProductManager tYm7vu\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01GmnBJllcVhmEXoham5eJYTgC\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01DYtJYFTLbho3tdCylowjQHJi\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWPA2SEP8T4S2VKAKYDYME64\",\n                    \"name\": \"Authorize Admin - All Entitlement Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B8ET4QDWJ71Q419DB7QNY6\",\n            \"etag\": \"1752724629655935000\",\n            \"createdAt\": \"2025-07-17T03:57:09.658184Z\",\n            \"name\": \"AuthorizemoduleProductManager KIm1MQ\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01rjM3PhhbAChssix16dwZAWv4\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01SxV2Ef0oyTM9PwhCxlM4NtCH\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01JWPA2SEP8T4S2VKAKYDYME64\",\n                    \"name\": \"Authorize Admin - All Entitlement Actions\"\n                },\n                {\n                    \"id\": \"01JWP940XSBXNAN8BEV00W9DTH\",\n                    \"name\": \"Org Administrator - My Company All Actions\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9ANCVH20KYYFWCPSGN8K5\",\n            \"etag\": \"1752725542299403000\",\n            \"createdAt\": \"2025-07-17T04:12:22.302132Z\",\n            \"name\": \"Author Identdity - Readonly - i4PpXs\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9DK0V4EEJE8KJ19QNFS7A\",\n            \"etag\": \"1752725638171879000\",\n            \"createdAt\": \"2025-07-17T04:13:58.173553Z\",\n            \"name\": \"AuthorizemoduleProductManager Ow1p1e\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01okTKlzUtUj0weXxwkZjieNjH\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01aj3vAtyAyj3GJ4xoHun1UUcA\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9DKYKNMETEVJDJYZFP3K1\",\n            \"etag\": \"1752725639123015000\",\n            \"createdAt\": \"2025-07-17T04:13:59.124526Z\",\n            \"name\": \"AuthorizemoduleProductManager ui9Ucz\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01lsvMoQEWRTPuWy0NJxTM4Y8N\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01BjDAR0qXRn5nvgdgdxZNcL8i\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9EGFADPEJYWSPZM87WS97\",\n            \"etag\": \"1752725668330376000\",\n            \"createdAt\": \"2025-07-17T04:14:28.332058Z\",\n            \"name\": \"AuthorizemoduleProductManager VMNC7N\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01kpWGWbj93PajNpBIhyiTUADh\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"012K5IKuV5gZoykIMvVMxpEktL\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9EK5SCRVKXFNZ982NQ38A\",\n            \"etag\": \"1752725671097172000\",\n            \"createdAt\": \"2025-07-17T04:14:31.098791Z\",\n            \"name\": \"AuthorizemoduleProductManager IpNWfw\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"018nvHSc8Uc1dOLHPDLfJ7Ig1p\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01IcDRbHX9YA4BdVyCqOtdUUI7\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9EQ4BYGPMT6PRMH8FPAMM\",\n            \"etag\": \"1752725675147211000\",\n            \"createdAt\": \"2025-07-17T04:14:35.149139Z\",\n            \"name\": \"AuthorizemoduleProductManager 3P7Z1g\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01xIYsqCdvTFc04sPxrBnfZiSs\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01aYUrYl1qiAfXaGsygiT1QgLi\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9F1CSQBGMR9F7SHR22NVQ\",\n            \"etag\": \"1752725685657643000\",\n            \"createdAt\": \"2025-07-17T04:14:45.659761Z\",\n            \"name\": \"AuthorizemoduleProductManager 8Mwm0w\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01ETma0bvqhtXiwDqw97YaSQWk\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01wlW73vwtc25UKSAQGTowTAU9\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9FM6D3QFX1BFA6XBPPAE7\",\n            \"etag\": \"1752725704909479000\",\n            \"createdAt\": \"2025-07-17T04:15:04.91112Z\",\n            \"name\": \"AuthorizemoduleProductManager s0MZCG\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01xyryXDmL3D5GQRhVvUHmTeOL\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"014dlCCrk7yVAUqsuK79kbhCHJ\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9KD5BREZNCWFY7RVEX050\",\n            \"etag\": \"1752725828779388000\",\n            \"createdAt\": \"2025-07-17T04:17:08.781258Z\",\n            \"name\": \"AuthorizemoduleProductManager UNc2cW\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01OYIJpuG3AZzGaJH6rGinm9Oo\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01PLveYlzaTci7fpnZ2qWmRHP6\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9KR8YTE3FQCWRG1P0B4D2\",\n            \"etag\": \"1752725840158754000\",\n            \"createdAt\": \"2025-07-17T04:17:20.160692Z\",\n            \"name\": \"AuthorizemoduleProductManager drlRac\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01Fh4iXKbjwKcsVNUbzKFNOwyX\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"017Up7iPcneEftgQG8V7TZLhyd\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9KT8JNPJPXW39XSVRC5XH\",\n            \"etag\": \"1752725842194052000\",\n            \"createdAt\": \"2025-07-17T04:17:22.195677Z\",\n            \"name\": \"AuthorizemoduleProductManager kUl3p9\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01UEB8jKNGfj2PESlxF4cBrros\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01U1ufNt6DcNRrKYFghe0fM5pg\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9MBH4BBTNZBNS54E5J4ET\",\n            \"etag\": \"1752725859876981000\",\n            \"createdAt\": \"2025-07-17T04:17:39.878646Z\",\n            \"name\": \"AuthorizemoduleProductManager xS1hbR\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01Cuznnl0aGe3vSgUU29bJ9B2R\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01XG9nrLc45zIPohf7u2Zjh8nu\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9P8JPNBXH23SNWK350NB2\",\n            \"etag\": \"1752725922390864000\",\n            \"createdAt\": \"2025-07-17T04:18:42.393218Z\",\n            \"name\": \"AuthorizemoduleProductManager IXhH6Q\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01RR39d7YB3Qleeb5nLezuomHX\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01SYUi4CJvlhoUgiCUhcjotiWM\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9QAG6VG5R61JTYSRFNJCH\",\n            \"etag\": \"1752725957126121000\",\n            \"createdAt\": \"2025-07-17T04:19:17.128426Z\",\n            \"name\": \"AuthorizemoduleProductManager VoGiaq\",\n            \"ownerType\": \"group\",\n            \"ownerRef\": \"01OyjaDCvm5ra7mue6zz7NVFVr\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"014AXJaW2krrxG216RrFkGxGVd\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0B9T6146H04CYCYBY8NYN7J\",\n            \"etag\": \"1752726050852321000\",\n            \"createdAt\": \"2025-07-17T04:20:50.854476Z\",\n            \"name\": \"AuthorizemoduleProductManager NolQt4\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01uG4p7wuzKqkIq6jfu8CjdqY8\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"016ejoAMcsJzu9DUWCXEQzVnpi\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n            \"etag\": \"1752727240958184000\",\n            \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n            \"name\": \"Authorize module Product Manager bpWdPR\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0B427B1G3Z1RE8R3N7850A2\",\n                    \"name\": \"Author Identdity - Readonly - i4PpXs\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BSMMMVHGN2MTJX86S9GMJ7\",\n            \"etag\": \"1752742646427318000\",\n            \"createdAt\": \"2025-07-17T08:57:26.429529Z\",\n            \"name\": \"Authorize module Product Manager\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"entitlements\": [\n                {\n                    \"id\": \"01K0BS95SZN3SZDM01M0T1ZCAP\",\n                    \"name\": \"Author Identdity - Readonly\"\n                }\n            ]\n        }\n    ],\n    \"total\": 34,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles?page=0&size=4&graph={\"if\":[\"invalid_field\", \"=\", \"invalid_value\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"invalid_field\", \"=\", \"invalid_value\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'invalid_field' of entity 'role' in condition '[invalid_field = invalid_value]'\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles?page=-1&size=99999999999&graph={\"if\":[\"name\", \"=\", \"Create\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "99999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Role Suite",
					"item": [
						{
							"name": "Role suite - Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let isStatus201 = false;",
											"pm.test(\"Status code is 201\", function () {",
											"    isStatus201 = pm.response.code === 201;",
											"    pm.expect(isStatus201).to.be.true;",
											"});",
											"",
											"const schema = {",
											"    type: \"object\",",
											"    required: [\"id\", \"etag\", \"createdAt\"],",
											"    properties: {",
											"        id: { type: \"string\" },",
											"        etag: { type: \"string\" },",
											"        createdAt: { type: \"integer\" },",
											"    },",
											"    additionalProperties: false",
											"};",
											"",
											"let isSchemaValid = false;",
											"let body;",
											"let isJsonValid = true;",
											"",
											"try {",
											"    body = pm.response.json();",
											"    console.log(\"✅ Create Role suite response:\", body);",
											"} catch (err) {",
											"    isJsonValid = false;",
											"    pm.expect.fail(\"❌ Failed to parse response JSON\");",
											"}",
											"",
											"// ✅ validate schema",
											"if (isJsonValid) {",
											"    pm.test(\"Response matches expected schema\", function () {",
											"        const valid = tv4.validate(body, schema);",
											"        pm.expect(valid).to.be.true;",
											"        isSchemaValid = valid;",
											"    });",
											"}",
											"",
											"if (isStatus201 && isJsonValid && isSchemaValid && body?.id && body?.etag) {",
											"    pm.collectionVariables.set(\"rolesuite_id\", body.id);",
											"    pm.collectionVariables.set(\"etag\", body.etag);",
											"    console.log(\"✅ Saved rolesuite_id and etag to collection variables\");",
											"} else {",
											"    console.warn(\"⚠️ Skipped setting rolesuite_id and etag due to invalid response or status\");",
											"}",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let rawBody = pm.request.body.raw;",
											"let payload;",
											"try {",
											"    payload = JSON.parse(rawBody);",
											"} catch (e) {",
											"    console.error(\"❌ Failed to parse JSON body:\", e);",
											"    return;",
											"}",
											"",
											"// Save generated name for later use",
											"pm.collectionVariables.set(\"rolesuite_name\", payload.name);",
											"",
											"pm.request.body.raw = JSON.stringify(payload, null, 2);",
											"console.log(\"✅ Final payload for create role suite:\", payload);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Org Intern Suite1\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"roles\": [\"{{role_id}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/v1/authorize/role-suites",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"role-suites"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Org Intern Suite1\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"roles\": [\"{{role_id}}\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BT4X5XVNH8J1WQF5HDHA9E\",\n    \"createdAt\": 1752743179453,\n    \"etag\": \"1752743179453415000\"\n}"
								},
								{
									"name": "Client error - Invalid fields",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"invalid_field\": \"ìnvalid_value\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"createdBy\": \"cannot be blank\",\n        \"name\": \"cannot be blank\",\n        \"ownerRef\": \"cannot be blank\",\n        \"ownerType\": \"cannot be blank\"\n    }\n}"
								},
								{
									"name": "Client error - Existing name",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{rolesuite_name}}\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"roles\": [\"{{role_id}}\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/roles",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"roles"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"name\": \"name already exists\"\n    }\n}"
								},
								{
									"name": "Client error - Duplicate role Id",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Org Intern Suite\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"{{user_id}}\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"{{user_id}}\",\n    \"roles\": [\n        \"{{role_id}}\",\n        \"{{role_id}}\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"roles[1]\": \"duplicate role id found at index 0\"\n    }\n}"
								}
							]
						},
						{
							"name": "Role suite - Get by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/role-suites/{{rolesuite_id}}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"role-suites",
										"{{rolesuite_id}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites/{{rolesuite_id}}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites",
												"{{rolesuite_id}}"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"01K0BT4X5XVNH8J1WQF5HDHA9E\",\n    \"etag\": \"1752743179453415000\",\n    \"name\": \"Org Intern Suite1\",\n    \"description\": \"\",\n    \"ownerType\": \"user\",\n    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n    \"isRequestable\": false,\n    \"isRequiredAttachment\": false,\n    \"isRequiredComment\": false,\n    \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n    \"roles\": [\n        {\n            \"id\": \"01K0BSMMMVHGN2MTJX86S9GMJ7\",\n            \"etag\": \"1752742646427318000\",\n            \"createdAt\": \"2025-07-17T08:57:26.429529Z\",\n            \"name\": \"Authorize module Product Manager\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\"\n        }\n    ]\n}"
								},
								{
									"name": "Client error - Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites/01K0BT4X5XVNH8J1WQF5HDHA91",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites",
												"01K0BT4X5XVNH8J1WQF5HDHA91"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"id\": \"roleSuite not found\"\n    }\n}"
								}
							]
						},
						{
							"name": "Role suite - Search",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{api_host}}/v1/authorize/role-suites?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Org Intern Suite 104JgY\"]}",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"authorize",
										"role-suites"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "4"
										},
										{
											"key": "graph",
											"value": "{\"if\":[\"name\", \"=\", \"Org Intern Suite 104JgY\"]}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Success - Full params",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites?page=0&size=4&graph={\"if\":[\"name\", \"=\", \"Org Intern Suite 104JgY\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Org Intern Suite 104JgY\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01K0BPDBGYKS8DVVJPGC7Y7X4X\",\n            \"etag\": \"1752739261982221000\",\n            \"name\": \"Org Intern Suite 104JgY\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01HlCAS8CqJmlCbCLaw7uDfYu4\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01qoe973WJ9g5lw39deJUolotR\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        }\n    ],\n    \"total\": 1,\n    \"page\": 0,\n    \"size\": 4\n}"
								},
								{
									"name": "Success - No criteria, With paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites?page=0&size=4",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWP9MVYX0K24R9H81SZEM7CE\",\n            \"etag\": \"1752677376899001000\",\n            \"name\": \"Domain User Suite\",\n            \"description\": \"Grant basic privileges to all users in the domain\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"roles\": [\n                {\n                    \"id\": \"01JWP80E084MTYF2C882WNR6MJ\",\n                    \"etag\": \"1752677376898730000\",\n                    \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n                    \"name\": \"Identity module Readonly\",\n                    \"description\": \"Granted with view action on Users and Groups in Identity module, except with Owner user\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n                    \"isRequestable\": true,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": true,\n                    \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\"\n                },\n                {\n                    \"id\": \"01JWP80S5RXP8BD4YCY8ZHP7NZ\",\n                    \"etag\": \"1752677376898737000\",\n                    \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n                    \"name\": \"Authorize module Readonly\",\n                    \"description\": \"Granted with view action on all resources in Authorize module\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n                    \"isRequestable\": true,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": true,\n                    \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPD3D6ZWGV2X1KZ5PGMYAB\",\n            \"etag\": \"1752739253670979000\",\n            \"name\": \"Org Intern Suite QeHpdl\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"018SPrpWwU8KBB95A2rIk4OzHx\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01HSbABL9DhRfcWLb0cqjT96pp\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPDAZSSWSQ2719CQ4BXDRG\",\n            \"etag\": \"1752739261433981000\",\n            \"name\": \"Org Intern Suite eoZTSY\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01FYgrdMojavRAFne1gNkllwxY\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01vlXlKAWQCscfh1lUNlOQC0As\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPDBGYKS8DVVJPGC7Y7X4X\",\n            \"etag\": \"1752739261982221000\",\n            \"name\": \"Org Intern Suite 104JgY\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01HlCAS8CqJmlCbCLaw7uDfYu4\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01qoe973WJ9g5lw39deJUolotR\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 4\n}"
								},
								{
									"name": "Success - No criteria, No paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"items\": [\n        {\n            \"id\": \"01JWP9MVYX0K24R9H81SZEM7CE\",\n            \"etag\": \"1752677376899001000\",\n            \"name\": \"Domain User Suite\",\n            \"description\": \"Grant basic privileges to all users in the domain\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\",\n            \"roles\": [\n                {\n                    \"id\": \"01JWP80E084MTYF2C882WNR6MJ\",\n                    \"etag\": \"1752677376898730000\",\n                    \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n                    \"name\": \"Identity module Readonly\",\n                    \"description\": \"Granted with view action on Users and Groups in Identity module, except with Owner user\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n                    \"isRequestable\": true,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": true,\n                    \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\"\n                },\n                {\n                    \"id\": \"01JWP80S5RXP8BD4YCY8ZHP7NZ\",\n                    \"etag\": \"1752677376898737000\",\n                    \"createdAt\": \"2025-07-16T14:49:36.894726Z\",\n                    \"name\": \"Authorize module Readonly\",\n                    \"description\": \"Granted with view action on all resources in Authorize module\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n                    \"isRequestable\": true,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": true,\n                    \"createdBy\": \"01JWNNJGS70Y07MBEV3AQ0M526\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPD3D6ZWGV2X1KZ5PGMYAB\",\n            \"etag\": \"1752739253670979000\",\n            \"name\": \"Org Intern Suite QeHpdl\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"018SPrpWwU8KBB95A2rIk4OzHx\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01HSbABL9DhRfcWLb0cqjT96pp\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPDAZSSWSQ2719CQ4BXDRG\",\n            \"etag\": \"1752739261433981000\",\n            \"name\": \"Org Intern Suite eoZTSY\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01FYgrdMojavRAFne1gNkllwxY\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01vlXlKAWQCscfh1lUNlOQC0As\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPDBGYKS8DVVJPGC7Y7X4X\",\n            \"etag\": \"1752739261982221000\",\n            \"name\": \"Org Intern Suite 104JgY\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01HlCAS8CqJmlCbCLaw7uDfYu4\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01qoe973WJ9g5lw39deJUolotR\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BPZ2NV2Y4F1B4BPKX6SP3A\",\n            \"etag\": \"1752739842747849000\",\n            \"name\": \"Org Intern Suite\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BAYG7Y3DQRTZ4KE53HAT12\",\n                    \"etag\": \"1752727240958184000\",\n                    \"createdAt\": \"2025-07-17T04:40:40.960117Z\",\n                    \"name\": \"Authorize module Product Manager bpWdPR\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01xKNHmmrGMUMKoDQoUpOSZJjp\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01dxqRC6mhdiYOTyE1kuwyskbB\"\n                }\n            ]\n        },\n        {\n            \"id\": \"01K0BT4X5XVNH8J1WQF5HDHA9E\",\n            \"etag\": \"1752743179453415000\",\n            \"name\": \"Org Intern Suite1\",\n            \"description\": \"\",\n            \"ownerType\": \"user\",\n            \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"isRequestable\": false,\n            \"isRequiredAttachment\": false,\n            \"isRequiredComment\": false,\n            \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n            \"roles\": [\n                {\n                    \"id\": \"01K0BSMMMVHGN2MTJX86S9GMJ7\",\n                    \"etag\": \"1752742646427318000\",\n                    \"createdAt\": \"2025-07-17T08:57:26.429529Z\",\n                    \"name\": \"Authorize module Product Manager\",\n                    \"ownerType\": \"user\",\n                    \"ownerRef\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\",\n                    \"isRequestable\": false,\n                    \"isRequiredAttachment\": false,\n                    \"isRequiredComment\": false,\n                    \"createdBy\": \"01JWNMZ36QHC7CQQ748H9NQ6J6\"\n                }\n            ]\n        }\n    ],\n    \"total\": 6,\n    \"page\": 0,\n    \"size\": 50\n}"
								},
								{
									"name": "Client error - Invalid criteria",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites?page=0&size=4&graph={\"if\":[\"invalid_field\", \"=\", \"invalid_value\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "4"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"invalid_field\", \"=\", \"invalid_value\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"graph.condition\": \"invalid field 'invalid_field' of entity 'role_suite' in condition '[invalid_field = invalid_value]'\"\n    }\n}"
								},
								{
									"name": "Client error - Invalid paging",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{api_host}}/v1/authorize/role-suites?page=-1&size=99999999999&graph={\"if\":[\"name\", \"=\", \"Create\"]}",
											"host": [
												"{{api_host}}"
											],
											"path": [
												"v1",
												"authorize",
												"role-suites"
											],
											"query": [
												{
													"key": "page",
													"value": "-1"
												},
												{
													"key": "size",
													"value": "99999999999"
												},
												{
													"key": "graph",
													"value": "{\"if\":[\"name\", \"=\", \"Create\"]}"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"validation_error\",\n    \"details\": {\n        \"page\": \"must be no less than 0\",\n        \"size\": \"must be no greater than 500\"\n    }\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "etag",
			"value": ""
		},
		{
			"key": "group_id",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "partytag_id",
			"value": ""
		},
		{
			"key": "org_slug",
			"value": ""
		},
		{
			"key": "org_id",
			"value": ""
		},
		{
			"key": "resource_id",
			"value": ""
		},
		{
			"key": "resource_name",
			"value": ""
		},
		{
			"key": "action_name",
			"value": ""
		},
		{
			"key": "action_id",
			"value": ""
		},
		{
			"key": "entitlement_name",
			"value": ""
		},
		{
			"key": "entitlement_id",
			"value": ""
		},
		{
			"key": "role_name",
			"value": ""
		},
		{
			"key": "role_id",
			"value": ""
		},
		{
			"key": "rolesuite_name",
			"value": ""
		},
		{
			"key": "rolesuite_id",
			"value": ""
		},
		{
			"key": "attemptId",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		}
	]
}