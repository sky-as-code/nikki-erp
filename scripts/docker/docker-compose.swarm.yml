services:
  postgres:
    image: postgres:17.4-alpine3.21
    environment:
      POSTGRES_DB: postgres # Prevent creating new database. We create one ourselves in init.sql
      POSTGRES_USER_FILE: /run/secrets/postgres_username
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_username
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ${CWD}/scripts/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      nikki_swarm_net:
        aliases:
          - nikki_postgres

  pgadmin:
    image: dpage/pgadmin4:9.2.0
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@nikki-erp.com"
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    secrets:
      - pgadmin_password
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      nikki_swarm_net:
        aliases:
          - nikki_pgadmin

  keydb:
    image: eqalpha/keydb:x86_64_v6.3.4
    environment:
      KEYDB_PASSWORD_FILE: /run/secrets/keydb_password
    secrets:
      - keydb_password
    command: >
      sh -c "keydb-server --appendonly yes --requirepass $$(cat /run/secrets/keydb_password)"
    volumes:
      - keydb_data:/data
    ports:
      - "6379:6379"
    networks:
      nikki_swarm_net:
        aliases:
          - nikki_keydb

  rabbitmq:
    image: rabbitmq:4.1.4-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER_FILE: /run/secrets/rabbitmq_username
      RABBITMQ_DEFAULT_PASS_FILE: /run/secrets/rabbitmq_password
    secrets:
      - rabbitmq_username
      - rabbitmq_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ${CWD}/scripts/docker/rabbitmq_enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
      - "1883:1883"   # MQTT port
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      nikki_swarm_net:
        aliases:
          - nikki_rabbitmq

networks:
  nikki_swarm_net:
    driver: overlay

volumes:
  postgres_data:
  pgadmin_data:
  keydb_data:
  redis_data:
  rabbitmq_data:

secrets:
  postgres_username:
    external: true
  postgres_password:
    external: true
  pgadmin_password:
    external: true
  keydb_password:
    external: true
  rabbitmq_username:
    external: true
  rabbitmq_password:
    external: true
