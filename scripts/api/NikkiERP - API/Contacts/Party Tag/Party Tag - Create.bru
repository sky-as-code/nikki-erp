meta {
  name: Party Tag - Create
  type: http
  seq: 1
}

post {
  url: {{api_host}}/v1/contacts/parties/tags
  body: json
  auth: inherit
}

body:json {
  {
      "label": {
          "en-US": "Pet",
          "vi-VN": "<b>Thú nuôi</b><script>'hacked'</script>"
      }
  }
}

script:pre-request {
  // Get original request body as raw text
  let rawBody = req.getBody().raw;
  
  // Parse it as JSON
  let payload;
  try {
      payload = JSON.parse(rawBody);
  } catch (e) {
      console.error("Failed to parse request body as JSON:", e);
      return;
  }
  
  // Generate a 6-char alphanumeric string
  function randomString(length = 6) {
      const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
      let result = '';
      for (let i = 0; i < length; i++) {
          result += chars.charAt(Math.floor(Math.random() * chars.length));
      }
      return result;
  }
  
  const rand = randomString();
  
  for (const lang in payload.label) {
      payload.label[lang] += ' ' + rand
  }
  
  // Write modified payload back to request
  req.getBody().raw = JSON.stringify(payload, null, 2);
  
}

script:post-response {
  const body = JSON.stringify(res.getBody());
  try {
      const payload = JSON.parse(body);
      const { id, etag } = payload;
      id && bru.setVar('partytag_id', id);
      etag && bru.setVar('etag', etag);
  } catch (err) {
      console.error(err)
  }
  
}

settings {
  encodeUrl: true
}
