meta {
  name: Role Update - Client error (Not match etag)
  type: http
  seq: 4
}

put {
  url: {{api_host}}/v1/authorize/roles/{{role_id}}
  body: json
  auth: inherit
}

body:json {
  {
    "name": "Name update",
    "description": "descriptopn",
    "entitlementIds": [
      "{{entitlement_id}}"
    ],
    "etag": "1754299751433990000"
  }
}

script:post-response {
  const status = res.getStatus();
  let body;
  
  test("Status should be 400", function () {
    expect(status).to.equal(400);
  });
  
  try {
    body = res.getBody();
    console.log("üì• Response body:", body);
  } catch (err) {
    expect.fail("‚ùå Response body is not valid JSON");
  }
  
  test("Should contain validation error details", function () {
    expect(body).to.have.property("code", "validation_error");
    expect(body).to.have.property("details").that.is.an("object");
  });
  
  const details = body.details || {};
  
  
  if (details.etag === "etag mismatched") {
    test("Should catch mismatched etag", function () {
      expect(details.etag).to.equal("etag mismatched");
    });
  }
  
}

settings {
  encodeUrl: true
}
