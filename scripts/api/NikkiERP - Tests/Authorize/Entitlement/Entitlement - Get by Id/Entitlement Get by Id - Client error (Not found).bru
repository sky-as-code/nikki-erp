meta {
  name: Entitlement Get by Id - Client error (Not found)
  type: http
  seq: 2
}

get {
  url: {{api_host}}/v1/authorize/entitlements/01JWPA35MPHG33G77FKQNYJS22
  body: none
  auth: inherit
}

script:post-response {
  test("Status code is 400", function () {
    expect(res.getStatus()).to.equal(400);
  });
  
  const schema = {
    type: "object",
    required: ["code", "details"],
    properties: {
      code: {
        type: "string",
        const: "validation_error"
      },
      details: {
        type: "object",
        required: ["entitlement_id"],
        properties: {
          entitlement_id: {
            type: "string",
            pattern: "not found$"
          }
        },
        additionalProperties: true
      }
    },
    additionalProperties: true
  };
  
  
  let body;
  try {
    body = res.getBody();
    console.log("üì• Parsed error response:", body);
  } catch (err) {
    console.error("‚ùå Failed to parse error response:", err);
    expect.fail("‚ùå Response body is not valid JSON");
  }
  
  test("Response matches expected error schema", function () {
    expect(tv4.validate(body, schema)).to.be.true;
  });
  
  test("Error message for entitlement_id includes 'not found'", function () {
    expect(body.details).to.have.property("entitlement_id");
    expect(body.details.entitlement_id).to.match(/not found$/);
  });
  
}

settings {
  encodeUrl: true
}
