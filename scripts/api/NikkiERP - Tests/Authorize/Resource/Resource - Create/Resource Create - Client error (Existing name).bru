meta {
  name: Resource Create - Client error (Existing name)
  type: http
  seq: 3
}

post {
  url: {{api_host}}/v1/authorize/resources
  body: json
  auth: inherit
}

body:json {
  {
      "name": "IdentityProfile",
      "resourceType": "custom",
      "scopeType": "org"
  }
}

script:post-response {
  let body;
  let statusCode = res.getStatus();
  
  try {
    body = res.getBody();
    console.log("📥 Error response:", body);
  } catch (e) {
    expect.fail("❌ Faield to parse");
  }
  
  test("Status code is 400", () => {
    expect(statusCode).to.eql(400);
  });
  
  test("Validation error for existing name", () => {
    expect(body).to.have.property("code", "validation_error");
    expect(body).to.have.property("details").that.is.an("object");
  
    expect(body.details).to.have.property("resource_name");
  
    expect(body.details.resource_name).to.include("already exists");
  });
  
}

settings {
  encodeUrl: true
}
