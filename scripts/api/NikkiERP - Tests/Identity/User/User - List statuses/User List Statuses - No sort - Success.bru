meta {
  name: User List Statuses - No sort - Success
  type: http
  seq: 1
}

get {
  url: {{api_host}}/v1/identity/users/statuses
  body: none
  auth: inherit
}

script:post-response {
  const schema = {
    type: "object",
    properties: {
      items: {
        type: "array",
        items: {
          type: "object",
          required: ["id", "etag", "label", "type", "value"],
          additionalProperties: false,
          properties: {
              id: {
                  type: "string",
                  minLength: 1,
              },
              etag: {
                  type: "string",
                  minLength: 1
              },
              label: {
                  type: "object",
                  minProperties: 1,
                  additionalProperties: {
                      type: "string"
                  }
              },
              type: {
                  type: "string",
                  "const": "ident_user_status"
              },
              value: {
                  type: "string",
                  minLength: 1,
              }
          }
          }
      },
      total: {
        type: "integer",
        minimum: 0
      },
      page: {
        type: "integer",
        minimum: 0
      },
      size: {
        type: "integer",
        minimum: 1
      }
    },
    required: ["items", "total", "page", "size"]
  };
  
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Response matches expected JSON schema", function () {
  //     pm.response.to.have.jsonSchema(schema);
  });
  
}

settings {
  encodeUrl: true
}
