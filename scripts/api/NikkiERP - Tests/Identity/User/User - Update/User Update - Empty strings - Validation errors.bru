meta {
  name: User Update - Empty strings - Validation errors
  type: http
  seq: 5
}

put {
  url: {{api_host}}/v1/identity/users/{{user_id}}
  body: json
  auth: inherit
}

body:json {
  {
      "avatarUrl": "",
      "displayName": "",
      "email": "",
      "etag": "",
      "password": "",
      "orgIds": [""]
  }
}

script:post-response {
  const expected = {
      code: "validation_error",
      details: {
          displayName: "cannot be blank",
          email: "cannot be blank",
          etag: "cannot be blank",
          // TODO: Validate orgIds
      },
  };
  
  test("Status code is 400", function () {
      expect(res.getStatus()).to.equal(400);
  });
  
  test("Response body matches expected JSON exactly", function () {
      expect(res.getBody()).to.eql(expected);
  });
  
}

settings {
  encodeUrl: true
}
