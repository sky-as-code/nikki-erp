// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// IdentGroupsColumns holds the columns for the "ident_groups" table.
	IdentGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "etag", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "org_id", Type: field.TypeString, Nullable: true},
	}
	// IdentGroupsTable holds the schema information for the "ident_groups" table.
	IdentGroupsTable = &schema.Table{
		Name:       "ident_groups",
		Columns:    IdentGroupsColumns,
		PrimaryKey: []*schema.Column{IdentGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ident_groups_ident_organizations_org",
				Columns:    []*schema.Column{IdentGroupsColumns[7]},
				RefColumns: []*schema.Column{IdentOrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// IdentHierarchyLevelsColumns holds the columns for the "ident_hierarchy_levels" table.
	IdentHierarchyLevelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "etag", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeString, Nullable: true},
		{Name: "org_id", Type: field.TypeString},
	}
	// IdentHierarchyLevelsTable holds the schema information for the "ident_hierarchy_levels" table.
	IdentHierarchyLevelsTable = &schema.Table{
		Name:       "ident_hierarchy_levels",
		Columns:    IdentHierarchyLevelsColumns,
		PrimaryKey: []*schema.Column{IdentHierarchyLevelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ident_hierarchy_levels_ident_hierarchy_levels_parent",
				Columns:    []*schema.Column{IdentHierarchyLevelsColumns[7]},
				RefColumns: []*schema.Column{IdentHierarchyLevelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ident_hierarchy_levels_ident_organizations_org",
				Columns:    []*schema.Column{IdentHierarchyLevelsColumns[8]},
				RefColumns: []*schema.Column{IdentOrganizationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hierarchylevel_name_org_id",
				Unique:  true,
				Columns: []*schema.Column{IdentHierarchyLevelsColumns[5], IdentHierarchyLevelsColumns[8]},
			},
		},
	}
	// IdentOrganizationsColumns holds the columns for the "ident_organizations" table.
	IdentOrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "legal_name", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString, Nullable: true},
		{Name: "etag", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// IdentOrganizationsTable holds the schema information for the "ident_organizations" table.
	IdentOrganizationsTable = &schema.Table{
		Name:       "ident_organizations",
		Columns:    IdentOrganizationsColumns,
		PrimaryKey: []*schema.Column{IdentOrganizationsColumns[0]},
	}
	// IdentUsersColumns holds the columns for the "ident_users" table.
	IdentUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "display_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "etag", Type: field.TypeString},
		{Name: "failed_login_attempts", Type: field.TypeInt, Default: 0},
		{Name: "is_owner", Type: field.TypeBool, Nullable: true},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "locked_until", Type: field.TypeTime, Nullable: true},
		{Name: "must_change_password", Type: field.TypeBool, Default: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "password_changed_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "hierarchy_id", Type: field.TypeString, Nullable: true},
	}
	// IdentUsersTable holds the schema information for the "ident_users" table.
	IdentUsersTable = &schema.Table{
		Name:       "ident_users",
		Columns:    IdentUsersColumns,
		PrimaryKey: []*schema.Column{IdentUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ident_users_ident_hierarchy_levels_hierarchy",
				Columns:    []*schema.Column{IdentUsersColumns[15]},
				RefColumns: []*schema.Column{IdentHierarchyLevelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_is_owner",
				Unique:  true,
				Columns: []*schema.Column{IdentUsersColumns[7]},
			},
		},
	}
	// IdentUserGroupRelColumns holds the columns for the "ident_user_group_rel" table.
	IdentUserGroupRelColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString},
		{Name: "group_id", Type: field.TypeString},
	}
	// IdentUserGroupRelTable holds the schema information for the "ident_user_group_rel" table.
	IdentUserGroupRelTable = &schema.Table{
		Name:       "ident_user_group_rel",
		Columns:    IdentUserGroupRelColumns,
		PrimaryKey: []*schema.Column{IdentUserGroupRelColumns[0], IdentUserGroupRelColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ident_user_group_rel_ident_users_user",
				Columns:    []*schema.Column{IdentUserGroupRelColumns[0]},
				RefColumns: []*schema.Column{IdentUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ident_user_group_rel_ident_groups_group",
				Columns:    []*schema.Column{IdentUserGroupRelColumns[1]},
				RefColumns: []*schema.Column{IdentGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// IdentUserOrgRelColumns holds the columns for the "ident_user_org_rel" table.
	IdentUserOrgRelColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeString},
		{Name: "org_id", Type: field.TypeString},
	}
	// IdentUserOrgRelTable holds the schema information for the "ident_user_org_rel" table.
	IdentUserOrgRelTable = &schema.Table{
		Name:       "ident_user_org_rel",
		Columns:    IdentUserOrgRelColumns,
		PrimaryKey: []*schema.Column{IdentUserOrgRelColumns[0], IdentUserOrgRelColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ident_user_org_rel_ident_users_user",
				Columns:    []*schema.Column{IdentUserOrgRelColumns[0]},
				RefColumns: []*schema.Column{IdentUsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "ident_user_org_rel_ident_organizations_org",
				Columns:    []*schema.Column{IdentUserOrgRelColumns[1]},
				RefColumns: []*schema.Column{IdentOrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		IdentGroupsTable,
		IdentHierarchyLevelsTable,
		IdentOrganizationsTable,
		IdentUsersTable,
		IdentUserGroupRelTable,
		IdentUserOrgRelTable,
	}
)

func init() {
	IdentGroupsTable.ForeignKeys[0].RefTable = IdentOrganizationsTable
	IdentGroupsTable.Annotation = &entsql.Annotation{
		Table: "ident_groups",
	}
	IdentHierarchyLevelsTable.ForeignKeys[0].RefTable = IdentHierarchyLevelsTable
	IdentHierarchyLevelsTable.ForeignKeys[1].RefTable = IdentOrganizationsTable
	IdentHierarchyLevelsTable.Annotation = &entsql.Annotation{
		Table: "ident_hierarchy_levels",
	}
	IdentOrganizationsTable.Annotation = &entsql.Annotation{
		Table: "ident_organizations",
	}
	IdentUsersTable.ForeignKeys[0].RefTable = IdentHierarchyLevelsTable
	IdentUsersTable.Annotation = &entsql.Annotation{
		Table: "ident_users",
	}
	IdentUserGroupRelTable.ForeignKeys[0].RefTable = IdentUsersTable
	IdentUserGroupRelTable.ForeignKeys[1].RefTable = IdentGroupsTable
	IdentUserGroupRelTable.Annotation = &entsql.Annotation{
		Table: "ident_user_group_rel",
	}
	IdentUserOrgRelTable.ForeignKeys[0].RefTable = IdentUsersTable
	IdentUserOrgRelTable.ForeignKeys[1].RefTable = IdentOrganizationsTable
	IdentUserOrgRelTable.Annotation = &entsql.Annotation{
		Table: "ident_user_org_rel",
	}
}
