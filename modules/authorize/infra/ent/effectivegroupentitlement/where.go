// Code generated by ent, DO NOT EDIT.

package effectivegroupentitlement

import (
	"entgo.io/ent/dialect/sql"
	"github.com/sky-as-code/nikki-erp/modules/authorize/infra/ent/predicate"
)

// GroupID applies equality check predicate on the "group_id" field. It's identical to GroupIDEQ.
func GroupID(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldGroupID, v))
}

// ActionExpr applies equality check predicate on the "action_expr" field. It's identical to ActionExprEQ.
func ActionExpr(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldActionExpr, v))
}

// ResourceID applies equality check predicate on the "resource_id" field. It's identical to ResourceIDEQ.
func ResourceID(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldResourceID, v))
}

// ResourceName applies equality check predicate on the "resource_name" field. It's identical to ResourceNameEQ.
func ResourceName(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldResourceName, v))
}

// ScopeRef applies equality check predicate on the "scope_ref" field. It's identical to ScopeRefEQ.
func ScopeRef(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldScopeRef, v))
}

// ScopeType applies equality check predicate on the "scope_type" field. It's identical to ScopeTypeEQ.
func ScopeType(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldScopeType, v))
}

// ActionID applies equality check predicate on the "action_id" field. It's identical to ActionIDEQ.
func ActionID(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldActionID, v))
}

// ActionName applies equality check predicate on the "action_name" field. It's identical to ActionNameEQ.
func ActionName(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldActionName, v))
}

// Source applies equality check predicate on the "source" field. It's identical to SourceEQ.
func Source(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldSource, v))
}

// GroupIDEQ applies the EQ predicate on the "group_id" field.
func GroupIDEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldGroupID, v))
}

// GroupIDNEQ applies the NEQ predicate on the "group_id" field.
func GroupIDNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldGroupID, v))
}

// GroupIDIn applies the In predicate on the "group_id" field.
func GroupIDIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldGroupID, vs...))
}

// GroupIDNotIn applies the NotIn predicate on the "group_id" field.
func GroupIDNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldGroupID, vs...))
}

// GroupIDGT applies the GT predicate on the "group_id" field.
func GroupIDGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldGroupID, v))
}

// GroupIDGTE applies the GTE predicate on the "group_id" field.
func GroupIDGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldGroupID, v))
}

// GroupIDLT applies the LT predicate on the "group_id" field.
func GroupIDLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldGroupID, v))
}

// GroupIDLTE applies the LTE predicate on the "group_id" field.
func GroupIDLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldGroupID, v))
}

// GroupIDContains applies the Contains predicate on the "group_id" field.
func GroupIDContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldGroupID, v))
}

// GroupIDHasPrefix applies the HasPrefix predicate on the "group_id" field.
func GroupIDHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldGroupID, v))
}

// GroupIDHasSuffix applies the HasSuffix predicate on the "group_id" field.
func GroupIDHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldGroupID, v))
}

// GroupIDEqualFold applies the EqualFold predicate on the "group_id" field.
func GroupIDEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldGroupID, v))
}

// GroupIDContainsFold applies the ContainsFold predicate on the "group_id" field.
func GroupIDContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldGroupID, v))
}

// ActionExprEQ applies the EQ predicate on the "action_expr" field.
func ActionExprEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldActionExpr, v))
}

// ActionExprNEQ applies the NEQ predicate on the "action_expr" field.
func ActionExprNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldActionExpr, v))
}

// ActionExprIn applies the In predicate on the "action_expr" field.
func ActionExprIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldActionExpr, vs...))
}

// ActionExprNotIn applies the NotIn predicate on the "action_expr" field.
func ActionExprNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldActionExpr, vs...))
}

// ActionExprGT applies the GT predicate on the "action_expr" field.
func ActionExprGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldActionExpr, v))
}

// ActionExprGTE applies the GTE predicate on the "action_expr" field.
func ActionExprGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldActionExpr, v))
}

// ActionExprLT applies the LT predicate on the "action_expr" field.
func ActionExprLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldActionExpr, v))
}

// ActionExprLTE applies the LTE predicate on the "action_expr" field.
func ActionExprLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldActionExpr, v))
}

// ActionExprContains applies the Contains predicate on the "action_expr" field.
func ActionExprContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldActionExpr, v))
}

// ActionExprHasPrefix applies the HasPrefix predicate on the "action_expr" field.
func ActionExprHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldActionExpr, v))
}

// ActionExprHasSuffix applies the HasSuffix predicate on the "action_expr" field.
func ActionExprHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldActionExpr, v))
}

// ActionExprEqualFold applies the EqualFold predicate on the "action_expr" field.
func ActionExprEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldActionExpr, v))
}

// ActionExprContainsFold applies the ContainsFold predicate on the "action_expr" field.
func ActionExprContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldActionExpr, v))
}

// ResourceIDEQ applies the EQ predicate on the "resource_id" field.
func ResourceIDEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldResourceID, v))
}

// ResourceIDNEQ applies the NEQ predicate on the "resource_id" field.
func ResourceIDNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldResourceID, v))
}

// ResourceIDIn applies the In predicate on the "resource_id" field.
func ResourceIDIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldResourceID, vs...))
}

// ResourceIDNotIn applies the NotIn predicate on the "resource_id" field.
func ResourceIDNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldResourceID, vs...))
}

// ResourceIDGT applies the GT predicate on the "resource_id" field.
func ResourceIDGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldResourceID, v))
}

// ResourceIDGTE applies the GTE predicate on the "resource_id" field.
func ResourceIDGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldResourceID, v))
}

// ResourceIDLT applies the LT predicate on the "resource_id" field.
func ResourceIDLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldResourceID, v))
}

// ResourceIDLTE applies the LTE predicate on the "resource_id" field.
func ResourceIDLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldResourceID, v))
}

// ResourceIDContains applies the Contains predicate on the "resource_id" field.
func ResourceIDContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldResourceID, v))
}

// ResourceIDHasPrefix applies the HasPrefix predicate on the "resource_id" field.
func ResourceIDHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldResourceID, v))
}

// ResourceIDHasSuffix applies the HasSuffix predicate on the "resource_id" field.
func ResourceIDHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldResourceID, v))
}

// ResourceIDEqualFold applies the EqualFold predicate on the "resource_id" field.
func ResourceIDEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldResourceID, v))
}

// ResourceIDContainsFold applies the ContainsFold predicate on the "resource_id" field.
func ResourceIDContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldResourceID, v))
}

// ResourceNameEQ applies the EQ predicate on the "resource_name" field.
func ResourceNameEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldResourceName, v))
}

// ResourceNameNEQ applies the NEQ predicate on the "resource_name" field.
func ResourceNameNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldResourceName, v))
}

// ResourceNameIn applies the In predicate on the "resource_name" field.
func ResourceNameIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldResourceName, vs...))
}

// ResourceNameNotIn applies the NotIn predicate on the "resource_name" field.
func ResourceNameNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldResourceName, vs...))
}

// ResourceNameGT applies the GT predicate on the "resource_name" field.
func ResourceNameGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldResourceName, v))
}

// ResourceNameGTE applies the GTE predicate on the "resource_name" field.
func ResourceNameGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldResourceName, v))
}

// ResourceNameLT applies the LT predicate on the "resource_name" field.
func ResourceNameLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldResourceName, v))
}

// ResourceNameLTE applies the LTE predicate on the "resource_name" field.
func ResourceNameLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldResourceName, v))
}

// ResourceNameContains applies the Contains predicate on the "resource_name" field.
func ResourceNameContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldResourceName, v))
}

// ResourceNameHasPrefix applies the HasPrefix predicate on the "resource_name" field.
func ResourceNameHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldResourceName, v))
}

// ResourceNameHasSuffix applies the HasSuffix predicate on the "resource_name" field.
func ResourceNameHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldResourceName, v))
}

// ResourceNameEqualFold applies the EqualFold predicate on the "resource_name" field.
func ResourceNameEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldResourceName, v))
}

// ResourceNameContainsFold applies the ContainsFold predicate on the "resource_name" field.
func ResourceNameContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldResourceName, v))
}

// ScopeRefEQ applies the EQ predicate on the "scope_ref" field.
func ScopeRefEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldScopeRef, v))
}

// ScopeRefNEQ applies the NEQ predicate on the "scope_ref" field.
func ScopeRefNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldScopeRef, v))
}

// ScopeRefIn applies the In predicate on the "scope_ref" field.
func ScopeRefIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldScopeRef, vs...))
}

// ScopeRefNotIn applies the NotIn predicate on the "scope_ref" field.
func ScopeRefNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldScopeRef, vs...))
}

// ScopeRefGT applies the GT predicate on the "scope_ref" field.
func ScopeRefGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldScopeRef, v))
}

// ScopeRefGTE applies the GTE predicate on the "scope_ref" field.
func ScopeRefGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldScopeRef, v))
}

// ScopeRefLT applies the LT predicate on the "scope_ref" field.
func ScopeRefLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldScopeRef, v))
}

// ScopeRefLTE applies the LTE predicate on the "scope_ref" field.
func ScopeRefLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldScopeRef, v))
}

// ScopeRefContains applies the Contains predicate on the "scope_ref" field.
func ScopeRefContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldScopeRef, v))
}

// ScopeRefHasPrefix applies the HasPrefix predicate on the "scope_ref" field.
func ScopeRefHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldScopeRef, v))
}

// ScopeRefHasSuffix applies the HasSuffix predicate on the "scope_ref" field.
func ScopeRefHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldScopeRef, v))
}

// ScopeRefEqualFold applies the EqualFold predicate on the "scope_ref" field.
func ScopeRefEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldScopeRef, v))
}

// ScopeRefContainsFold applies the ContainsFold predicate on the "scope_ref" field.
func ScopeRefContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldScopeRef, v))
}

// ScopeTypeEQ applies the EQ predicate on the "scope_type" field.
func ScopeTypeEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldScopeType, v))
}

// ScopeTypeNEQ applies the NEQ predicate on the "scope_type" field.
func ScopeTypeNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldScopeType, v))
}

// ScopeTypeIn applies the In predicate on the "scope_type" field.
func ScopeTypeIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldScopeType, vs...))
}

// ScopeTypeNotIn applies the NotIn predicate on the "scope_type" field.
func ScopeTypeNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldScopeType, vs...))
}

// ScopeTypeGT applies the GT predicate on the "scope_type" field.
func ScopeTypeGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldScopeType, v))
}

// ScopeTypeGTE applies the GTE predicate on the "scope_type" field.
func ScopeTypeGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldScopeType, v))
}

// ScopeTypeLT applies the LT predicate on the "scope_type" field.
func ScopeTypeLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldScopeType, v))
}

// ScopeTypeLTE applies the LTE predicate on the "scope_type" field.
func ScopeTypeLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldScopeType, v))
}

// ScopeTypeContains applies the Contains predicate on the "scope_type" field.
func ScopeTypeContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldScopeType, v))
}

// ScopeTypeHasPrefix applies the HasPrefix predicate on the "scope_type" field.
func ScopeTypeHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldScopeType, v))
}

// ScopeTypeHasSuffix applies the HasSuffix predicate on the "scope_type" field.
func ScopeTypeHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldScopeType, v))
}

// ScopeTypeEqualFold applies the EqualFold predicate on the "scope_type" field.
func ScopeTypeEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldScopeType, v))
}

// ScopeTypeContainsFold applies the ContainsFold predicate on the "scope_type" field.
func ScopeTypeContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldScopeType, v))
}

// ActionIDEQ applies the EQ predicate on the "action_id" field.
func ActionIDEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldActionID, v))
}

// ActionIDNEQ applies the NEQ predicate on the "action_id" field.
func ActionIDNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldActionID, v))
}

// ActionIDIn applies the In predicate on the "action_id" field.
func ActionIDIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldActionID, vs...))
}

// ActionIDNotIn applies the NotIn predicate on the "action_id" field.
func ActionIDNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldActionID, vs...))
}

// ActionIDGT applies the GT predicate on the "action_id" field.
func ActionIDGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldActionID, v))
}

// ActionIDGTE applies the GTE predicate on the "action_id" field.
func ActionIDGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldActionID, v))
}

// ActionIDLT applies the LT predicate on the "action_id" field.
func ActionIDLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldActionID, v))
}

// ActionIDLTE applies the LTE predicate on the "action_id" field.
func ActionIDLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldActionID, v))
}

// ActionIDContains applies the Contains predicate on the "action_id" field.
func ActionIDContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldActionID, v))
}

// ActionIDHasPrefix applies the HasPrefix predicate on the "action_id" field.
func ActionIDHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldActionID, v))
}

// ActionIDHasSuffix applies the HasSuffix predicate on the "action_id" field.
func ActionIDHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldActionID, v))
}

// ActionIDEqualFold applies the EqualFold predicate on the "action_id" field.
func ActionIDEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldActionID, v))
}

// ActionIDContainsFold applies the ContainsFold predicate on the "action_id" field.
func ActionIDContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldActionID, v))
}

// ActionNameEQ applies the EQ predicate on the "action_name" field.
func ActionNameEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldActionName, v))
}

// ActionNameNEQ applies the NEQ predicate on the "action_name" field.
func ActionNameNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldActionName, v))
}

// ActionNameIn applies the In predicate on the "action_name" field.
func ActionNameIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldActionName, vs...))
}

// ActionNameNotIn applies the NotIn predicate on the "action_name" field.
func ActionNameNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldActionName, vs...))
}

// ActionNameGT applies the GT predicate on the "action_name" field.
func ActionNameGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldActionName, v))
}

// ActionNameGTE applies the GTE predicate on the "action_name" field.
func ActionNameGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldActionName, v))
}

// ActionNameLT applies the LT predicate on the "action_name" field.
func ActionNameLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldActionName, v))
}

// ActionNameLTE applies the LTE predicate on the "action_name" field.
func ActionNameLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldActionName, v))
}

// ActionNameContains applies the Contains predicate on the "action_name" field.
func ActionNameContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldActionName, v))
}

// ActionNameHasPrefix applies the HasPrefix predicate on the "action_name" field.
func ActionNameHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldActionName, v))
}

// ActionNameHasSuffix applies the HasSuffix predicate on the "action_name" field.
func ActionNameHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldActionName, v))
}

// ActionNameEqualFold applies the EqualFold predicate on the "action_name" field.
func ActionNameEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldActionName, v))
}

// ActionNameContainsFold applies the ContainsFold predicate on the "action_name" field.
func ActionNameContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldActionName, v))
}

// SourceEQ applies the EQ predicate on the "source" field.
func SourceEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEQ(FieldSource, v))
}

// SourceNEQ applies the NEQ predicate on the "source" field.
func SourceNEQ(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNEQ(FieldSource, v))
}

// SourceIn applies the In predicate on the "source" field.
func SourceIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldIn(FieldSource, vs...))
}

// SourceNotIn applies the NotIn predicate on the "source" field.
func SourceNotIn(vs ...string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldNotIn(FieldSource, vs...))
}

// SourceGT applies the GT predicate on the "source" field.
func SourceGT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGT(FieldSource, v))
}

// SourceGTE applies the GTE predicate on the "source" field.
func SourceGTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldGTE(FieldSource, v))
}

// SourceLT applies the LT predicate on the "source" field.
func SourceLT(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLT(FieldSource, v))
}

// SourceLTE applies the LTE predicate on the "source" field.
func SourceLTE(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldLTE(FieldSource, v))
}

// SourceContains applies the Contains predicate on the "source" field.
func SourceContains(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContains(FieldSource, v))
}

// SourceHasPrefix applies the HasPrefix predicate on the "source" field.
func SourceHasPrefix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasPrefix(FieldSource, v))
}

// SourceHasSuffix applies the HasSuffix predicate on the "source" field.
func SourceHasSuffix(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldHasSuffix(FieldSource, v))
}

// SourceEqualFold applies the EqualFold predicate on the "source" field.
func SourceEqualFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldEqualFold(FieldSource, v))
}

// SourceContainsFold applies the ContainsFold predicate on the "source" field.
func SourceContainsFold(v string) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.FieldContainsFold(FieldSource, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EffectiveGroupEntitlement) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EffectiveGroupEntitlement) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EffectiveGroupEntitlement) predicate.EffectiveGroupEntitlement {
	return predicate.EffectiveGroupEntitlement(sql.NotPredicates(p))
}
