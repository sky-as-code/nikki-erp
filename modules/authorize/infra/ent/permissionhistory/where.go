// Code generated by ent, DO NOT EDIT.

package permissionhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/sky-as-code/nikki-erp/modules/authorize/infra/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldID, id))
}

// ApproverID applies equality check predicate on the "approver_id" field. It's identical to ApproverIDEQ.
func ApproverID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldApproverID, v))
}

// ApproverEmail applies equality check predicate on the "approver_email" field. It's identical to ApproverEmailEQ.
func ApproverEmail(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldApproverEmail, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// EntitlementID applies equality check predicate on the "entitlement_id" field. It's identical to EntitlementIDEQ.
func EntitlementID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldEntitlementID, v))
}

// EntitlementExpr applies equality check predicate on the "entitlement_expr" field. It's identical to EntitlementExprEQ.
func EntitlementExpr(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldEntitlementExpr, v))
}

// ReceiverID applies equality check predicate on the "receiver_id" field. It's identical to ReceiverIDEQ.
func ReceiverID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldReceiverID, v))
}

// GrantRequestID applies equality check predicate on the "grant_request_id" field. It's identical to GrantRequestIDEQ.
func GrantRequestID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldGrantRequestID, v))
}

// RevokeRequestID applies equality check predicate on the "revoke_request_id" field. It's identical to RevokeRequestIDEQ.
func RevokeRequestID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRevokeRequestID, v))
}

// RoleID applies equality check predicate on the "role_id" field. It's identical to RoleIDEQ.
func RoleID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleID, v))
}

// RoleName applies equality check predicate on the "role_name" field. It's identical to RoleNameEQ.
func RoleName(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleName, v))
}

// RoleSuiteID applies equality check predicate on the "role_suite_id" field. It's identical to RoleSuiteIDEQ.
func RoleSuiteID(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleSuiteID, v))
}

// RoleSuiteName applies equality check predicate on the "role_suite_name" field. It's identical to RoleSuiteNameEQ.
func RoleSuiteName(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleSuiteName, v))
}

// ApproverIDEQ applies the EQ predicate on the "approver_id" field.
func ApproverIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldApproverID, v))
}

// ApproverIDNEQ applies the NEQ predicate on the "approver_id" field.
func ApproverIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldApproverID, v))
}

// ApproverIDIn applies the In predicate on the "approver_id" field.
func ApproverIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldApproverID, vs...))
}

// ApproverIDNotIn applies the NotIn predicate on the "approver_id" field.
func ApproverIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldApproverID, vs...))
}

// ApproverIDGT applies the GT predicate on the "approver_id" field.
func ApproverIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldApproverID, v))
}

// ApproverIDGTE applies the GTE predicate on the "approver_id" field.
func ApproverIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldApproverID, v))
}

// ApproverIDLT applies the LT predicate on the "approver_id" field.
func ApproverIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldApproverID, v))
}

// ApproverIDLTE applies the LTE predicate on the "approver_id" field.
func ApproverIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldApproverID, v))
}

// ApproverIDContains applies the Contains predicate on the "approver_id" field.
func ApproverIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldApproverID, v))
}

// ApproverIDHasPrefix applies the HasPrefix predicate on the "approver_id" field.
func ApproverIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldApproverID, v))
}

// ApproverIDHasSuffix applies the HasSuffix predicate on the "approver_id" field.
func ApproverIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldApproverID, v))
}

// ApproverIDEqualFold applies the EqualFold predicate on the "approver_id" field.
func ApproverIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldApproverID, v))
}

// ApproverIDContainsFold applies the ContainsFold predicate on the "approver_id" field.
func ApproverIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldApproverID, v))
}

// ApproverEmailEQ applies the EQ predicate on the "approver_email" field.
func ApproverEmailEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldApproverEmail, v))
}

// ApproverEmailNEQ applies the NEQ predicate on the "approver_email" field.
func ApproverEmailNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldApproverEmail, v))
}

// ApproverEmailIn applies the In predicate on the "approver_email" field.
func ApproverEmailIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldApproverEmail, vs...))
}

// ApproverEmailNotIn applies the NotIn predicate on the "approver_email" field.
func ApproverEmailNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldApproverEmail, vs...))
}

// ApproverEmailGT applies the GT predicate on the "approver_email" field.
func ApproverEmailGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldApproverEmail, v))
}

// ApproverEmailGTE applies the GTE predicate on the "approver_email" field.
func ApproverEmailGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldApproverEmail, v))
}

// ApproverEmailLT applies the LT predicate on the "approver_email" field.
func ApproverEmailLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldApproverEmail, v))
}

// ApproverEmailLTE applies the LTE predicate on the "approver_email" field.
func ApproverEmailLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldApproverEmail, v))
}

// ApproverEmailContains applies the Contains predicate on the "approver_email" field.
func ApproverEmailContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldApproverEmail, v))
}

// ApproverEmailHasPrefix applies the HasPrefix predicate on the "approver_email" field.
func ApproverEmailHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldApproverEmail, v))
}

// ApproverEmailHasSuffix applies the HasSuffix predicate on the "approver_email" field.
func ApproverEmailHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldApproverEmail, v))
}

// ApproverEmailEqualFold applies the EqualFold predicate on the "approver_email" field.
func ApproverEmailEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldApproverEmail, v))
}

// ApproverEmailContainsFold applies the ContainsFold predicate on the "approver_email" field.
func ApproverEmailContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldApproverEmail, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// EffectEQ applies the EQ predicate on the "effect" field.
func EffectEQ(v Effect) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldEffect, v))
}

// EffectNEQ applies the NEQ predicate on the "effect" field.
func EffectNEQ(v Effect) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldEffect, v))
}

// EffectIn applies the In predicate on the "effect" field.
func EffectIn(vs ...Effect) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldEffect, vs...))
}

// EffectNotIn applies the NotIn predicate on the "effect" field.
func EffectNotIn(vs ...Effect) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldEffect, vs...))
}

// EntitlementIDEQ applies the EQ predicate on the "entitlement_id" field.
func EntitlementIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldEntitlementID, v))
}

// EntitlementIDNEQ applies the NEQ predicate on the "entitlement_id" field.
func EntitlementIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldEntitlementID, v))
}

// EntitlementIDIn applies the In predicate on the "entitlement_id" field.
func EntitlementIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldEntitlementID, vs...))
}

// EntitlementIDNotIn applies the NotIn predicate on the "entitlement_id" field.
func EntitlementIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldEntitlementID, vs...))
}

// EntitlementIDGT applies the GT predicate on the "entitlement_id" field.
func EntitlementIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldEntitlementID, v))
}

// EntitlementIDGTE applies the GTE predicate on the "entitlement_id" field.
func EntitlementIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldEntitlementID, v))
}

// EntitlementIDLT applies the LT predicate on the "entitlement_id" field.
func EntitlementIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldEntitlementID, v))
}

// EntitlementIDLTE applies the LTE predicate on the "entitlement_id" field.
func EntitlementIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldEntitlementID, v))
}

// EntitlementIDContains applies the Contains predicate on the "entitlement_id" field.
func EntitlementIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldEntitlementID, v))
}

// EntitlementIDHasPrefix applies the HasPrefix predicate on the "entitlement_id" field.
func EntitlementIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldEntitlementID, v))
}

// EntitlementIDHasSuffix applies the HasSuffix predicate on the "entitlement_id" field.
func EntitlementIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldEntitlementID, v))
}

// EntitlementIDIsNil applies the IsNil predicate on the "entitlement_id" field.
func EntitlementIDIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldEntitlementID))
}

// EntitlementIDNotNil applies the NotNil predicate on the "entitlement_id" field.
func EntitlementIDNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldEntitlementID))
}

// EntitlementIDEqualFold applies the EqualFold predicate on the "entitlement_id" field.
func EntitlementIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldEntitlementID, v))
}

// EntitlementIDContainsFold applies the ContainsFold predicate on the "entitlement_id" field.
func EntitlementIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldEntitlementID, v))
}

// EntitlementExprEQ applies the EQ predicate on the "entitlement_expr" field.
func EntitlementExprEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldEntitlementExpr, v))
}

// EntitlementExprNEQ applies the NEQ predicate on the "entitlement_expr" field.
func EntitlementExprNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldEntitlementExpr, v))
}

// EntitlementExprIn applies the In predicate on the "entitlement_expr" field.
func EntitlementExprIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldEntitlementExpr, vs...))
}

// EntitlementExprNotIn applies the NotIn predicate on the "entitlement_expr" field.
func EntitlementExprNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldEntitlementExpr, vs...))
}

// EntitlementExprGT applies the GT predicate on the "entitlement_expr" field.
func EntitlementExprGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldEntitlementExpr, v))
}

// EntitlementExprGTE applies the GTE predicate on the "entitlement_expr" field.
func EntitlementExprGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldEntitlementExpr, v))
}

// EntitlementExprLT applies the LT predicate on the "entitlement_expr" field.
func EntitlementExprLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldEntitlementExpr, v))
}

// EntitlementExprLTE applies the LTE predicate on the "entitlement_expr" field.
func EntitlementExprLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldEntitlementExpr, v))
}

// EntitlementExprContains applies the Contains predicate on the "entitlement_expr" field.
func EntitlementExprContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldEntitlementExpr, v))
}

// EntitlementExprHasPrefix applies the HasPrefix predicate on the "entitlement_expr" field.
func EntitlementExprHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldEntitlementExpr, v))
}

// EntitlementExprHasSuffix applies the HasSuffix predicate on the "entitlement_expr" field.
func EntitlementExprHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldEntitlementExpr, v))
}

// EntitlementExprIsNil applies the IsNil predicate on the "entitlement_expr" field.
func EntitlementExprIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldEntitlementExpr))
}

// EntitlementExprNotNil applies the NotNil predicate on the "entitlement_expr" field.
func EntitlementExprNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldEntitlementExpr))
}

// EntitlementExprEqualFold applies the EqualFold predicate on the "entitlement_expr" field.
func EntitlementExprEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldEntitlementExpr, v))
}

// EntitlementExprContainsFold applies the ContainsFold predicate on the "entitlement_expr" field.
func EntitlementExprContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldEntitlementExpr, v))
}

// ReceiverIDEQ applies the EQ predicate on the "receiver_id" field.
func ReceiverIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldReceiverID, v))
}

// ReceiverIDNEQ applies the NEQ predicate on the "receiver_id" field.
func ReceiverIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldReceiverID, v))
}

// ReceiverIDIn applies the In predicate on the "receiver_id" field.
func ReceiverIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldReceiverID, vs...))
}

// ReceiverIDNotIn applies the NotIn predicate on the "receiver_id" field.
func ReceiverIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldReceiverID, vs...))
}

// ReceiverIDGT applies the GT predicate on the "receiver_id" field.
func ReceiverIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldReceiverID, v))
}

// ReceiverIDGTE applies the GTE predicate on the "receiver_id" field.
func ReceiverIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldReceiverID, v))
}

// ReceiverIDLT applies the LT predicate on the "receiver_id" field.
func ReceiverIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldReceiverID, v))
}

// ReceiverIDLTE applies the LTE predicate on the "receiver_id" field.
func ReceiverIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldReceiverID, v))
}

// ReceiverIDContains applies the Contains predicate on the "receiver_id" field.
func ReceiverIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldReceiverID, v))
}

// ReceiverIDHasPrefix applies the HasPrefix predicate on the "receiver_id" field.
func ReceiverIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldReceiverID, v))
}

// ReceiverIDHasSuffix applies the HasSuffix predicate on the "receiver_id" field.
func ReceiverIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldReceiverID, v))
}

// ReceiverIDEqualFold applies the EqualFold predicate on the "receiver_id" field.
func ReceiverIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldReceiverID, v))
}

// ReceiverIDContainsFold applies the ContainsFold predicate on the "receiver_id" field.
func ReceiverIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldReceiverID, v))
}

// GrantRequestIDEQ applies the EQ predicate on the "grant_request_id" field.
func GrantRequestIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldGrantRequestID, v))
}

// GrantRequestIDNEQ applies the NEQ predicate on the "grant_request_id" field.
func GrantRequestIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldGrantRequestID, v))
}

// GrantRequestIDIn applies the In predicate on the "grant_request_id" field.
func GrantRequestIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldGrantRequestID, vs...))
}

// GrantRequestIDNotIn applies the NotIn predicate on the "grant_request_id" field.
func GrantRequestIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldGrantRequestID, vs...))
}

// GrantRequestIDGT applies the GT predicate on the "grant_request_id" field.
func GrantRequestIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldGrantRequestID, v))
}

// GrantRequestIDGTE applies the GTE predicate on the "grant_request_id" field.
func GrantRequestIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldGrantRequestID, v))
}

// GrantRequestIDLT applies the LT predicate on the "grant_request_id" field.
func GrantRequestIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldGrantRequestID, v))
}

// GrantRequestIDLTE applies the LTE predicate on the "grant_request_id" field.
func GrantRequestIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldGrantRequestID, v))
}

// GrantRequestIDContains applies the Contains predicate on the "grant_request_id" field.
func GrantRequestIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldGrantRequestID, v))
}

// GrantRequestIDHasPrefix applies the HasPrefix predicate on the "grant_request_id" field.
func GrantRequestIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldGrantRequestID, v))
}

// GrantRequestIDHasSuffix applies the HasSuffix predicate on the "grant_request_id" field.
func GrantRequestIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldGrantRequestID, v))
}

// GrantRequestIDIsNil applies the IsNil predicate on the "grant_request_id" field.
func GrantRequestIDIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldGrantRequestID))
}

// GrantRequestIDNotNil applies the NotNil predicate on the "grant_request_id" field.
func GrantRequestIDNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldGrantRequestID))
}

// GrantRequestIDEqualFold applies the EqualFold predicate on the "grant_request_id" field.
func GrantRequestIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldGrantRequestID, v))
}

// GrantRequestIDContainsFold applies the ContainsFold predicate on the "grant_request_id" field.
func GrantRequestIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldGrantRequestID, v))
}

// RevokeRequestIDEQ applies the EQ predicate on the "revoke_request_id" field.
func RevokeRequestIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRevokeRequestID, v))
}

// RevokeRequestIDNEQ applies the NEQ predicate on the "revoke_request_id" field.
func RevokeRequestIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldRevokeRequestID, v))
}

// RevokeRequestIDIn applies the In predicate on the "revoke_request_id" field.
func RevokeRequestIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldRevokeRequestID, vs...))
}

// RevokeRequestIDNotIn applies the NotIn predicate on the "revoke_request_id" field.
func RevokeRequestIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldRevokeRequestID, vs...))
}

// RevokeRequestIDGT applies the GT predicate on the "revoke_request_id" field.
func RevokeRequestIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldRevokeRequestID, v))
}

// RevokeRequestIDGTE applies the GTE predicate on the "revoke_request_id" field.
func RevokeRequestIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldRevokeRequestID, v))
}

// RevokeRequestIDLT applies the LT predicate on the "revoke_request_id" field.
func RevokeRequestIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldRevokeRequestID, v))
}

// RevokeRequestIDLTE applies the LTE predicate on the "revoke_request_id" field.
func RevokeRequestIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldRevokeRequestID, v))
}

// RevokeRequestIDContains applies the Contains predicate on the "revoke_request_id" field.
func RevokeRequestIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldRevokeRequestID, v))
}

// RevokeRequestIDHasPrefix applies the HasPrefix predicate on the "revoke_request_id" field.
func RevokeRequestIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldRevokeRequestID, v))
}

// RevokeRequestIDHasSuffix applies the HasSuffix predicate on the "revoke_request_id" field.
func RevokeRequestIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldRevokeRequestID, v))
}

// RevokeRequestIDIsNil applies the IsNil predicate on the "revoke_request_id" field.
func RevokeRequestIDIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldRevokeRequestID))
}

// RevokeRequestIDNotNil applies the NotNil predicate on the "revoke_request_id" field.
func RevokeRequestIDNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldRevokeRequestID))
}

// RevokeRequestIDEqualFold applies the EqualFold predicate on the "revoke_request_id" field.
func RevokeRequestIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldRevokeRequestID, v))
}

// RevokeRequestIDContainsFold applies the ContainsFold predicate on the "revoke_request_id" field.
func RevokeRequestIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldRevokeRequestID, v))
}

// RoleIDEQ applies the EQ predicate on the "role_id" field.
func RoleIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleID, v))
}

// RoleIDNEQ applies the NEQ predicate on the "role_id" field.
func RoleIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldRoleID, v))
}

// RoleIDIn applies the In predicate on the "role_id" field.
func RoleIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldRoleID, vs...))
}

// RoleIDNotIn applies the NotIn predicate on the "role_id" field.
func RoleIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldRoleID, vs...))
}

// RoleIDGT applies the GT predicate on the "role_id" field.
func RoleIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldRoleID, v))
}

// RoleIDGTE applies the GTE predicate on the "role_id" field.
func RoleIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldRoleID, v))
}

// RoleIDLT applies the LT predicate on the "role_id" field.
func RoleIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldRoleID, v))
}

// RoleIDLTE applies the LTE predicate on the "role_id" field.
func RoleIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldRoleID, v))
}

// RoleIDContains applies the Contains predicate on the "role_id" field.
func RoleIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldRoleID, v))
}

// RoleIDHasPrefix applies the HasPrefix predicate on the "role_id" field.
func RoleIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldRoleID, v))
}

// RoleIDHasSuffix applies the HasSuffix predicate on the "role_id" field.
func RoleIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldRoleID, v))
}

// RoleIDIsNil applies the IsNil predicate on the "role_id" field.
func RoleIDIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldRoleID))
}

// RoleIDNotNil applies the NotNil predicate on the "role_id" field.
func RoleIDNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldRoleID))
}

// RoleIDEqualFold applies the EqualFold predicate on the "role_id" field.
func RoleIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldRoleID, v))
}

// RoleIDContainsFold applies the ContainsFold predicate on the "role_id" field.
func RoleIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldRoleID, v))
}

// RoleNameEQ applies the EQ predicate on the "role_name" field.
func RoleNameEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleName, v))
}

// RoleNameNEQ applies the NEQ predicate on the "role_name" field.
func RoleNameNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldRoleName, v))
}

// RoleNameIn applies the In predicate on the "role_name" field.
func RoleNameIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldRoleName, vs...))
}

// RoleNameNotIn applies the NotIn predicate on the "role_name" field.
func RoleNameNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldRoleName, vs...))
}

// RoleNameGT applies the GT predicate on the "role_name" field.
func RoleNameGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldRoleName, v))
}

// RoleNameGTE applies the GTE predicate on the "role_name" field.
func RoleNameGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldRoleName, v))
}

// RoleNameLT applies the LT predicate on the "role_name" field.
func RoleNameLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldRoleName, v))
}

// RoleNameLTE applies the LTE predicate on the "role_name" field.
func RoleNameLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldRoleName, v))
}

// RoleNameContains applies the Contains predicate on the "role_name" field.
func RoleNameContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldRoleName, v))
}

// RoleNameHasPrefix applies the HasPrefix predicate on the "role_name" field.
func RoleNameHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldRoleName, v))
}

// RoleNameHasSuffix applies the HasSuffix predicate on the "role_name" field.
func RoleNameHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldRoleName, v))
}

// RoleNameIsNil applies the IsNil predicate on the "role_name" field.
func RoleNameIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldRoleName))
}

// RoleNameNotNil applies the NotNil predicate on the "role_name" field.
func RoleNameNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldRoleName))
}

// RoleNameEqualFold applies the EqualFold predicate on the "role_name" field.
func RoleNameEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldRoleName, v))
}

// RoleNameContainsFold applies the ContainsFold predicate on the "role_name" field.
func RoleNameContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldRoleName, v))
}

// RoleSuiteIDEQ applies the EQ predicate on the "role_suite_id" field.
func RoleSuiteIDEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleSuiteID, v))
}

// RoleSuiteIDNEQ applies the NEQ predicate on the "role_suite_id" field.
func RoleSuiteIDNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldRoleSuiteID, v))
}

// RoleSuiteIDIn applies the In predicate on the "role_suite_id" field.
func RoleSuiteIDIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldRoleSuiteID, vs...))
}

// RoleSuiteIDNotIn applies the NotIn predicate on the "role_suite_id" field.
func RoleSuiteIDNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldRoleSuiteID, vs...))
}

// RoleSuiteIDGT applies the GT predicate on the "role_suite_id" field.
func RoleSuiteIDGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldRoleSuiteID, v))
}

// RoleSuiteIDGTE applies the GTE predicate on the "role_suite_id" field.
func RoleSuiteIDGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldRoleSuiteID, v))
}

// RoleSuiteIDLT applies the LT predicate on the "role_suite_id" field.
func RoleSuiteIDLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldRoleSuiteID, v))
}

// RoleSuiteIDLTE applies the LTE predicate on the "role_suite_id" field.
func RoleSuiteIDLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldRoleSuiteID, v))
}

// RoleSuiteIDContains applies the Contains predicate on the "role_suite_id" field.
func RoleSuiteIDContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldRoleSuiteID, v))
}

// RoleSuiteIDHasPrefix applies the HasPrefix predicate on the "role_suite_id" field.
func RoleSuiteIDHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldRoleSuiteID, v))
}

// RoleSuiteIDHasSuffix applies the HasSuffix predicate on the "role_suite_id" field.
func RoleSuiteIDHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldRoleSuiteID, v))
}

// RoleSuiteIDIsNil applies the IsNil predicate on the "role_suite_id" field.
func RoleSuiteIDIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldRoleSuiteID))
}

// RoleSuiteIDNotNil applies the NotNil predicate on the "role_suite_id" field.
func RoleSuiteIDNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldRoleSuiteID))
}

// RoleSuiteIDEqualFold applies the EqualFold predicate on the "role_suite_id" field.
func RoleSuiteIDEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldRoleSuiteID, v))
}

// RoleSuiteIDContainsFold applies the ContainsFold predicate on the "role_suite_id" field.
func RoleSuiteIDContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldRoleSuiteID, v))
}

// RoleSuiteNameEQ applies the EQ predicate on the "role_suite_name" field.
func RoleSuiteNameEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEQ(FieldRoleSuiteName, v))
}

// RoleSuiteNameNEQ applies the NEQ predicate on the "role_suite_name" field.
func RoleSuiteNameNEQ(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNEQ(FieldRoleSuiteName, v))
}

// RoleSuiteNameIn applies the In predicate on the "role_suite_name" field.
func RoleSuiteNameIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIn(FieldRoleSuiteName, vs...))
}

// RoleSuiteNameNotIn applies the NotIn predicate on the "role_suite_name" field.
func RoleSuiteNameNotIn(vs ...string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotIn(FieldRoleSuiteName, vs...))
}

// RoleSuiteNameGT applies the GT predicate on the "role_suite_name" field.
func RoleSuiteNameGT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGT(FieldRoleSuiteName, v))
}

// RoleSuiteNameGTE applies the GTE predicate on the "role_suite_name" field.
func RoleSuiteNameGTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldGTE(FieldRoleSuiteName, v))
}

// RoleSuiteNameLT applies the LT predicate on the "role_suite_name" field.
func RoleSuiteNameLT(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLT(FieldRoleSuiteName, v))
}

// RoleSuiteNameLTE applies the LTE predicate on the "role_suite_name" field.
func RoleSuiteNameLTE(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldLTE(FieldRoleSuiteName, v))
}

// RoleSuiteNameContains applies the Contains predicate on the "role_suite_name" field.
func RoleSuiteNameContains(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContains(FieldRoleSuiteName, v))
}

// RoleSuiteNameHasPrefix applies the HasPrefix predicate on the "role_suite_name" field.
func RoleSuiteNameHasPrefix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasPrefix(FieldRoleSuiteName, v))
}

// RoleSuiteNameHasSuffix applies the HasSuffix predicate on the "role_suite_name" field.
func RoleSuiteNameHasSuffix(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldHasSuffix(FieldRoleSuiteName, v))
}

// RoleSuiteNameIsNil applies the IsNil predicate on the "role_suite_name" field.
func RoleSuiteNameIsNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldIsNull(FieldRoleSuiteName))
}

// RoleSuiteNameNotNil applies the NotNil predicate on the "role_suite_name" field.
func RoleSuiteNameNotNil() predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldNotNull(FieldRoleSuiteName))
}

// RoleSuiteNameEqualFold applies the EqualFold predicate on the "role_suite_name" field.
func RoleSuiteNameEqualFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldEqualFold(FieldRoleSuiteName, v))
}

// RoleSuiteNameContainsFold applies the ContainsFold predicate on the "role_suite_name" field.
func RoleSuiteNameContainsFold(v string) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.FieldContainsFold(FieldRoleSuiteName, v))
}

// HasEntitlement applies the HasEdge predicate on the "entitlement" edge.
func HasEntitlement() predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, EntitlementTable, EntitlementColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasEntitlementWith applies the HasEdge predicate on the "entitlement" edge with a given conditions (other predicates).
func HasEntitlementWith(preds ...predicate.Entitlement) predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := newEntitlementStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRole applies the HasEdge predicate on the "role" edge.
func HasRole() predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, RoleTable, RoleColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRoleWith applies the HasEdge predicate on the "role" edge with a given conditions (other predicates).
func HasRoleWith(preds ...predicate.Role) predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := newRoleStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRoleSuite applies the HasEdge predicate on the "role_suite" edge.
func HasRoleSuite() predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, RoleSuiteTable, RoleSuiteColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRoleSuiteWith applies the HasEdge predicate on the "role_suite" edge with a given conditions (other predicates).
func HasRoleSuiteWith(preds ...predicate.RoleSuite) predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := newRoleSuiteStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasGrantRequest applies the HasEdge predicate on the "grant_request" edge.
func HasGrantRequest() predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, GrantRequestTable, GrantRequestColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasGrantRequestWith applies the HasEdge predicate on the "grant_request" edge with a given conditions (other predicates).
func HasGrantRequestWith(preds ...predicate.GrantRequest) predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := newGrantRequestStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRevokeRequest applies the HasEdge predicate on the "revoke_request" edge.
func HasRevokeRequest() predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, RevokeRequestTable, RevokeRequestColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRevokeRequestWith applies the HasEdge predicate on the "revoke_request" edge with a given conditions (other predicates).
func HasRevokeRequestWith(preds ...predicate.RevokeRequest) predicate.PermissionHistory {
	return predicate.PermissionHistory(func(s *sql.Selector) {
		step := newRevokeRequestStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PermissionHistory) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PermissionHistory) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PermissionHistory) predicate.PermissionHistory {
	return predicate.PermissionHistory(sql.NotPredicates(p))
}
