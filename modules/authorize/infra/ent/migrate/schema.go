// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthzActionsColumns holds the columns for the "authz_actions" table.
	AuthzActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "resource_id", Type: field.TypeString},
	}
	// AuthzActionsTable holds the schema information for the "authz_actions" table.
	AuthzActionsTable = &schema.Table{
		Name:       "authz_actions",
		Columns:    AuthzActionsColumns,
		PrimaryKey: []*schema.Column{AuthzActionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_actions_authz_resources_resource",
				Columns:    []*schema.Column{AuthzActionsColumns[4]},
				RefColumns: []*schema.Column{AuthzResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AuthzEntitlementsColumns holds the columns for the "authz_entitlements" table.
	AuthzEntitlementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "action_expr", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "subject_type", Type: field.TypeEnum, Enums: []string{"nikki_user", "nikki_group", "nikki_role", "custom"}},
		{Name: "subject_ref", Type: field.TypeString},
		{Name: "scope_ref", Type: field.TypeString, Nullable: true},
		{Name: "action_id", Type: field.TypeString, Nullable: true},
		{Name: "resource_id", Type: field.TypeString, Nullable: true},
	}
	// AuthzEntitlementsTable holds the schema information for the "authz_entitlements" table.
	AuthzEntitlementsTable = &schema.Table{
		Name:       "authz_entitlements",
		Columns:    AuthzEntitlementsColumns,
		PrimaryKey: []*schema.Column{AuthzEntitlementsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_entitlements_authz_actions_action",
				Columns:    []*schema.Column{AuthzEntitlementsColumns[7]},
				RefColumns: []*schema.Column{AuthzActionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_entitlements_authz_resources_resource",
				Columns:    []*schema.Column{AuthzEntitlementsColumns[8]},
				RefColumns: []*schema.Column{AuthzResourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "entitlement_action_expr",
				Unique:  true,
				Columns: []*schema.Column{AuthzEntitlementsColumns[1]},
			},
		},
	}
	// AuthzGrantRequestsColumns holds the columns for the "authz_grant_requests" table.
	AuthzGrantRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "attachment_url", Type: field.TypeString, Nullable: true},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "etag", Type: field.TypeString},
		{Name: "receiver_id", Type: field.TypeString},
		{Name: "target_type", Type: field.TypeEnum, Enums: []string{"role", "suite"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "approved", "rejected"}},
		{Name: "target_role_id", Type: field.TypeString, Nullable: true},
		{Name: "target_suite_id", Type: field.TypeString, Nullable: true},
	}
	// AuthzGrantRequestsTable holds the schema information for the "authz_grant_requests" table.
	AuthzGrantRequestsTable = &schema.Table{
		Name:       "authz_grant_requests",
		Columns:    AuthzGrantRequestsColumns,
		PrimaryKey: []*schema.Column{AuthzGrantRequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_grant_requests_authz_roles_role",
				Columns:    []*schema.Column{AuthzGrantRequestsColumns[9]},
				RefColumns: []*schema.Column{AuthzRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_grant_requests_authz_role_suites_role_suite",
				Columns:    []*schema.Column{AuthzGrantRequestsColumns[10]},
				RefColumns: []*schema.Column{AuthzRoleSuitesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AuthzPermissionHistoriesColumns holds the columns for the "authz_permission_histories" table.
	AuthzPermissionHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "approver_id", Type: field.TypeString},
		{Name: "approver_email", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "effect", Type: field.TypeEnum, Enums: []string{"GRANT", "REVOKE", "ENT_DELETED", "ROLE_DELETED", "SUITE_DELETED"}},
		{Name: "entitlement_expr", Type: field.TypeString, Nullable: true},
		{Name: "receiver_id", Type: field.TypeString},
		{Name: "role_name", Type: field.TypeString, Nullable: true},
		{Name: "role_suite_name", Type: field.TypeString, Nullable: true},
		{Name: "entitlement_id", Type: field.TypeString, Nullable: true},
		{Name: "role_id", Type: field.TypeString, Nullable: true},
		{Name: "role_suite_id", Type: field.TypeString, Nullable: true},
		{Name: "grant_request_id", Type: field.TypeString, Nullable: true},
		{Name: "revoke_request_id", Type: field.TypeString, Nullable: true},
	}
	// AuthzPermissionHistoriesTable holds the schema information for the "authz_permission_histories" table.
	AuthzPermissionHistoriesTable = &schema.Table{
		Name:       "authz_permission_histories",
		Columns:    AuthzPermissionHistoriesColumns,
		PrimaryKey: []*schema.Column{AuthzPermissionHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_permission_histories_authz_entitlements_entitlement",
				Columns:    []*schema.Column{AuthzPermissionHistoriesColumns[9]},
				RefColumns: []*schema.Column{AuthzEntitlementsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_permission_histories_authz_roles_role",
				Columns:    []*schema.Column{AuthzPermissionHistoriesColumns[10]},
				RefColumns: []*schema.Column{AuthzRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_permission_histories_authz_role_suites_role_suite",
				Columns:    []*schema.Column{AuthzPermissionHistoriesColumns[11]},
				RefColumns: []*schema.Column{AuthzRoleSuitesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_permission_histories_authz_grant_requests_grant_request",
				Columns:    []*schema.Column{AuthzPermissionHistoriesColumns[12]},
				RefColumns: []*schema.Column{AuthzGrantRequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_permission_histories_authz_revoke_requests_revoke_request",
				Columns:    []*schema.Column{AuthzPermissionHistoriesColumns[13]},
				RefColumns: []*schema.Column{AuthzRevokeRequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AuthzResourcesColumns holds the columns for the "authz_resources" table.
	AuthzResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "scope_type", Type: field.TypeEnum, Enums: []string{"domain", "org", "hierarchy", "private"}},
	}
	// AuthzResourcesTable holds the schema information for the "authz_resources" table.
	AuthzResourcesTable = &schema.Table{
		Name:       "authz_resources",
		Columns:    AuthzResourcesColumns,
		PrimaryKey: []*schema.Column{AuthzResourcesColumns[0]},
	}
	// AuthzRevokeRequestsColumns holds the columns for the "authz_revoke_requests" table.
	AuthzRevokeRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "attachment_url", Type: field.TypeString, Nullable: true},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "etag", Type: field.TypeString},
		{Name: "receiver_id", Type: field.TypeString},
		{Name: "target_type", Type: field.TypeEnum, Enums: []string{"role", "suite"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "approved", "rejected"}},
		{Name: "target_role_id", Type: field.TypeString, Nullable: true},
		{Name: "target_suite_id", Type: field.TypeString, Nullable: true},
	}
	// AuthzRevokeRequestsTable holds the schema information for the "authz_revoke_requests" table.
	AuthzRevokeRequestsTable = &schema.Table{
		Name:       "authz_revoke_requests",
		Columns:    AuthzRevokeRequestsColumns,
		PrimaryKey: []*schema.Column{AuthzRevokeRequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_revoke_requests_authz_roles_role",
				Columns:    []*schema.Column{AuthzRevokeRequestsColumns[9]},
				RefColumns: []*schema.Column{AuthzRolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authz_revoke_requests_authz_role_suites_role_suite",
				Columns:    []*schema.Column{AuthzRevokeRequestsColumns[10]},
				RefColumns: []*schema.Column{AuthzRoleSuitesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AuthzRolesColumns holds the columns for the "authz_roles" table.
	AuthzRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "display_name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "etag", Type: field.TypeString},
		{Name: "owner_type", Type: field.TypeEnum, Enums: []string{"user", "group"}},
		{Name: "owner_id", Type: field.TypeString},
		{Name: "is_requestable", Type: field.TypeBool},
		{Name: "is_required_attachment", Type: field.TypeBool},
		{Name: "is_required_comment", Type: field.TypeBool},
	}
	// AuthzRolesTable holds the schema information for the "authz_roles" table.
	AuthzRolesTable = &schema.Table{
		Name:       "authz_roles",
		Columns:    AuthzRolesColumns,
		PrimaryKey: []*schema.Column{AuthzRolesColumns[0]},
	}
	// AuthzRoleRolesuiteColumns holds the columns for the "authz_role_rolesuite" table.
	AuthzRoleRolesuiteColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeString},
		{Name: "role_suite_id", Type: field.TypeString},
	}
	// AuthzRoleRolesuiteTable holds the schema information for the "authz_role_rolesuite" table.
	AuthzRoleRolesuiteTable = &schema.Table{
		Name:       "authz_role_rolesuite",
		Columns:    AuthzRoleRolesuiteColumns,
		PrimaryKey: []*schema.Column{AuthzRoleRolesuiteColumns[1], AuthzRoleRolesuiteColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_role_rolesuite_authz_roles_role",
				Columns:    []*schema.Column{AuthzRoleRolesuiteColumns[0]},
				RefColumns: []*schema.Column{AuthzRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "authz_role_rolesuite_authz_role_suites_role_suite",
				Columns:    []*schema.Column{AuthzRoleRolesuiteColumns[1]},
				RefColumns: []*schema.Column{AuthzRoleSuitesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AuthzRoleSuitesColumns holds the columns for the "authz_role_suites" table.
	AuthzRoleSuitesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeString},
		{Name: "display_name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "etag", Type: field.TypeString},
		{Name: "owner_type", Type: field.TypeEnum, Enums: []string{"user", "group"}},
		{Name: "owner_id", Type: field.TypeString},
		{Name: "is_requestable", Type: field.TypeBool},
		{Name: "is_required_attachment", Type: field.TypeBool},
		{Name: "is_required_comment", Type: field.TypeBool},
	}
	// AuthzRoleSuitesTable holds the schema information for the "authz_role_suites" table.
	AuthzRoleSuitesTable = &schema.Table{
		Name:       "authz_role_suites",
		Columns:    AuthzRoleSuitesColumns,
		PrimaryKey: []*schema.Column{AuthzRoleSuitesColumns[0]},
	}
	// AuthzRoleSuiteUserColumns holds the columns for the "authz_role_suite_user" table.
	AuthzRoleSuiteUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "approver_id", Type: field.TypeString},
		{Name: "receiver_id", Type: field.TypeString},
		{Name: "receiver_type", Type: field.TypeEnum, Enums: []string{"user", "group"}},
		{Name: "role_suite_id", Type: field.TypeString},
	}
	// AuthzRoleSuiteUserTable holds the schema information for the "authz_role_suite_user" table.
	AuthzRoleSuiteUserTable = &schema.Table{
		Name:       "authz_role_suite_user",
		Columns:    AuthzRoleSuiteUserColumns,
		PrimaryKey: []*schema.Column{AuthzRoleSuiteUserColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_role_suite_user_authz_role_suites_role_suite",
				Columns:    []*schema.Column{AuthzRoleSuiteUserColumns[4]},
				RefColumns: []*schema.Column{AuthzRoleSuitesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolesuiteuser_role_suite_id_receiver_id",
				Unique:  true,
				Columns: []*schema.Column{AuthzRoleSuiteUserColumns[4], AuthzRoleSuiteUserColumns[2]},
			},
		},
	}
	// AuthzRoleUserColumns holds the columns for the "authz_role_user" table.
	AuthzRoleUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "approver_id", Type: field.TypeString},
		{Name: "receiver_id", Type: field.TypeString},
		{Name: "receiver_type", Type: field.TypeEnum, Enums: []string{"user", "group"}},
		{Name: "role_id", Type: field.TypeString},
	}
	// AuthzRoleUserTable holds the schema information for the "authz_role_user" table.
	AuthzRoleUserTable = &schema.Table{
		Name:       "authz_role_user",
		Columns:    AuthzRoleUserColumns,
		PrimaryKey: []*schema.Column{AuthzRoleUserColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authz_role_user_authz_roles_role",
				Columns:    []*schema.Column{AuthzRoleUserColumns[4]},
				RefColumns: []*schema.Column{AuthzRolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "roleuser_role_id_receiver_id",
				Unique:  true,
				Columns: []*schema.Column{AuthzRoleUserColumns[4], AuthzRoleUserColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthzActionsTable,
		AuthzEntitlementsTable,
		AuthzGrantRequestsTable,
		AuthzPermissionHistoriesTable,
		AuthzResourcesTable,
		AuthzRevokeRequestsTable,
		AuthzRolesTable,
		AuthzRoleRolesuiteTable,
		AuthzRoleSuitesTable,
		AuthzRoleSuiteUserTable,
		AuthzRoleUserTable,
	}
)

func init() {
	AuthzActionsTable.ForeignKeys[0].RefTable = AuthzResourcesTable
	AuthzActionsTable.Annotation = &entsql.Annotation{
		Table: "authz_actions",
	}
	AuthzEntitlementsTable.ForeignKeys[0].RefTable = AuthzActionsTable
	AuthzEntitlementsTable.ForeignKeys[1].RefTable = AuthzResourcesTable
	AuthzEntitlementsTable.Annotation = &entsql.Annotation{
		Table: "authz_entitlements",
	}
	AuthzGrantRequestsTable.ForeignKeys[0].RefTable = AuthzRolesTable
	AuthzGrantRequestsTable.ForeignKeys[1].RefTable = AuthzRoleSuitesTable
	AuthzGrantRequestsTable.Annotation = &entsql.Annotation{
		Table: "authz_grant_requests",
	}
	AuthzPermissionHistoriesTable.ForeignKeys[0].RefTable = AuthzEntitlementsTable
	AuthzPermissionHistoriesTable.ForeignKeys[1].RefTable = AuthzRolesTable
	AuthzPermissionHistoriesTable.ForeignKeys[2].RefTable = AuthzRoleSuitesTable
	AuthzPermissionHistoriesTable.ForeignKeys[3].RefTable = AuthzGrantRequestsTable
	AuthzPermissionHistoriesTable.ForeignKeys[4].RefTable = AuthzRevokeRequestsTable
	AuthzPermissionHistoriesTable.Annotation = &entsql.Annotation{
		Table: "authz_permission_histories",
	}
	AuthzResourcesTable.Annotation = &entsql.Annotation{
		Table: "authz_resources",
	}
	AuthzRevokeRequestsTable.ForeignKeys[0].RefTable = AuthzRolesTable
	AuthzRevokeRequestsTable.ForeignKeys[1].RefTable = AuthzRoleSuitesTable
	AuthzRevokeRequestsTable.Annotation = &entsql.Annotation{
		Table: "authz_revoke_requests",
	}
	AuthzRolesTable.Annotation = &entsql.Annotation{
		Table: "authz_roles",
	}
	AuthzRoleRolesuiteTable.ForeignKeys[0].RefTable = AuthzRolesTable
	AuthzRoleRolesuiteTable.ForeignKeys[1].RefTable = AuthzRoleSuitesTable
	AuthzRoleRolesuiteTable.Annotation = &entsql.Annotation{
		Table: "authz_role_rolesuite",
	}
	AuthzRoleSuitesTable.Annotation = &entsql.Annotation{
		Table: "authz_role_suites",
	}
	AuthzRoleSuiteUserTable.ForeignKeys[0].RefTable = AuthzRoleSuitesTable
	AuthzRoleSuiteUserTable.Annotation = &entsql.Annotation{
		Table: "authz_role_suite_user",
	}
	AuthzRoleUserTable.ForeignKeys[0].RefTable = AuthzRolesTable
	AuthzRoleUserTable.Annotation = &entsql.Annotation{
		Table: "authz_role_user",
	}
}
