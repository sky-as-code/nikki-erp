package schema

// import (
// 	"entgo.io/ent"
// 	"entgo.io/ent/dialect/entsql"
// 	"entgo.io/ent/schema"
// 	"entgo.io/ent/schema/edge"
// 	"entgo.io/ent/schema/field"
// 	"entgo.io/ent/schema/index"
// 	"entgo.io/ent/schema/mixin"
// )

// type EntitlementUserMixin struct {
// 	mixin.Schema
// }

// func (EntitlementUserMixin) Fields() []ent.Field {
// 	return []ent.Field{
// 		field.String("approver_id").Immutable(),

// 		field.String("receiver_id").Immutable(),

// 		field.Enum("receiver_type").
// 			Values("user", "group").
// 			Immutable(),

// 		field.String("entitlement_id").Immutable(),
// 	}
// }

// type EntitlementUser struct {
// 	ent.Schema
// }

// func (EntitlementUser) Fields() []ent.Field {
// 	return nil
// }

// func (EntitlementUser) Edges() []ent.Edge {
// 	return []ent.Edge{
// 		edge.To("entitlement", Entitlement.Type).
// 			Field("entitlement_id").
// 			Immutable().
// 			Required().
// 			Unique().
// 			Annotations(entsql.Annotation{
// 				OnDelete: entsql.Cascade,
// 			}),

// 		// NOT TODO: No need to add edge to User because each module should be loose-coupled
// 		// in terms of data.
// 	}
// }

// func (EntitlementUser) Annotations() []schema.Annotation {
// 	return []schema.Annotation{
// 		// field.ID("entitlement_id", "receiver_id"),
// 		entsql.Annotation{Table: "authz_entitlement_user"},
// 	}
// }

// func (EntitlementUser) Indexes() []ent.Index {
// 	return []ent.Index{
// 		index.Fields("entitlement_id", "receiver_id").Unique(),
// 	}
// }

// func (EntitlementUser) Mixin() []ent.Mixin {
// 	return []ent.Mixin{
// 		EntitlementUserMixin{},
// 	}
// }
