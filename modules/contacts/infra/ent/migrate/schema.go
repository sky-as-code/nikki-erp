// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ContactsCommChannelsColumns holds the columns for the "contacts_comm_channels" table.
	ContactsCommChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "etag", Type: field.TypeString},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"Phone", "Zalo", "Facebook", "Email", "Post"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "value_json", Type: field.TypeJSON, Nullable: true},
		{Name: "party_id", Type: field.TypeString},
	}
	// ContactsCommChannelsTable holds the schema information for the "contacts_comm_channels" table.
	ContactsCommChannelsTable = &schema.Table{
		Name:       "contacts_comm_channels",
		Columns:    ContactsCommChannelsColumns,
		PrimaryKey: []*schema.Column{ContactsCommChannelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contacts_comm_channels_contacts_parties_party",
				Columns:    []*schema.Column{ContactsCommChannelsColumns[10]},
				RefColumns: []*schema.Column{ContactsPartiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ContactsPartiesColumns holds the columns for the "contacts_parties" table.
	ContactsPartiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "display_name", Type: field.TypeString, Size: 50},
		{Name: "etag", Type: field.TypeString},
		{Name: "job_position", Type: field.TypeString, Nullable: true},
		{Name: "language_id", Type: field.TypeString, Nullable: true},
		{Name: "legal_address", Type: field.TypeString, Nullable: true},
		{Name: "legal_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "nationality_id", Type: field.TypeString, Nullable: true},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "tax_id", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeEnum, Nullable: true, Enums: []string{"Mr", "Mrs", "Ms", "Doctor", "Sir"}},
		{Name: "type", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "website", Type: field.TypeString, Nullable: true},
	}
	// ContactsPartiesTable holds the schema information for the "contacts_parties" table.
	ContactsPartiesTable = &schema.Table{
		Name:       "contacts_parties",
		Columns:    ContactsPartiesColumns,
		PrimaryKey: []*schema.Column{ContactsPartiesColumns[0]},
	}
	// ContactsRelationshipsColumns holds the columns for the "contacts_relationships" table.
	ContactsRelationshipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "etag", Type: field.TypeString},
		{Name: "note", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"employee", "spouse", "parent", "sibling", "emergency", "subsidiary"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "target_party_id", Type: field.TypeString},
	}
	// ContactsRelationshipsTable holds the schema information for the "contacts_relationships" table.
	ContactsRelationshipsTable = &schema.Table{
		Name:       "contacts_relationships",
		Columns:    ContactsRelationshipsColumns,
		PrimaryKey: []*schema.Column{ContactsRelationshipsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contacts_relationships_contacts_parties_party",
				Columns:    []*schema.Column{ContactsRelationshipsColumns[8]},
				RefColumns: []*schema.Column{ContactsPartiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ContactsCommChannelsTable,
		ContactsPartiesTable,
		ContactsRelationshipsTable,
	}
)

func init() {
	ContactsCommChannelsTable.ForeignKeys[0].RefTable = ContactsPartiesTable
	ContactsCommChannelsTable.Annotation = &entsql.Annotation{
		Table: "contacts_comm_channels",
	}
	ContactsPartiesTable.Annotation = &entsql.Annotation{
		Table: "contacts_parties",
	}
	ContactsRelationshipsTable.ForeignKeys[0].RefTable = ContactsPartiesTable
	ContactsRelationshipsTable.Annotation = &entsql.Annotation{
		Table: "contacts_relationships",
	}
}
