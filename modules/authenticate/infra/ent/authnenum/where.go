// Code generated by ent, DO NOT EDIT.

package authnenum

import (
	"entgo.io/ent/dialect/sql"
	"github.com/sky-as-code/nikki-erp/modules/authenticate/infra/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContainsFold(FieldID, id))
}

// Etag applies equality check predicate on the "etag" field. It's identical to EtagEQ.
func Etag(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldEtag, v))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldValue, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldType, v))
}

// EtagEQ applies the EQ predicate on the "etag" field.
func EtagEQ(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldEtag, v))
}

// EtagNEQ applies the NEQ predicate on the "etag" field.
func EtagNEQ(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNEQ(FieldEtag, v))
}

// EtagIn applies the In predicate on the "etag" field.
func EtagIn(vs ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldIn(FieldEtag, vs...))
}

// EtagNotIn applies the NotIn predicate on the "etag" field.
func EtagNotIn(vs ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNotIn(FieldEtag, vs...))
}

// EtagGT applies the GT predicate on the "etag" field.
func EtagGT(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGT(FieldEtag, v))
}

// EtagGTE applies the GTE predicate on the "etag" field.
func EtagGTE(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGTE(FieldEtag, v))
}

// EtagLT applies the LT predicate on the "etag" field.
func EtagLT(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLT(FieldEtag, v))
}

// EtagLTE applies the LTE predicate on the "etag" field.
func EtagLTE(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLTE(FieldEtag, v))
}

// EtagContains applies the Contains predicate on the "etag" field.
func EtagContains(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContains(FieldEtag, v))
}

// EtagHasPrefix applies the HasPrefix predicate on the "etag" field.
func EtagHasPrefix(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldHasPrefix(FieldEtag, v))
}

// EtagHasSuffix applies the HasSuffix predicate on the "etag" field.
func EtagHasSuffix(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldHasSuffix(FieldEtag, v))
}

// EtagEqualFold applies the EqualFold predicate on the "etag" field.
func EtagEqualFold(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEqualFold(FieldEtag, v))
}

// EtagContainsFold applies the ContainsFold predicate on the "etag" field.
func EtagContainsFold(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContainsFold(FieldEtag, v))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLTE(FieldValue, v))
}

// ValueContains applies the Contains predicate on the "value" field.
func ValueContains(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContains(FieldValue, v))
}

// ValueHasPrefix applies the HasPrefix predicate on the "value" field.
func ValueHasPrefix(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldHasPrefix(FieldValue, v))
}

// ValueHasSuffix applies the HasSuffix predicate on the "value" field.
func ValueHasSuffix(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldHasSuffix(FieldValue, v))
}

// ValueIsNil applies the IsNil predicate on the "value" field.
func ValueIsNil() predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldIsNull(FieldValue))
}

// ValueNotNil applies the NotNil predicate on the "value" field.
func ValueNotNil() predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNotNull(FieldValue))
}

// ValueEqualFold applies the EqualFold predicate on the "value" field.
func ValueEqualFold(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEqualFold(FieldValue, v))
}

// ValueContainsFold applies the ContainsFold predicate on the "value" field.
func ValueContainsFold(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContainsFold(FieldValue, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.FieldContainsFold(FieldType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuthNEnum) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuthNEnum) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuthNEnum) predicate.AuthNEnum {
	return predicate.AuthNEnum(sql.NotPredicates(p))
}
