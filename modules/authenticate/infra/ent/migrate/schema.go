// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoreEnumsColumns holds the columns for the "core_enums" table.
	CoreEnumsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "etag", Type: field.TypeString},
		{Name: "label", Type: field.TypeJSON},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString},
	}
	// CoreEnumsTable holds the schema information for the "core_enums" table.
	CoreEnumsTable = &schema.Table{
		Name:       "core_enums",
		Columns:    CoreEnumsColumns,
		PrimaryKey: []*schema.Column{CoreEnumsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "enum_value_type",
				Unique:  true,
				Columns: []*schema.Column{CoreEnumsColumns[3], CoreEnumsColumns[4]},
			},
		},
	}
	// AuthnAttemptsColumns holds the columns for the "authn_attempts" table.
	AuthnAttemptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "methods", Type: field.TypeJSON},
		{Name: "current_method", Type: field.TypeString, Nullable: true},
		{Name: "device_ip", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "device_location", Type: field.TypeString, Nullable: true},
		{Name: "expired_at", Type: field.TypeTime},
		{Name: "is_genuine", Type: field.TypeBool},
		{Name: "subject_type", Type: field.TypeString},
		{Name: "subject_ref", Type: field.TypeString},
		{Name: "subject_source_ref", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// AuthnAttemptsTable holds the schema information for the "authn_attempts" table.
	AuthnAttemptsTable = &schema.Table{
		Name:       "authn_attempts",
		Columns:    AuthnAttemptsColumns,
		PrimaryKey: []*schema.Column{AuthnAttemptsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "loginattempt_subject_type_subject_ref",
				Unique:  false,
				Columns: []*schema.Column{AuthnAttemptsColumns[9], AuthnAttemptsColumns[10]},
			},
		},
	}
	// AuthnMethodSettingsColumns holds the columns for the "authn_method_settings" table.
	AuthnMethodSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "method", Type: field.TypeString},
		{Name: "order", Type: field.TypeInt},
		{Name: "max_failures", Type: field.TypeInt},
		{Name: "lock_duration_secs", Type: field.TypeInt, Nullable: true},
		{Name: "subject_type", Type: field.TypeString},
		{Name: "subject_ref", Type: field.TypeString, Nullable: true},
		{Name: "subject_source_ref", Type: field.TypeString, Nullable: true},
	}
	// AuthnMethodSettingsTable holds the schema information for the "authn_method_settings" table.
	AuthnMethodSettingsTable = &schema.Table{
		Name:       "authn_method_settings",
		Columns:    AuthnMethodSettingsColumns,
		PrimaryKey: []*schema.Column{AuthnMethodSettingsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "methodsetting_subject_type_subject_ref",
				Unique:  false,
				Columns: []*schema.Column{AuthnMethodSettingsColumns[5], AuthnMethodSettingsColumns[6]},
			},
		},
	}
	// AuthnPasswordStoresColumns holds the columns for the "authn_password_stores" table.
	AuthnPasswordStoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "password_expired_at", Type: field.TypeTime, Nullable: true},
		{Name: "password_updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "passwordtmp", Type: field.TypeString, Nullable: true},
		{Name: "passwordtmp_expired_at", Type: field.TypeTime, Nullable: true},
		{Name: "passwordotp", Type: field.TypeString, Nullable: true},
		{Name: "passwordotp_expired_at", Type: field.TypeTime, Nullable: true},
		{Name: "subject_type", Type: field.TypeString},
		{Name: "subject_ref", Type: field.TypeString},
		{Name: "subject_source_ref", Type: field.TypeString, Nullable: true},
	}
	// AuthnPasswordStoresTable holds the schema information for the "authn_password_stores" table.
	AuthnPasswordStoresTable = &schema.Table{
		Name:       "authn_password_stores",
		Columns:    AuthnPasswordStoresColumns,
		PrimaryKey: []*schema.Column{AuthnPasswordStoresColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "passwordstore_subject_type_subject_ref",
				Unique:  false,
				Columns: []*schema.Column{AuthnPasswordStoresColumns[8], AuthnPasswordStoresColumns[9]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoreEnumsTable,
		AuthnAttemptsTable,
		AuthnMethodSettingsTable,
		AuthnPasswordStoresTable,
	}
)

func init() {
	CoreEnumsTable.Annotation = &entsql.Annotation{
		Table: "core_enums",
	}
	AuthnAttemptsTable.Annotation = &entsql.Annotation{
		Table: "authn_attempts",
	}
	AuthnMethodSettingsTable.Annotation = &entsql.Annotation{
		Table: "authn_method_settings",
	}
	AuthnPasswordStoresTable.Annotation = &entsql.Annotation{
		Table: "authn_password_stores",
	}
}
