// Code generated by ent, DO NOT EDIT.

package methodsetting

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the methodsetting type in the database.
	Label = "method_setting"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldOrder holds the string denoting the order field in the database.
	FieldOrder = "order"
	// FieldMaxFailures holds the string denoting the max_failures field in the database.
	FieldMaxFailures = "max_failures"
	// FieldLockDurationSecs holds the string denoting the lock_duration_secs field in the database.
	FieldLockDurationSecs = "lock_duration_secs"
	// FieldSubjectType holds the string denoting the subject_type field in the database.
	FieldSubjectType = "subject_type"
	// FieldSubjectRef holds the string denoting the subject_ref field in the database.
	FieldSubjectRef = "subject_ref"
	// FieldSubjectSourceRef holds the string denoting the subject_source_ref field in the database.
	FieldSubjectSourceRef = "subject_source_ref"
	// Table holds the table name of the methodsetting in the database.
	Table = "authn_method_settings"
)

// Columns holds all SQL columns for methodsetting fields.
var Columns = []string{
	FieldID,
	FieldMethod,
	FieldOrder,
	FieldMaxFailures,
	FieldLockDurationSecs,
	FieldSubjectType,
	FieldSubjectRef,
	FieldSubjectSourceRef,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the MethodSetting queries.
type OrderOption = func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMethod orders the results by the method field.
func ByMethod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMethod, opts...).ToFunc()
}

// ByOrder orders the results by the order field.
func ByOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrder, opts...).ToFunc()
}

// ByMaxFailures orders the results by the max_failures field.
func ByMaxFailures(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxFailures, opts...).ToFunc()
}

// ByLockDurationSecs orders the results by the lock_duration_secs field.
func ByLockDurationSecs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLockDurationSecs, opts...).ToFunc()
}

// BySubjectType orders the results by the subject_type field.
func BySubjectType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubjectType, opts...).ToFunc()
}

// BySubjectRef orders the results by the subject_ref field.
func BySubjectRef(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubjectRef, opts...).ToFunc()
}

// BySubjectSourceRef orders the results by the subject_source_ref field.
func BySubjectSourceRef(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubjectSourceRef, opts...).ToFunc()
}
